// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Pp {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhFKaWxpLlByb3RvY29scy5wcCK7AgoHU3BpbkFj",
            "axIxCglQbGF0ZUluZm8YASADKAsyHi5KaWxpLlByb3RvY29scy5wcC5TaW5n",
            "bGVQbGF0ZRIOCgZFeHBMZW4YAiADKAUSLQoJV2lsZFBsYXRlGAMgASgLMhou",
            "SmlsaS5Qcm90b2NvbHMucHAuQ29sdW1uRhIRCglIYXNSZXNwaW4YBCABKAgS",
            "EQoJSGFzRXhwYW5kGAUgASgIEhAKCFRvdGFsV2luGAYgASgBEhEKCVNob3dJ",
            "bmRleBgHIAEoCRIQCghOb3dNb25leRgIIAEoARIPCgdBY2tUeXBlGAkgASgF",
            "EikKBkpQSW5mbxgKIAEoCzIZLkppbGkuUHJvdG9jb2xzLnBwLkpQSW5mbxIL",
            "CgNSVFAYCyABKAESCwoDTElEGAwgASgFEgsKA1JJRBgNIAEoBSLiAQoLU2lu",
            "Z2xlUGxhdGUSMwoNQXdhcmREYXRhTGlzdBgBIAMoCzIcLkppbGkuUHJvdG9j",
            "b2xzLnBwLkF3YXJkRGF0YRIuCgtQbGF0ZVN5bWJvbBgCIAMoCzIZLkppbGku",
            "UHJvdG9jb2xzLnBwLkNvbHVtbhIVCg1Bd2FyZFR5cGVGbGFnGAMgASgFEhAK",
            "CFBsYXRlV2luGAQgASgBEg8KB0xpbmVXaW4YBSABKAESDQoFSlBXaW4YBiAB",
            "KAESEwoLTGluZVBpZ011bHQYByABKAESEAoISXNOZXdQaWcYCCABKAgiFwoH",
            "Q29sdW1uRhIMCgRSb3dGGAEgAygBIjsKBkpQSW5mbxIOCgZGcm9udHMYASAD",
            "KAESEAoIT2RkUHJpemUYAiADKAESDwoHQmFzZUJldBgDIAEoASJbCglBd2Fy",
            "ZERhdGESEwoLQXdhcmRTeW1ib2wYASABKAUSEQoJQXdhcmRMaW5lGAIgASgF",
            "EhIKCkF3YXJkQ291bnQYAyABKAUSEgoKQXdhcmRNb25leRgEIAEoASIVCgZD",
            "b2x1bW4SCwoDUm93GAEgAygFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Pp.SpinAck), global::Jili.Protocols.Pp.SpinAck.Parser, new[]{ "PlateInfo", "ExpLen", "WildPlate", "HasRespin", "HasExpand", "TotalWin", "ShowIndex", "NowMoney", "AckType", "JPInfo", "RTP", "LID", "RID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Pp.SinglePlate), global::Jili.Protocols.Pp.SinglePlate.Parser, new[]{ "AwardDataList", "PlateSymbol", "AwardTypeFlag", "PlateWin", "LineWin", "JPWin", "LinePigMult", "IsNewPig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Pp.ColumnF), global::Jili.Protocols.Pp.ColumnF.Parser, new[]{ "RowF" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Pp.JPInfo), global::Jili.Protocols.Pp.JPInfo.Parser, new[]{ "Fronts", "OddPrize", "BaseBet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Pp.AwardData), global::Jili.Protocols.Pp.AwardData.Parser, new[]{ "AwardSymbol", "AwardLine", "AwardCount", "AwardMoney" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Pp.Column), global::Jili.Protocols.Pp.Column.Parser, new[]{ "Row" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Pp.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      plateInfo_ = other.plateInfo_.Clone();
      expLen_ = other.expLen_.Clone();
      wildPlate_ = other.wildPlate_ != null ? other.wildPlate_.Clone() : null;
      hasRespin_ = other.hasRespin_;
      hasExpand_ = other.hasExpand_;
      totalWin_ = other.totalWin_;
      showIndex_ = other.showIndex_;
      nowMoney_ = other.nowMoney_;
      ackType_ = other.ackType_;
      jPInfo_ = other.jPInfo_ != null ? other.jPInfo_.Clone() : null;
      rTP_ = other.rTP_;
      lID_ = other.lID_;
      rID_ = other.rID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "PlateInfo" field.</summary>
    public const int PlateInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Pp.SinglePlate> _repeated_plateInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Pp.SinglePlate.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Pp.SinglePlate> plateInfo_ = new pbc::RepeatedField<global::Jili.Protocols.Pp.SinglePlate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Pp.SinglePlate> PlateInfo {
      get { return plateInfo_; }
    }

    /// <summary>Field number for the "ExpLen" field.</summary>
    public const int ExpLenFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_expLen_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> expLen_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ExpLen {
      get { return expLen_; }
    }

    /// <summary>Field number for the "WildPlate" field.</summary>
    public const int WildPlateFieldNumber = 3;
    private global::Jili.Protocols.Pp.ColumnF wildPlate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Pp.ColumnF WildPlate {
      get { return wildPlate_; }
      set {
        wildPlate_ = value;
      }
    }

    /// <summary>Field number for the "HasRespin" field.</summary>
    public const int HasRespinFieldNumber = 4;
    private bool hasRespin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRespin {
      get { return hasRespin_; }
      set {
        hasRespin_ = value;
      }
    }

    /// <summary>Field number for the "HasExpand" field.</summary>
    public const int HasExpandFieldNumber = 5;
    private bool hasExpand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpand {
      get { return hasExpand_; }
      set {
        hasExpand_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 6;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "ShowIndex" field.</summary>
    public const int ShowIndexFieldNumber = 7;
    private string showIndex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShowIndex {
      get { return showIndex_; }
      set {
        showIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NowMoney" field.</summary>
    public const int NowMoneyFieldNumber = 8;
    private double nowMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NowMoney {
      get { return nowMoney_; }
      set {
        nowMoney_ = value;
      }
    }

    /// <summary>Field number for the "AckType" field.</summary>
    public const int AckTypeFieldNumber = 9;
    private int ackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "JPInfo" field.</summary>
    public const int JPInfoFieldNumber = 10;
    private global::Jili.Protocols.Pp.JPInfo jPInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Pp.JPInfo JPInfo {
      get { return jPInfo_; }
      set {
        jPInfo_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 11;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    /// <summary>Field number for the "LID" field.</summary>
    public const int LIDFieldNumber = 12;
    private int lID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LID {
      get { return lID_; }
      set {
        lID_ = value;
      }
    }

    /// <summary>Field number for the "RID" field.</summary>
    public const int RIDFieldNumber = 13;
    private int rID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RID {
      get { return rID_; }
      set {
        rID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!plateInfo_.Equals(other.plateInfo_)) return false;
      if(!expLen_.Equals(other.expLen_)) return false;
      if (!object.Equals(WildPlate, other.WildPlate)) return false;
      if (HasRespin != other.HasRespin) return false;
      if (HasExpand != other.HasExpand) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (ShowIndex != other.ShowIndex) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NowMoney, other.NowMoney)) return false;
      if (AckType != other.AckType) return false;
      if (!object.Equals(JPInfo, other.JPInfo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      if (LID != other.LID) return false;
      if (RID != other.RID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= plateInfo_.GetHashCode();
      hash ^= expLen_.GetHashCode();
      if (wildPlate_ != null) hash ^= WildPlate.GetHashCode();
      if (HasRespin != false) hash ^= HasRespin.GetHashCode();
      if (HasExpand != false) hash ^= HasExpand.GetHashCode();
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (ShowIndex.Length != 0) hash ^= ShowIndex.GetHashCode();
      if (NowMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NowMoney);
      if (AckType != 0) hash ^= AckType.GetHashCode();
      if (jPInfo_ != null) hash ^= JPInfo.GetHashCode();
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (LID != 0) hash ^= LID.GetHashCode();
      if (RID != 0) hash ^= RID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      plateInfo_.WriteTo(output, _repeated_plateInfo_codec);
      expLen_.WriteTo(output, _repeated_expLen_codec);
      if (wildPlate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WildPlate);
      }
      if (HasRespin != false) {
        output.WriteRawTag(32);
        output.WriteBool(HasRespin);
      }
      if (HasExpand != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasExpand);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AckType);
      }
      if (jPInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(JPInfo);
      }
      if (RTP != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      plateInfo_.WriteTo(ref output, _repeated_plateInfo_codec);
      expLen_.WriteTo(ref output, _repeated_expLen_codec);
      if (wildPlate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WildPlate);
      }
      if (HasRespin != false) {
        output.WriteRawTag(32);
        output.WriteBool(HasRespin);
      }
      if (HasExpand != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasExpand);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AckType);
      }
      if (jPInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(JPInfo);
      }
      if (RTP != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += plateInfo_.CalculateSize(_repeated_plateInfo_codec);
      size += expLen_.CalculateSize(_repeated_expLen_codec);
      if (wildPlate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WildPlate);
      }
      if (HasRespin != false) {
        size += 1 + 1;
      }
      if (HasExpand != false) {
        size += 1 + 1;
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (ShowIndex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowIndex);
      }
      if (NowMoney != 0D) {
        size += 1 + 8;
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckType);
      }
      if (jPInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JPInfo);
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (LID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LID);
      }
      if (RID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      plateInfo_.Add(other.plateInfo_);
      expLen_.Add(other.expLen_);
      if (other.wildPlate_ != null) {
        if (wildPlate_ == null) {
          WildPlate = new global::Jili.Protocols.Pp.ColumnF();
        }
        WildPlate.MergeFrom(other.WildPlate);
      }
      if (other.HasRespin != false) {
        HasRespin = other.HasRespin;
      }
      if (other.HasExpand != false) {
        HasExpand = other.HasExpand;
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.ShowIndex.Length != 0) {
        ShowIndex = other.ShowIndex;
      }
      if (other.NowMoney != 0D) {
        NowMoney = other.NowMoney;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      if (other.jPInfo_ != null) {
        if (jPInfo_ == null) {
          JPInfo = new global::Jili.Protocols.Pp.JPInfo();
        }
        JPInfo.MergeFrom(other.JPInfo);
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      if (other.LID != 0) {
        LID = other.LID;
      }
      if (other.RID != 0) {
        RID = other.RID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            plateInfo_.AddEntriesFrom(input, _repeated_plateInfo_codec);
            break;
          }
          case 18:
          case 16: {
            expLen_.AddEntriesFrom(input, _repeated_expLen_codec);
            break;
          }
          case 26: {
            if (wildPlate_ == null) {
              WildPlate = new global::Jili.Protocols.Pp.ColumnF();
            }
            input.ReadMessage(WildPlate);
            break;
          }
          case 32: {
            HasRespin = input.ReadBool();
            break;
          }
          case 40: {
            HasExpand = input.ReadBool();
            break;
          }
          case 49: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 58: {
            ShowIndex = input.ReadString();
            break;
          }
          case 65: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 72: {
            AckType = input.ReadInt32();
            break;
          }
          case 82: {
            if (jPInfo_ == null) {
              JPInfo = new global::Jili.Protocols.Pp.JPInfo();
            }
            input.ReadMessage(JPInfo);
            break;
          }
          case 89: {
            RTP = input.ReadDouble();
            break;
          }
          case 96: {
            LID = input.ReadInt32();
            break;
          }
          case 104: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            plateInfo_.AddEntriesFrom(ref input, _repeated_plateInfo_codec);
            break;
          }
          case 18:
          case 16: {
            expLen_.AddEntriesFrom(ref input, _repeated_expLen_codec);
            break;
          }
          case 26: {
            if (wildPlate_ == null) {
              WildPlate = new global::Jili.Protocols.Pp.ColumnF();
            }
            input.ReadMessage(WildPlate);
            break;
          }
          case 32: {
            HasRespin = input.ReadBool();
            break;
          }
          case 40: {
            HasExpand = input.ReadBool();
            break;
          }
          case 49: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 58: {
            ShowIndex = input.ReadString();
            break;
          }
          case 65: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 72: {
            AckType = input.ReadInt32();
            break;
          }
          case 82: {
            if (jPInfo_ == null) {
              JPInfo = new global::Jili.Protocols.Pp.JPInfo();
            }
            input.ReadMessage(JPInfo);
            break;
          }
          case 89: {
            RTP = input.ReadDouble();
            break;
          }
          case 96: {
            LID = input.ReadInt32();
            break;
          }
          case 104: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SinglePlate : pb::IMessage<SinglePlate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SinglePlate> _parser = new pb::MessageParser<SinglePlate>(() => new SinglePlate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SinglePlate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Pp.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePlate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePlate(SinglePlate other) : this() {
      awardDataList_ = other.awardDataList_.Clone();
      plateSymbol_ = other.plateSymbol_.Clone();
      awardTypeFlag_ = other.awardTypeFlag_;
      plateWin_ = other.plateWin_;
      lineWin_ = other.lineWin_;
      jPWin_ = other.jPWin_;
      linePigMult_ = other.linePigMult_;
      isNewPig_ = other.isNewPig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePlate Clone() {
      return new SinglePlate(this);
    }

    /// <summary>Field number for the "AwardDataList" field.</summary>
    public const int AwardDataListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Pp.AwardData> _repeated_awardDataList_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Pp.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Pp.AwardData> awardDataList_ = new pbc::RepeatedField<global::Jili.Protocols.Pp.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Pp.AwardData> AwardDataList {
      get { return awardDataList_; }
    }

    /// <summary>Field number for the "PlateSymbol" field.</summary>
    public const int PlateSymbolFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Pp.Column> _repeated_plateSymbol_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Pp.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Pp.Column> plateSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Pp.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Pp.Column> PlateSymbol {
      get { return plateSymbol_; }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 3;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "PlateWin" field.</summary>
    public const int PlateWinFieldNumber = 4;
    private double plateWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PlateWin {
      get { return plateWin_; }
      set {
        plateWin_ = value;
      }
    }

    /// <summary>Field number for the "LineWin" field.</summary>
    public const int LineWinFieldNumber = 5;
    private double lineWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LineWin {
      get { return lineWin_; }
      set {
        lineWin_ = value;
      }
    }

    /// <summary>Field number for the "JPWin" field.</summary>
    public const int JPWinFieldNumber = 6;
    private double jPWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double JPWin {
      get { return jPWin_; }
      set {
        jPWin_ = value;
      }
    }

    /// <summary>Field number for the "LinePigMult" field.</summary>
    public const int LinePigMultFieldNumber = 7;
    private double linePigMult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LinePigMult {
      get { return linePigMult_; }
      set {
        linePigMult_ = value;
      }
    }

    /// <summary>Field number for the "IsNewPig" field.</summary>
    public const int IsNewPigFieldNumber = 8;
    private bool isNewPig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNewPig {
      get { return isNewPig_; }
      set {
        isNewPig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SinglePlate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SinglePlate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!awardDataList_.Equals(other.awardDataList_)) return false;
      if(!plateSymbol_.Equals(other.plateSymbol_)) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlateWin, other.PlateWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LineWin, other.LineWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(JPWin, other.JPWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LinePigMult, other.LinePigMult)) return false;
      if (IsNewPig != other.IsNewPig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= awardDataList_.GetHashCode();
      hash ^= plateSymbol_.GetHashCode();
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (PlateWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlateWin);
      if (LineWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LineWin);
      if (JPWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(JPWin);
      if (LinePigMult != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LinePigMult);
      if (IsNewPig != false) hash ^= IsNewPig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      awardDataList_.WriteTo(output, _repeated_awardDataList_codec);
      plateSymbol_.WriteTo(output, _repeated_plateSymbol_codec);
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardTypeFlag);
      }
      if (PlateWin != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(PlateWin);
      }
      if (LineWin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(LineWin);
      }
      if (JPWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(JPWin);
      }
      if (LinePigMult != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(LinePigMult);
      }
      if (IsNewPig != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsNewPig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      awardDataList_.WriteTo(ref output, _repeated_awardDataList_codec);
      plateSymbol_.WriteTo(ref output, _repeated_plateSymbol_codec);
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardTypeFlag);
      }
      if (PlateWin != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(PlateWin);
      }
      if (LineWin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(LineWin);
      }
      if (JPWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(JPWin);
      }
      if (LinePigMult != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(LinePigMult);
      }
      if (IsNewPig != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsNewPig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += awardDataList_.CalculateSize(_repeated_awardDataList_codec);
      size += plateSymbol_.CalculateSize(_repeated_plateSymbol_codec);
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (PlateWin != 0D) {
        size += 1 + 8;
      }
      if (LineWin != 0D) {
        size += 1 + 8;
      }
      if (JPWin != 0D) {
        size += 1 + 8;
      }
      if (LinePigMult != 0D) {
        size += 1 + 8;
      }
      if (IsNewPig != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SinglePlate other) {
      if (other == null) {
        return;
      }
      awardDataList_.Add(other.awardDataList_);
      plateSymbol_.Add(other.plateSymbol_);
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.PlateWin != 0D) {
        PlateWin = other.PlateWin;
      }
      if (other.LineWin != 0D) {
        LineWin = other.LineWin;
      }
      if (other.JPWin != 0D) {
        JPWin = other.JPWin;
      }
      if (other.LinePigMult != 0D) {
        LinePigMult = other.LinePigMult;
      }
      if (other.IsNewPig != false) {
        IsNewPig = other.IsNewPig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            awardDataList_.AddEntriesFrom(input, _repeated_awardDataList_codec);
            break;
          }
          case 18: {
            plateSymbol_.AddEntriesFrom(input, _repeated_plateSymbol_codec);
            break;
          }
          case 24: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 33: {
            PlateWin = input.ReadDouble();
            break;
          }
          case 41: {
            LineWin = input.ReadDouble();
            break;
          }
          case 49: {
            JPWin = input.ReadDouble();
            break;
          }
          case 57: {
            LinePigMult = input.ReadDouble();
            break;
          }
          case 64: {
            IsNewPig = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            awardDataList_.AddEntriesFrom(ref input, _repeated_awardDataList_codec);
            break;
          }
          case 18: {
            plateSymbol_.AddEntriesFrom(ref input, _repeated_plateSymbol_codec);
            break;
          }
          case 24: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 33: {
            PlateWin = input.ReadDouble();
            break;
          }
          case 41: {
            LineWin = input.ReadDouble();
            break;
          }
          case 49: {
            JPWin = input.ReadDouble();
            break;
          }
          case 57: {
            LinePigMult = input.ReadDouble();
            break;
          }
          case 64: {
            IsNewPig = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ColumnF : pb::IMessage<ColumnF>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnF> _parser = new pb::MessageParser<ColumnF>(() => new ColumnF());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnF> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Pp.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnF() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnF(ColumnF other) : this() {
      rowF_ = other.rowF_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnF Clone() {
      return new ColumnF(this);
    }

    /// <summary>Field number for the "RowF" field.</summary>
    public const int RowFFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_rowF_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> rowF_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> RowF {
      get { return rowF_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColumnF);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnF other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rowF_.Equals(other.rowF_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rowF_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rowF_.WriteTo(output, _repeated_rowF_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rowF_.WriteTo(ref output, _repeated_rowF_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += rowF_.CalculateSize(_repeated_rowF_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnF other) {
      if (other == null) {
        return;
      }
      rowF_.Add(other.rowF_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            rowF_.AddEntriesFrom(input, _repeated_rowF_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            rowF_.AddEntriesFrom(ref input, _repeated_rowF_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class JPInfo : pb::IMessage<JPInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JPInfo> _parser = new pb::MessageParser<JPInfo>(() => new JPInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JPInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Pp.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JPInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JPInfo(JPInfo other) : this() {
      fronts_ = other.fronts_.Clone();
      oddPrize_ = other.oddPrize_.Clone();
      baseBet_ = other.baseBet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JPInfo Clone() {
      return new JPInfo(this);
    }

    /// <summary>Field number for the "Fronts" field.</summary>
    public const int FrontsFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_fronts_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> fronts_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Fronts {
      get { return fronts_; }
    }

    /// <summary>Field number for the "OddPrize" field.</summary>
    public const int OddPrizeFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_oddPrize_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> oddPrize_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> OddPrize {
      get { return oddPrize_; }
    }

    /// <summary>Field number for the "BaseBet" field.</summary>
    public const int BaseBetFieldNumber = 3;
    private double baseBet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BaseBet {
      get { return baseBet_; }
      set {
        baseBet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JPInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JPInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fronts_.Equals(other.fronts_)) return false;
      if(!oddPrize_.Equals(other.oddPrize_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BaseBet, other.BaseBet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fronts_.GetHashCode();
      hash ^= oddPrize_.GetHashCode();
      if (BaseBet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BaseBet);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fronts_.WriteTo(output, _repeated_fronts_codec);
      oddPrize_.WriteTo(output, _repeated_oddPrize_codec);
      if (BaseBet != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BaseBet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fronts_.WriteTo(ref output, _repeated_fronts_codec);
      oddPrize_.WriteTo(ref output, _repeated_oddPrize_codec);
      if (BaseBet != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BaseBet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += fronts_.CalculateSize(_repeated_fronts_codec);
      size += oddPrize_.CalculateSize(_repeated_oddPrize_codec);
      if (BaseBet != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JPInfo other) {
      if (other == null) {
        return;
      }
      fronts_.Add(other.fronts_);
      oddPrize_.Add(other.oddPrize_);
      if (other.BaseBet != 0D) {
        BaseBet = other.BaseBet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            fronts_.AddEntriesFrom(input, _repeated_fronts_codec);
            break;
          }
          case 18:
          case 17: {
            oddPrize_.AddEntriesFrom(input, _repeated_oddPrize_codec);
            break;
          }
          case 25: {
            BaseBet = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            fronts_.AddEntriesFrom(ref input, _repeated_fronts_codec);
            break;
          }
          case 18:
          case 17: {
            oddPrize_.AddEntriesFrom(ref input, _repeated_oddPrize_codec);
            break;
          }
          case 25: {
            BaseBet = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Pp.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      awardSymbol_ = other.awardSymbol_;
      awardLine_ = other.awardLine_;
      awardCount_ = other.awardCount_;
      awardMoney_ = other.awardMoney_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "AwardSymbol" field.</summary>
    public const int AwardSymbolFieldNumber = 1;
    private int awardSymbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardSymbol {
      get { return awardSymbol_; }
      set {
        awardSymbol_ = value;
      }
    }

    /// <summary>Field number for the "AwardLine" field.</summary>
    public const int AwardLineFieldNumber = 2;
    private int awardLine_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardLine {
      get { return awardLine_; }
      set {
        awardLine_ = value;
      }
    }

    /// <summary>Field number for the "AwardCount" field.</summary>
    public const int AwardCountFieldNumber = 3;
    private int awardCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardCount {
      get { return awardCount_; }
      set {
        awardCount_ = value;
      }
    }

    /// <summary>Field number for the "AwardMoney" field.</summary>
    public const int AwardMoneyFieldNumber = 4;
    private double awardMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AwardMoney {
      get { return awardMoney_; }
      set {
        awardMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AwardSymbol != other.AwardSymbol) return false;
      if (AwardLine != other.AwardLine) return false;
      if (AwardCount != other.AwardCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AwardMoney, other.AwardMoney)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AwardSymbol != 0) hash ^= AwardSymbol.GetHashCode();
      if (AwardLine != 0) hash ^= AwardLine.GetHashCode();
      if (AwardCount != 0) hash ^= AwardCount.GetHashCode();
      if (AwardMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AwardMoney);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AwardSymbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AwardSymbol);
      }
      if (AwardLine != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AwardLine);
      }
      if (AwardCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardCount);
      }
      if (AwardMoney != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(AwardMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AwardSymbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AwardSymbol);
      }
      if (AwardLine != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AwardLine);
      }
      if (AwardCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardCount);
      }
      if (AwardMoney != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(AwardMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AwardSymbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardSymbol);
      }
      if (AwardLine != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardLine);
      }
      if (AwardCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardCount);
      }
      if (AwardMoney != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.AwardSymbol != 0) {
        AwardSymbol = other.AwardSymbol;
      }
      if (other.AwardLine != 0) {
        AwardLine = other.AwardLine;
      }
      if (other.AwardCount != 0) {
        AwardCount = other.AwardCount;
      }
      if (other.AwardMoney != 0D) {
        AwardMoney = other.AwardMoney;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AwardSymbol = input.ReadInt32();
            break;
          }
          case 16: {
            AwardLine = input.ReadInt32();
            break;
          }
          case 24: {
            AwardCount = input.ReadInt32();
            break;
          }
          case 33: {
            AwardMoney = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AwardSymbol = input.ReadInt32();
            break;
          }
          case 16: {
            AwardLine = input.ReadInt32();
            break;
          }
          case 24: {
            AwardCount = input.ReadInt32();
            break;
          }
          case 33: {
            AwardMoney = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Pp.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      row_ = other.row_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Row" field.</summary>
    public const int RowFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_row_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> row_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Row {
      get { return row_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!row_.Equals(other.row_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= row_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      row_.WriteTo(output, _repeated_row_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      row_.WriteTo(ref output, _repeated_row_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += row_.CalculateSize(_repeated_row_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      row_.Add(other.row_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            row_.AddEntriesFrom(input, _repeated_row_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            row_.AddEntriesFrom(ref input, _repeated_row_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
