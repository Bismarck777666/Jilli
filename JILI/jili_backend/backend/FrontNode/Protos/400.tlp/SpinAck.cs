// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Tlp {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhJKaWxpLlByb3RvY29scy50bHAi3gEKB1NwaW5B",
            "Y2sSMQoKUm91bmRRdWV1ZRgBIAMoCzIdLkppbGkuUHJvdG9jb2xzLnRscC5S",
            "b3VuZEluZm8SFAoMRnJlZVRvdGFsV2luGAIgASgBEhAKCFRvdGFsV2luGAMg",
            "ASgBEhEKCVNob3dJbmRleBgEIAEoCRIQCghOb3dNb25leRgFIAEoARIPCgdB",
            "Y2tUeXBlGAYgASgFEgsKA1JUUBgHIAEoARILCgNCZXQYCCABKAESEwoLRm9s",
            "ZGVySW5kZXgYCSABKAUSEwoLQ3JhY2tMZXZlbHMYCiADKAUirAQKCVJvdW5k",
            "SW5mbxIzCg9NYWluUGxhdGVTeW1ib2wYASADKAsyGi5KaWxpLlByb3RvY29s",
            "cy50bHAuQ29sdW1uEjQKD0ZyZWVQbGF0ZVN5bWJvbBgCIAMoCzIbLkppbGku",
            "UHJvdG9jb2xzLnRscC5DQ29sdW1uEjcKEkZyZWVQbGF0ZVN5bWJvbExvZxgD",
            "IAMoCzIbLkppbGkuUHJvdG9jb2xzLnRscC5DQ29sdW1uEjMKDEF3YXJkRGF0",
            "YVZlYxgEIAMoCzIdLkppbGkuUHJvdG9jb2xzLnRscC5Bd2FyZERhdGESFQoN",
            "QXdhcmRUeXBlRmxhZxgFIAEoBRIQCghSb3VuZFdpbhgGIAEoARIXCg9GcmVl",
            "UmVtYWluUm91bmQYByABKAUSFAoMRnJlZU5vd1JvdW5kGAggASgFEhAKCHNr",
            "aXBUeXBlGAkgASgFEhoKEk1HUmVlbFdlaWdodFJlc3VsdBgKIAEoBRIzCghC",
            "bHVlRGF0YRgLIAMoCzIhLkppbGkuUHJvdG9jb2xzLnRscC5GZWF0dXJlRWZm",
            "ZWN0EjIKB1JlZERhdGEYDCADKAsyIS5KaWxpLlByb3RvY29scy50bHAuRmVh",
            "dHVyZUVmZmVjdBI0CglHcmVlbkRhdGEYDSADKAsyIS5KaWxpLlByb3RvY29s",
            "cy50bHAuRmVhdHVyZUVmZmVjdBIQCghBZGRDcmFjaxgOIAMoCBIPCgdNYXhG",
            "bGFnGA8gASgIIhUKBkNvbHVtbhILCgNDb2wYASADKAUiMwoHQ0NvbHVtbhIo",
            "CgNDb2wYASADKAsyGy5KaWxpLlByb3RvY29scy50bHAuQ1N5bWJvbCJKCgdD",
            "U3ltYm9sEg4KBlN5bWJvbBgBIAEoBRIPCgdKUFN0YXRlGAIgASgFEg4KBkpQ",
            "TXVsdBgDIAEoBRIOCgZOdW1iZXIYBCABKAEiVwoNRmVhdHVyZUVmZmVjdBIS",
            "CgpTY2F0dGVyUG9zGAEgASgFEhEKCUVmZmVjdFBvcxgCIAMoBRIPCgdKUFN0",
            "YXRlGAMgASgFEg4KBk51bWJlchgEIAEoASJFCglBd2FyZERhdGESDgoGU3lt",
            "Ym9sGAEgASgFEg0KBUNvdW50GAIgASgFEgwKBExpbmUYAyABKAUSCwoDV2lu",
            "GAQgASgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tlp.SpinAck), global::Jili.Protocols.Tlp.SpinAck.Parser, new[]{ "RoundQueue", "FreeTotalWin", "TotalWin", "ShowIndex", "NowMoney", "AckType", "RTP", "Bet", "FolderIndex", "CrackLevels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tlp.RoundInfo), global::Jili.Protocols.Tlp.RoundInfo.Parser, new[]{ "MainPlateSymbol", "FreePlateSymbol", "FreePlateSymbolLog", "AwardDataVec", "AwardTypeFlag", "RoundWin", "FreeRemainRound", "FreeNowRound", "SkipType", "MGReelWeightResult", "BlueData", "RedData", "GreenData", "AddCrack", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tlp.Column), global::Jili.Protocols.Tlp.Column.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tlp.CColumn), global::Jili.Protocols.Tlp.CColumn.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tlp.CSymbol), global::Jili.Protocols.Tlp.CSymbol.Parser, new[]{ "Symbol", "JPState", "JPMult", "Number" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tlp.FeatureEffect), global::Jili.Protocols.Tlp.FeatureEffect.Parser, new[]{ "ScatterPos", "EffectPos", "JPState", "Number" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tlp.AwardData), global::Jili.Protocols.Tlp.AwardData.Parser, new[]{ "Symbol", "Count", "Line", "Win" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tlp.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      roundQueue_ = other.roundQueue_.Clone();
      freeTotalWin_ = other.freeTotalWin_;
      totalWin_ = other.totalWin_;
      showIndex_ = other.showIndex_;
      nowMoney_ = other.nowMoney_;
      ackType_ = other.ackType_;
      rTP_ = other.rTP_;
      bet_ = other.bet_;
      folderIndex_ = other.folderIndex_;
      crackLevels_ = other.crackLevels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "RoundQueue" field.</summary>
    public const int RoundQueueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.RoundInfo> _repeated_roundQueue_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Tlp.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.RoundInfo> roundQueue_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.RoundInfo> RoundQueue {
      get { return roundQueue_; }
    }

    /// <summary>Field number for the "FreeTotalWin" field.</summary>
    public const int FreeTotalWinFieldNumber = 2;
    private double freeTotalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FreeTotalWin {
      get { return freeTotalWin_; }
      set {
        freeTotalWin_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 3;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "ShowIndex" field.</summary>
    public const int ShowIndexFieldNumber = 4;
    private string showIndex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShowIndex {
      get { return showIndex_; }
      set {
        showIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NowMoney" field.</summary>
    public const int NowMoneyFieldNumber = 5;
    private double nowMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NowMoney {
      get { return nowMoney_; }
      set {
        nowMoney_ = value;
      }
    }

    /// <summary>Field number for the "AckType" field.</summary>
    public const int AckTypeFieldNumber = 6;
    private int ackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 7;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    /// <summary>Field number for the "Bet" field.</summary>
    public const int BetFieldNumber = 8;
    private double bet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "FolderIndex" field.</summary>
    public const int FolderIndexFieldNumber = 9;
    private int folderIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FolderIndex {
      get { return folderIndex_; }
      set {
        folderIndex_ = value;
      }
    }

    /// <summary>Field number for the "CrackLevels" field.</summary>
    public const int CrackLevelsFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_crackLevels_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> crackLevels_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CrackLevels {
      get { return crackLevels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundQueue_.Equals(other.roundQueue_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FreeTotalWin, other.FreeTotalWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (ShowIndex != other.ShowIndex) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NowMoney, other.NowMoney)) return false;
      if (AckType != other.AckType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bet, other.Bet)) return false;
      if (FolderIndex != other.FolderIndex) return false;
      if(!crackLevels_.Equals(other.crackLevels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundQueue_.GetHashCode();
      if (FreeTotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FreeTotalWin);
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (ShowIndex.Length != 0) hash ^= ShowIndex.GetHashCode();
      if (NowMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NowMoney);
      if (AckType != 0) hash ^= AckType.GetHashCode();
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (Bet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bet);
      if (FolderIndex != 0) hash ^= FolderIndex.GetHashCode();
      hash ^= crackLevels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundQueue_.WriteTo(output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(RTP);
      }
      if (Bet != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Bet);
      }
      if (FolderIndex != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FolderIndex);
      }
      crackLevels_.WriteTo(output, _repeated_crackLevels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundQueue_.WriteTo(ref output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(RTP);
      }
      if (Bet != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Bet);
      }
      if (FolderIndex != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FolderIndex);
      }
      crackLevels_.WriteTo(ref output, _repeated_crackLevels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roundQueue_.CalculateSize(_repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        size += 1 + 8;
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (ShowIndex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowIndex);
      }
      if (NowMoney != 0D) {
        size += 1 + 8;
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckType);
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (Bet != 0D) {
        size += 1 + 8;
      }
      if (FolderIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FolderIndex);
      }
      size += crackLevels_.CalculateSize(_repeated_crackLevels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      roundQueue_.Add(other.roundQueue_);
      if (other.FreeTotalWin != 0D) {
        FreeTotalWin = other.FreeTotalWin;
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.ShowIndex.Length != 0) {
        ShowIndex = other.ShowIndex;
      }
      if (other.NowMoney != 0D) {
        NowMoney = other.NowMoney;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      if (other.Bet != 0D) {
        Bet = other.Bet;
      }
      if (other.FolderIndex != 0) {
        FolderIndex = other.FolderIndex;
      }
      crackLevels_.Add(other.crackLevels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 34: {
            ShowIndex = input.ReadString();
            break;
          }
          case 41: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 48: {
            AckType = input.ReadInt32();
            break;
          }
          case 57: {
            RTP = input.ReadDouble();
            break;
          }
          case 65: {
            Bet = input.ReadDouble();
            break;
          }
          case 72: {
            FolderIndex = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            crackLevels_.AddEntriesFrom(input, _repeated_crackLevels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(ref input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 34: {
            ShowIndex = input.ReadString();
            break;
          }
          case 41: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 48: {
            AckType = input.ReadInt32();
            break;
          }
          case 57: {
            RTP = input.ReadDouble();
            break;
          }
          case 65: {
            Bet = input.ReadDouble();
            break;
          }
          case 72: {
            FolderIndex = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            crackLevels_.AddEntriesFrom(ref input, _repeated_crackLevels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoundInfo : pb::IMessage<RoundInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tlp.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo(RoundInfo other) : this() {
      mainPlateSymbol_ = other.mainPlateSymbol_.Clone();
      freePlateSymbol_ = other.freePlateSymbol_.Clone();
      freePlateSymbolLog_ = other.freePlateSymbolLog_.Clone();
      awardDataVec_ = other.awardDataVec_.Clone();
      awardTypeFlag_ = other.awardTypeFlag_;
      roundWin_ = other.roundWin_;
      freeRemainRound_ = other.freeRemainRound_;
      freeNowRound_ = other.freeNowRound_;
      skipType_ = other.skipType_;
      mGReelWeightResult_ = other.mGReelWeightResult_;
      blueData_ = other.blueData_.Clone();
      redData_ = other.redData_.Clone();
      greenData_ = other.greenData_.Clone();
      addCrack_ = other.addCrack_.Clone();
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "MainPlateSymbol" field.</summary>
    public const int MainPlateSymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.Column> _repeated_mainPlateSymbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Tlp.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.Column> mainPlateSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.Column> MainPlateSymbol {
      get { return mainPlateSymbol_; }
    }

    /// <summary>Field number for the "FreePlateSymbol" field.</summary>
    public const int FreePlateSymbolFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.CColumn> _repeated_freePlateSymbol_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Tlp.CColumn.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.CColumn> freePlateSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.CColumn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.CColumn> FreePlateSymbol {
      get { return freePlateSymbol_; }
    }

    /// <summary>Field number for the "FreePlateSymbolLog" field.</summary>
    public const int FreePlateSymbolLogFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.CColumn> _repeated_freePlateSymbolLog_codec
        = pb::FieldCodec.ForMessage(26, global::Jili.Protocols.Tlp.CColumn.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.CColumn> freePlateSymbolLog_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.CColumn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.CColumn> FreePlateSymbolLog {
      get { return freePlateSymbolLog_; }
    }

    /// <summary>Field number for the "AwardDataVec" field.</summary>
    public const int AwardDataVecFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.AwardData> _repeated_awardDataVec_codec
        = pb::FieldCodec.ForMessage(34, global::Jili.Protocols.Tlp.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.AwardData> awardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.AwardData> AwardDataVec {
      get { return awardDataVec_; }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 5;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "RoundWin" field.</summary>
    public const int RoundWinFieldNumber = 6;
    private double roundWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RoundWin {
      get { return roundWin_; }
      set {
        roundWin_ = value;
      }
    }

    /// <summary>Field number for the "FreeRemainRound" field.</summary>
    public const int FreeRemainRoundFieldNumber = 7;
    private int freeRemainRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeRemainRound {
      get { return freeRemainRound_; }
      set {
        freeRemainRound_ = value;
      }
    }

    /// <summary>Field number for the "FreeNowRound" field.</summary>
    public const int FreeNowRoundFieldNumber = 8;
    private int freeNowRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeNowRound {
      get { return freeNowRound_; }
      set {
        freeNowRound_ = value;
      }
    }

    /// <summary>Field number for the "skipType" field.</summary>
    public const int SkipTypeFieldNumber = 9;
    private int skipType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkipType {
      get { return skipType_; }
      set {
        skipType_ = value;
      }
    }

    /// <summary>Field number for the "MGReelWeightResult" field.</summary>
    public const int MGReelWeightResultFieldNumber = 10;
    private int mGReelWeightResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MGReelWeightResult {
      get { return mGReelWeightResult_; }
      set {
        mGReelWeightResult_ = value;
      }
    }

    /// <summary>Field number for the "BlueData" field.</summary>
    public const int BlueDataFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.FeatureEffect> _repeated_blueData_codec
        = pb::FieldCodec.ForMessage(90, global::Jili.Protocols.Tlp.FeatureEffect.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect> blueData_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect> BlueData {
      get { return blueData_; }
    }

    /// <summary>Field number for the "RedData" field.</summary>
    public const int RedDataFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.FeatureEffect> _repeated_redData_codec
        = pb::FieldCodec.ForMessage(98, global::Jili.Protocols.Tlp.FeatureEffect.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect> redData_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect> RedData {
      get { return redData_; }
    }

    /// <summary>Field number for the "GreenData" field.</summary>
    public const int GreenDataFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.FeatureEffect> _repeated_greenData_codec
        = pb::FieldCodec.ForMessage(106, global::Jili.Protocols.Tlp.FeatureEffect.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect> greenData_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.FeatureEffect> GreenData {
      get { return greenData_; }
    }

    /// <summary>Field number for the "AddCrack" field.</summary>
    public const int AddCrackFieldNumber = 14;
    private static readonly pb::FieldCodec<bool> _repeated_addCrack_codec
        = pb::FieldCodec.ForBool(114);
    private readonly pbc::RepeatedField<bool> addCrack_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> AddCrack {
      get { return addCrack_; }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 15;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mainPlateSymbol_.Equals(other.mainPlateSymbol_)) return false;
      if(!freePlateSymbol_.Equals(other.freePlateSymbol_)) return false;
      if(!freePlateSymbolLog_.Equals(other.freePlateSymbolLog_)) return false;
      if(!awardDataVec_.Equals(other.awardDataVec_)) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RoundWin, other.RoundWin)) return false;
      if (FreeRemainRound != other.FreeRemainRound) return false;
      if (FreeNowRound != other.FreeNowRound) return false;
      if (SkipType != other.SkipType) return false;
      if (MGReelWeightResult != other.MGReelWeightResult) return false;
      if(!blueData_.Equals(other.blueData_)) return false;
      if(!redData_.Equals(other.redData_)) return false;
      if(!greenData_.Equals(other.greenData_)) return false;
      if(!addCrack_.Equals(other.addCrack_)) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mainPlateSymbol_.GetHashCode();
      hash ^= freePlateSymbol_.GetHashCode();
      hash ^= freePlateSymbolLog_.GetHashCode();
      hash ^= awardDataVec_.GetHashCode();
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (RoundWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RoundWin);
      if (FreeRemainRound != 0) hash ^= FreeRemainRound.GetHashCode();
      if (FreeNowRound != 0) hash ^= FreeNowRound.GetHashCode();
      if (SkipType != 0) hash ^= SkipType.GetHashCode();
      if (MGReelWeightResult != 0) hash ^= MGReelWeightResult.GetHashCode();
      hash ^= blueData_.GetHashCode();
      hash ^= redData_.GetHashCode();
      hash ^= greenData_.GetHashCode();
      hash ^= addCrack_.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mainPlateSymbol_.WriteTo(output, _repeated_mainPlateSymbol_codec);
      freePlateSymbol_.WriteTo(output, _repeated_freePlateSymbol_codec);
      freePlateSymbolLog_.WriteTo(output, _repeated_freePlateSymbolLog_codec);
      awardDataVec_.WriteTo(output, _repeated_awardDataVec_codec);
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AwardTypeFlag);
      }
      if (RoundWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RoundWin);
      }
      if (FreeRemainRound != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FreeRemainRound);
      }
      if (FreeNowRound != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FreeNowRound);
      }
      if (SkipType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SkipType);
      }
      if (MGReelWeightResult != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MGReelWeightResult);
      }
      blueData_.WriteTo(output, _repeated_blueData_codec);
      redData_.WriteTo(output, _repeated_redData_codec);
      greenData_.WriteTo(output, _repeated_greenData_codec);
      addCrack_.WriteTo(output, _repeated_addCrack_codec);
      if (MaxFlag != false) {
        output.WriteRawTag(120);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mainPlateSymbol_.WriteTo(ref output, _repeated_mainPlateSymbol_codec);
      freePlateSymbol_.WriteTo(ref output, _repeated_freePlateSymbol_codec);
      freePlateSymbolLog_.WriteTo(ref output, _repeated_freePlateSymbolLog_codec);
      awardDataVec_.WriteTo(ref output, _repeated_awardDataVec_codec);
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AwardTypeFlag);
      }
      if (RoundWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RoundWin);
      }
      if (FreeRemainRound != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FreeRemainRound);
      }
      if (FreeNowRound != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FreeNowRound);
      }
      if (SkipType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SkipType);
      }
      if (MGReelWeightResult != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MGReelWeightResult);
      }
      blueData_.WriteTo(ref output, _repeated_blueData_codec);
      redData_.WriteTo(ref output, _repeated_redData_codec);
      greenData_.WriteTo(ref output, _repeated_greenData_codec);
      addCrack_.WriteTo(ref output, _repeated_addCrack_codec);
      if (MaxFlag != false) {
        output.WriteRawTag(120);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += mainPlateSymbol_.CalculateSize(_repeated_mainPlateSymbol_codec);
      size += freePlateSymbol_.CalculateSize(_repeated_freePlateSymbol_codec);
      size += freePlateSymbolLog_.CalculateSize(_repeated_freePlateSymbolLog_codec);
      size += awardDataVec_.CalculateSize(_repeated_awardDataVec_codec);
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (RoundWin != 0D) {
        size += 1 + 8;
      }
      if (FreeRemainRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeRemainRound);
      }
      if (FreeNowRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeNowRound);
      }
      if (SkipType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkipType);
      }
      if (MGReelWeightResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MGReelWeightResult);
      }
      size += blueData_.CalculateSize(_repeated_blueData_codec);
      size += redData_.CalculateSize(_repeated_redData_codec);
      size += greenData_.CalculateSize(_repeated_greenData_codec);
      size += addCrack_.CalculateSize(_repeated_addCrack_codec);
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      mainPlateSymbol_.Add(other.mainPlateSymbol_);
      freePlateSymbol_.Add(other.freePlateSymbol_);
      freePlateSymbolLog_.Add(other.freePlateSymbolLog_);
      awardDataVec_.Add(other.awardDataVec_);
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.RoundWin != 0D) {
        RoundWin = other.RoundWin;
      }
      if (other.FreeRemainRound != 0) {
        FreeRemainRound = other.FreeRemainRound;
      }
      if (other.FreeNowRound != 0) {
        FreeNowRound = other.FreeNowRound;
      }
      if (other.SkipType != 0) {
        SkipType = other.SkipType;
      }
      if (other.MGReelWeightResult != 0) {
        MGReelWeightResult = other.MGReelWeightResult;
      }
      blueData_.Add(other.blueData_);
      redData_.Add(other.redData_);
      greenData_.Add(other.greenData_);
      addCrack_.Add(other.addCrack_);
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mainPlateSymbol_.AddEntriesFrom(input, _repeated_mainPlateSymbol_codec);
            break;
          }
          case 18: {
            freePlateSymbol_.AddEntriesFrom(input, _repeated_freePlateSymbol_codec);
            break;
          }
          case 26: {
            freePlateSymbolLog_.AddEntriesFrom(input, _repeated_freePlateSymbolLog_codec);
            break;
          }
          case 34: {
            awardDataVec_.AddEntriesFrom(input, _repeated_awardDataVec_codec);
            break;
          }
          case 40: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 49: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 56: {
            FreeRemainRound = input.ReadInt32();
            break;
          }
          case 64: {
            FreeNowRound = input.ReadInt32();
            break;
          }
          case 72: {
            SkipType = input.ReadInt32();
            break;
          }
          case 80: {
            MGReelWeightResult = input.ReadInt32();
            break;
          }
          case 90: {
            blueData_.AddEntriesFrom(input, _repeated_blueData_codec);
            break;
          }
          case 98: {
            redData_.AddEntriesFrom(input, _repeated_redData_codec);
            break;
          }
          case 106: {
            greenData_.AddEntriesFrom(input, _repeated_greenData_codec);
            break;
          }
          case 114:
          case 112: {
            addCrack_.AddEntriesFrom(input, _repeated_addCrack_codec);
            break;
          }
          case 120: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mainPlateSymbol_.AddEntriesFrom(ref input, _repeated_mainPlateSymbol_codec);
            break;
          }
          case 18: {
            freePlateSymbol_.AddEntriesFrom(ref input, _repeated_freePlateSymbol_codec);
            break;
          }
          case 26: {
            freePlateSymbolLog_.AddEntriesFrom(ref input, _repeated_freePlateSymbolLog_codec);
            break;
          }
          case 34: {
            awardDataVec_.AddEntriesFrom(ref input, _repeated_awardDataVec_codec);
            break;
          }
          case 40: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 49: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 56: {
            FreeRemainRound = input.ReadInt32();
            break;
          }
          case 64: {
            FreeNowRound = input.ReadInt32();
            break;
          }
          case 72: {
            SkipType = input.ReadInt32();
            break;
          }
          case 80: {
            MGReelWeightResult = input.ReadInt32();
            break;
          }
          case 90: {
            blueData_.AddEntriesFrom(ref input, _repeated_blueData_codec);
            break;
          }
          case 98: {
            redData_.AddEntriesFrom(ref input, _repeated_redData_codec);
            break;
          }
          case 106: {
            greenData_.AddEntriesFrom(ref input, _repeated_greenData_codec);
            break;
          }
          case 114:
          case 112: {
            addCrack_.AddEntriesFrom(ref input, _repeated_addCrack_codec);
            break;
          }
          case 120: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tlp.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_col_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> col_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CColumn : pb::IMessage<CColumn>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CColumn> _parser = new pb::MessageParser<CColumn>(() => new CColumn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CColumn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tlp.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CColumn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CColumn(CColumn other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CColumn Clone() {
      return new CColumn(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tlp.CSymbol> _repeated_col_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Tlp.CSymbol.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tlp.CSymbol> col_ = new pbc::RepeatedField<global::Jili.Protocols.Tlp.CSymbol>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tlp.CSymbol> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CColumn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CColumn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CColumn other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSymbol : pb::IMessage<CSymbol>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSymbol> _parser = new pb::MessageParser<CSymbol>(() => new CSymbol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSymbol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tlp.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSymbol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSymbol(CSymbol other) : this() {
      symbol_ = other.symbol_;
      jPState_ = other.jPState_;
      jPMult_ = other.jPMult_;
      number_ = other.number_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSymbol Clone() {
      return new CSymbol(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "JPState" field.</summary>
    public const int JPStateFieldNumber = 2;
    private int jPState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JPState {
      get { return jPState_; }
      set {
        jPState_ = value;
      }
    }

    /// <summary>Field number for the "JPMult" field.</summary>
    public const int JPMultFieldNumber = 3;
    private int jPMult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JPMult {
      get { return jPMult_; }
      set {
        jPMult_ = value;
      }
    }

    /// <summary>Field number for the "Number" field.</summary>
    public const int NumberFieldNumber = 4;
    private double number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSymbol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSymbol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (JPState != other.JPState) return false;
      if (JPMult != other.JPMult) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Number, other.Number)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (JPState != 0) hash ^= JPState.GetHashCode();
      if (JPMult != 0) hash ^= JPMult.GetHashCode();
      if (Number != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Number);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (JPState != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(JPState);
      }
      if (JPMult != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JPMult);
      }
      if (Number != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (JPState != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(JPState);
      }
      if (JPMult != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JPMult);
      }
      if (Number != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (JPState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JPState);
      }
      if (JPMult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JPMult);
      }
      if (Number != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSymbol other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.JPState != 0) {
        JPState = other.JPState;
      }
      if (other.JPMult != 0) {
        JPMult = other.JPMult;
      }
      if (other.Number != 0D) {
        Number = other.Number;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            JPState = input.ReadInt32();
            break;
          }
          case 24: {
            JPMult = input.ReadInt32();
            break;
          }
          case 33: {
            Number = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            JPState = input.ReadInt32();
            break;
          }
          case 24: {
            JPMult = input.ReadInt32();
            break;
          }
          case 33: {
            Number = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FeatureEffect : pb::IMessage<FeatureEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureEffect> _parser = new pb::MessageParser<FeatureEffect>(() => new FeatureEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeatureEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tlp.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureEffect(FeatureEffect other) : this() {
      scatterPos_ = other.scatterPos_;
      effectPos_ = other.effectPos_.Clone();
      jPState_ = other.jPState_;
      number_ = other.number_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureEffect Clone() {
      return new FeatureEffect(this);
    }

    /// <summary>Field number for the "ScatterPos" field.</summary>
    public const int ScatterPosFieldNumber = 1;
    private int scatterPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ScatterPos {
      get { return scatterPos_; }
      set {
        scatterPos_ = value;
      }
    }

    /// <summary>Field number for the "EffectPos" field.</summary>
    public const int EffectPosFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_effectPos_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> effectPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> EffectPos {
      get { return effectPos_; }
    }

    /// <summary>Field number for the "JPState" field.</summary>
    public const int JPStateFieldNumber = 3;
    private int jPState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JPState {
      get { return jPState_; }
      set {
        jPState_ = value;
      }
    }

    /// <summary>Field number for the "Number" field.</summary>
    public const int NumberFieldNumber = 4;
    private double number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeatureEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeatureEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScatterPos != other.ScatterPos) return false;
      if(!effectPos_.Equals(other.effectPos_)) return false;
      if (JPState != other.JPState) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Number, other.Number)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ScatterPos != 0) hash ^= ScatterPos.GetHashCode();
      hash ^= effectPos_.GetHashCode();
      if (JPState != 0) hash ^= JPState.GetHashCode();
      if (Number != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Number);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ScatterPos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ScatterPos);
      }
      effectPos_.WriteTo(output, _repeated_effectPos_codec);
      if (JPState != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JPState);
      }
      if (Number != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ScatterPos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ScatterPos);
      }
      effectPos_.WriteTo(ref output, _repeated_effectPos_codec);
      if (JPState != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JPState);
      }
      if (Number != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ScatterPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScatterPos);
      }
      size += effectPos_.CalculateSize(_repeated_effectPos_codec);
      if (JPState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JPState);
      }
      if (Number != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeatureEffect other) {
      if (other == null) {
        return;
      }
      if (other.ScatterPos != 0) {
        ScatterPos = other.ScatterPos;
      }
      effectPos_.Add(other.effectPos_);
      if (other.JPState != 0) {
        JPState = other.JPState;
      }
      if (other.Number != 0D) {
        Number = other.Number;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ScatterPos = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            effectPos_.AddEntriesFrom(input, _repeated_effectPos_codec);
            break;
          }
          case 24: {
            JPState = input.ReadInt32();
            break;
          }
          case 33: {
            Number = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ScatterPos = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            effectPos_.AddEntriesFrom(ref input, _repeated_effectPos_codec);
            break;
          }
          case 24: {
            JPState = input.ReadInt32();
            break;
          }
          case 33: {
            Number = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tlp.SpinAckReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      symbol_ = other.symbol_;
      count_ = other.count_;
      line_ = other.line_;
      win_ = other.win_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Line" field.</summary>
    public const int LineFieldNumber = 3;
    private int line_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Line {
      get { return line_; }
      set {
        line_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 4;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Count != other.Count) return false;
      if (Line != other.Line) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Line != 0) hash ^= Line.GetHashCode();
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Line != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Line);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Line != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Line);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Line != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Line);
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Line != 0) {
        Line = other.Line;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Line = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Line = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
