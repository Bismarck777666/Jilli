// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Tph {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhJKaWxpLlByb3RvY29scy50cGgi2QEKB1NwaW5B",
            "Y2sSLwoITWFpbkluZm8YASABKAsyHS5KaWxpLlByb3RvY29scy50cGguTWFp",
            "blBsYXRlEi4KCEZyZWVJbmZvGAIgASgLMhwuSmlsaS5Qcm90b2NvbHMudHBo",
            "LkZyZWVEYXRhEhAKCFRvdGFsV2luGAMgASgBEhEKCVNob3dJbmRleBgEIAEo",
            "CRIQCghOb3dNb25leRgFIAEoARIPCgdBY2tUeXBlGAYgASgFEgsKA1JUUBgH",
            "IAEoARILCgNMSUQYCCABKAUSCwoDUklEGAkgASgFIpwCCglNYWluUGxhdGUS",
            "KgoGU3ltYm9sGAEgAygLMhouSmlsaS5Qcm90b2NvbHMudHBoLkNvbHVtbhIz",
            "CgxBd2FyZERhdGFWZWMYAiADKAsyHS5KaWxpLlByb3RvY29scy50cGguQXdh",
            "cmREYXRhEhAKCFBsYXRlV2luGAMgASgBEhQKDFNjYXR0ZXJDb3VudBgEIAEo",
            "ARIRCglXaGVlbFR5cGUYBSABKAUSEAoIV2hlZWxXaW4YBiABKAESFAoMV2hl",
            "ZWxHZXRGcmVlGAcgASgIEhMKC1doZWVsRkdUeXBlGAggASgFEhUKDUF3YXJk",
            "VHlwZUZsYWcYCSABKAUSDgoGQWxsV2luGAogASgBEg8KB01heEZsYWcYCyAB",
            "KAgiqgEKCEZyZWVEYXRhEjAKCUZyZWVTdGFydBgBIAEoCzIdLkppbGkuUHJv",
            "dG9jb2xzLnRwaC5GcmVlUGxhdGUSMAoJRnJlZVF1ZXVlGAIgAygLMh0uSmls",
            "aS5Qcm90b2NvbHMudHBoLkZyZWVQbGF0ZRIUCgxGcmVlVG90YWxXaW4YAyAB",
            "KAESEwoLRmlhbmxDaG9vc2UYBCABKAUSDwoHTWF4RmxhZxgFIAEoCCLVAwoJ",
            "RnJlZVBsYXRlEioKBlN5bWJvbBgBIAMoCzIaLkppbGkuUHJvdG9jb2xzLnRw",
            "aC5Db2x1bW4SKQoFQm91bmQYAiADKAsyGi5KaWxpLlByb3RvY29scy50cGgu",
            "Q29sdW1uEhAKCFJvdW5kTm93GAMgASgFEhIKClJvdW5kVG90YWwYBCABKAUS",
            "EQoJUm91bmRQbHVzGAUgASgFEi4KBVNoaWZ0GAYgAygLMh8uSmlsaS5Qcm90",
            "b2NvbHMudHBoLlNoaWZ0VXBEYXRhEjMKC01lZ2ExRXh0ZW5kGAcgAygLMh4u",
            "SmlsaS5Qcm90b2NvbHMudHBoLkV4dGVuZERhdGESPAoRTHZNYXhBd2FyZERh",
            "dGFWZWMYCCADKAsyIS5KaWxpLlByb3RvY29scy50cGguRnJlZUF3YXJkRGF0",
            "YRI8ChFGaW5hbEF3YXJkRGF0YVZlYxgJIAMoCzIhLkppbGkuUHJvdG9jb2xz",
            "LnRwaC5GcmVlQXdhcmREYXRhEg0KBUx2V2luGAogASgBEhAKCEZpbmFsV2lu",
            "GAsgASgBEhUKDUF3YXJkVHlwZUZsYWcYDCABKAUSDgoGQWxsV2luGA0gASgB",
            "Eg8KB01heEZsYWcYDiABKAgiFQoGQ29sdW1uEgsKA1JvdxgBIAMoBSJXCg1G",
            "cmVlQXdhcmREYXRhEgsKA1BvcxgBIAEoBRILCgNNdWwYAiABKAESCwoDV2lu",
            "GAMgASgBEg8KB1dpblR5cGUYBCABKAUSDgoGSlBUeXBlGAUgASgFIkgKC1No",
            "aWZ0VXBEYXRhEgsKA1BvcxgBIAEoBRIOCgZUYXJnZXQYAiABKAUSDwoHVXBj",
            "b3VudBgDIAEoBRILCgNTcmMYBCABKAUiQAoKRXh0ZW5kRGF0YRILCgNQb3MY",
            "ASABKAUSEgoKRXh0ZW5kVHlwZRgCIAEoBRIRCglFeHRlbmRQb3MYAyADKAUi",
            "VQoJQXdhcmREYXRhEg4KBlN5bWJvbBgBIAEoBRINCgVDb3VudBgCIAEoBRIP",
            "CgdMaW5lTnVtGAMgASgFEgsKA1dpbhgEIAEoARILCgNQb3MYBSADKAViBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.SpinAck), global::Jili.Protocols.Tph.SpinAck.Parser, new[]{ "MainInfo", "FreeInfo", "TotalWin", "ShowIndex", "NowMoney", "AckType", "RTP", "LID", "RID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.MainPlate), global::Jili.Protocols.Tph.MainPlate.Parser, new[]{ "Symbol", "AwardDataVec", "PlateWin", "ScatterCount", "WheelType", "WheelWin", "WheelGetFree", "WheelFGType", "AwardTypeFlag", "AllWin", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.FreeData), global::Jili.Protocols.Tph.FreeData.Parser, new[]{ "FreeStart", "FreeQueue", "FreeTotalWin", "FianlChoose", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.FreePlate), global::Jili.Protocols.Tph.FreePlate.Parser, new[]{ "Symbol", "Bound", "RoundNow", "RoundTotal", "RoundPlus", "Shift", "Mega1Extend", "LvMaxAwardDataVec", "FinalAwardDataVec", "LvWin", "FinalWin", "AwardTypeFlag", "AllWin", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.Column), global::Jili.Protocols.Tph.Column.Parser, new[]{ "Row" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.FreeAwardData), global::Jili.Protocols.Tph.FreeAwardData.Parser, new[]{ "Pos", "Mul", "Win", "WinType", "JPType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.ShiftUpData), global::Jili.Protocols.Tph.ShiftUpData.Parser, new[]{ "Pos", "Target", "Upcount", "Src" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.ExtendData), global::Jili.Protocols.Tph.ExtendData.Parser, new[]{ "Pos", "ExtendType", "ExtendPos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tph.AwardData), global::Jili.Protocols.Tph.AwardData.Parser, new[]{ "Symbol", "Count", "LineNum", "Win", "Pos" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      mainInfo_ = other.mainInfo_ != null ? other.mainInfo_.Clone() : null;
      freeInfo_ = other.freeInfo_ != null ? other.freeInfo_.Clone() : null;
      totalWin_ = other.totalWin_;
      showIndex_ = other.showIndex_;
      nowMoney_ = other.nowMoney_;
      ackType_ = other.ackType_;
      rTP_ = other.rTP_;
      lID_ = other.lID_;
      rID_ = other.rID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "MainInfo" field.</summary>
    public const int MainInfoFieldNumber = 1;
    private global::Jili.Protocols.Tph.MainPlate mainInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Tph.MainPlate MainInfo {
      get { return mainInfo_; }
      set {
        mainInfo_ = value;
      }
    }

    /// <summary>Field number for the "FreeInfo" field.</summary>
    public const int FreeInfoFieldNumber = 2;
    private global::Jili.Protocols.Tph.FreeData freeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Tph.FreeData FreeInfo {
      get { return freeInfo_; }
      set {
        freeInfo_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 3;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "ShowIndex" field.</summary>
    public const int ShowIndexFieldNumber = 4;
    private string showIndex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShowIndex {
      get { return showIndex_; }
      set {
        showIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NowMoney" field.</summary>
    public const int NowMoneyFieldNumber = 5;
    private double nowMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NowMoney {
      get { return nowMoney_; }
      set {
        nowMoney_ = value;
      }
    }

    /// <summary>Field number for the "AckType" field.</summary>
    public const int AckTypeFieldNumber = 6;
    private int ackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 7;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    /// <summary>Field number for the "LID" field.</summary>
    public const int LIDFieldNumber = 8;
    private int lID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LID {
      get { return lID_; }
      set {
        lID_ = value;
      }
    }

    /// <summary>Field number for the "RID" field.</summary>
    public const int RIDFieldNumber = 9;
    private int rID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RID {
      get { return rID_; }
      set {
        rID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MainInfo, other.MainInfo)) return false;
      if (!object.Equals(FreeInfo, other.FreeInfo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (ShowIndex != other.ShowIndex) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NowMoney, other.NowMoney)) return false;
      if (AckType != other.AckType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      if (LID != other.LID) return false;
      if (RID != other.RID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (mainInfo_ != null) hash ^= MainInfo.GetHashCode();
      if (freeInfo_ != null) hash ^= FreeInfo.GetHashCode();
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (ShowIndex.Length != 0) hash ^= ShowIndex.GetHashCode();
      if (NowMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NowMoney);
      if (AckType != 0) hash ^= AckType.GetHashCode();
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (LID != 0) hash ^= LID.GetHashCode();
      if (RID != 0) hash ^= RID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mainInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MainInfo);
      }
      if (freeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FreeInfo);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mainInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MainInfo);
      }
      if (freeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FreeInfo);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (mainInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MainInfo);
      }
      if (freeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FreeInfo);
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (ShowIndex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowIndex);
      }
      if (NowMoney != 0D) {
        size += 1 + 8;
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckType);
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (LID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LID);
      }
      if (RID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      if (other.mainInfo_ != null) {
        if (mainInfo_ == null) {
          MainInfo = new global::Jili.Protocols.Tph.MainPlate();
        }
        MainInfo.MergeFrom(other.MainInfo);
      }
      if (other.freeInfo_ != null) {
        if (freeInfo_ == null) {
          FreeInfo = new global::Jili.Protocols.Tph.FreeData();
        }
        FreeInfo.MergeFrom(other.FreeInfo);
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.ShowIndex.Length != 0) {
        ShowIndex = other.ShowIndex;
      }
      if (other.NowMoney != 0D) {
        NowMoney = other.NowMoney;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      if (other.LID != 0) {
        LID = other.LID;
      }
      if (other.RID != 0) {
        RID = other.RID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mainInfo_ == null) {
              MainInfo = new global::Jili.Protocols.Tph.MainPlate();
            }
            input.ReadMessage(MainInfo);
            break;
          }
          case 18: {
            if (freeInfo_ == null) {
              FreeInfo = new global::Jili.Protocols.Tph.FreeData();
            }
            input.ReadMessage(FreeInfo);
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 34: {
            ShowIndex = input.ReadString();
            break;
          }
          case 41: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 48: {
            AckType = input.ReadInt32();
            break;
          }
          case 57: {
            RTP = input.ReadDouble();
            break;
          }
          case 64: {
            LID = input.ReadInt32();
            break;
          }
          case 72: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mainInfo_ == null) {
              MainInfo = new global::Jili.Protocols.Tph.MainPlate();
            }
            input.ReadMessage(MainInfo);
            break;
          }
          case 18: {
            if (freeInfo_ == null) {
              FreeInfo = new global::Jili.Protocols.Tph.FreeData();
            }
            input.ReadMessage(FreeInfo);
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 34: {
            ShowIndex = input.ReadString();
            break;
          }
          case 41: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 48: {
            AckType = input.ReadInt32();
            break;
          }
          case 57: {
            RTP = input.ReadDouble();
            break;
          }
          case 64: {
            LID = input.ReadInt32();
            break;
          }
          case 72: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MainPlate : pb::IMessage<MainPlate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MainPlate> _parser = new pb::MessageParser<MainPlate>(() => new MainPlate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MainPlate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MainPlate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MainPlate(MainPlate other) : this() {
      symbol_ = other.symbol_.Clone();
      awardDataVec_ = other.awardDataVec_.Clone();
      plateWin_ = other.plateWin_;
      scatterCount_ = other.scatterCount_;
      wheelType_ = other.wheelType_;
      wheelWin_ = other.wheelWin_;
      wheelGetFree_ = other.wheelGetFree_;
      wheelFGType_ = other.wheelFGType_;
      awardTypeFlag_ = other.awardTypeFlag_;
      allWin_ = other.allWin_;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MainPlate Clone() {
      return new MainPlate(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.Column> _repeated_symbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Tph.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.Column> symbol_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.Column> Symbol {
      get { return symbol_; }
    }

    /// <summary>Field number for the "AwardDataVec" field.</summary>
    public const int AwardDataVecFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.AwardData> _repeated_awardDataVec_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Tph.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.AwardData> awardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.AwardData> AwardDataVec {
      get { return awardDataVec_; }
    }

    /// <summary>Field number for the "PlateWin" field.</summary>
    public const int PlateWinFieldNumber = 3;
    private double plateWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PlateWin {
      get { return plateWin_; }
      set {
        plateWin_ = value;
      }
    }

    /// <summary>Field number for the "ScatterCount" field.</summary>
    public const int ScatterCountFieldNumber = 4;
    private double scatterCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ScatterCount {
      get { return scatterCount_; }
      set {
        scatterCount_ = value;
      }
    }

    /// <summary>Field number for the "WheelType" field.</summary>
    public const int WheelTypeFieldNumber = 5;
    private int wheelType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WheelType {
      get { return wheelType_; }
      set {
        wheelType_ = value;
      }
    }

    /// <summary>Field number for the "WheelWin" field.</summary>
    public const int WheelWinFieldNumber = 6;
    private double wheelWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WheelWin {
      get { return wheelWin_; }
      set {
        wheelWin_ = value;
      }
    }

    /// <summary>Field number for the "WheelGetFree" field.</summary>
    public const int WheelGetFreeFieldNumber = 7;
    private bool wheelGetFree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WheelGetFree {
      get { return wheelGetFree_; }
      set {
        wheelGetFree_ = value;
      }
    }

    /// <summary>Field number for the "WheelFGType" field.</summary>
    public const int WheelFGTypeFieldNumber = 8;
    private int wheelFGType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WheelFGType {
      get { return wheelFGType_; }
      set {
        wheelFGType_ = value;
      }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 9;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "AllWin" field.</summary>
    public const int AllWinFieldNumber = 10;
    private double allWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AllWin {
      get { return allWin_; }
      set {
        allWin_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 11;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MainPlate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MainPlate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!symbol_.Equals(other.symbol_)) return false;
      if(!awardDataVec_.Equals(other.awardDataVec_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlateWin, other.PlateWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ScatterCount, other.ScatterCount)) return false;
      if (WheelType != other.WheelType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WheelWin, other.WheelWin)) return false;
      if (WheelGetFree != other.WheelGetFree) return false;
      if (WheelFGType != other.WheelFGType) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AllWin, other.AllWin)) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= symbol_.GetHashCode();
      hash ^= awardDataVec_.GetHashCode();
      if (PlateWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlateWin);
      if (ScatterCount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ScatterCount);
      if (WheelType != 0) hash ^= WheelType.GetHashCode();
      if (WheelWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WheelWin);
      if (WheelGetFree != false) hash ^= WheelGetFree.GetHashCode();
      if (WheelFGType != 0) hash ^= WheelFGType.GetHashCode();
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (AllWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AllWin);
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      symbol_.WriteTo(output, _repeated_symbol_codec);
      awardDataVec_.WriteTo(output, _repeated_awardDataVec_codec);
      if (PlateWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PlateWin);
      }
      if (ScatterCount != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ScatterCount);
      }
      if (WheelType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WheelType);
      }
      if (WheelWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(WheelWin);
      }
      if (WheelGetFree != false) {
        output.WriteRawTag(56);
        output.WriteBool(WheelGetFree);
      }
      if (WheelFGType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(WheelFGType);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AwardTypeFlag);
      }
      if (AllWin != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(AllWin);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(88);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      symbol_.WriteTo(ref output, _repeated_symbol_codec);
      awardDataVec_.WriteTo(ref output, _repeated_awardDataVec_codec);
      if (PlateWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PlateWin);
      }
      if (ScatterCount != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ScatterCount);
      }
      if (WheelType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WheelType);
      }
      if (WheelWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(WheelWin);
      }
      if (WheelGetFree != false) {
        output.WriteRawTag(56);
        output.WriteBool(WheelGetFree);
      }
      if (WheelFGType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(WheelFGType);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AwardTypeFlag);
      }
      if (AllWin != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(AllWin);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(88);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += symbol_.CalculateSize(_repeated_symbol_codec);
      size += awardDataVec_.CalculateSize(_repeated_awardDataVec_codec);
      if (PlateWin != 0D) {
        size += 1 + 8;
      }
      if (ScatterCount != 0D) {
        size += 1 + 8;
      }
      if (WheelType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WheelType);
      }
      if (WheelWin != 0D) {
        size += 1 + 8;
      }
      if (WheelGetFree != false) {
        size += 1 + 1;
      }
      if (WheelFGType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WheelFGType);
      }
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (AllWin != 0D) {
        size += 1 + 8;
      }
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MainPlate other) {
      if (other == null) {
        return;
      }
      symbol_.Add(other.symbol_);
      awardDataVec_.Add(other.awardDataVec_);
      if (other.PlateWin != 0D) {
        PlateWin = other.PlateWin;
      }
      if (other.ScatterCount != 0D) {
        ScatterCount = other.ScatterCount;
      }
      if (other.WheelType != 0) {
        WheelType = other.WheelType;
      }
      if (other.WheelWin != 0D) {
        WheelWin = other.WheelWin;
      }
      if (other.WheelGetFree != false) {
        WheelGetFree = other.WheelGetFree;
      }
      if (other.WheelFGType != 0) {
        WheelFGType = other.WheelFGType;
      }
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.AllWin != 0D) {
        AllWin = other.AllWin;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            symbol_.AddEntriesFrom(input, _repeated_symbol_codec);
            break;
          }
          case 18: {
            awardDataVec_.AddEntriesFrom(input, _repeated_awardDataVec_codec);
            break;
          }
          case 25: {
            PlateWin = input.ReadDouble();
            break;
          }
          case 33: {
            ScatterCount = input.ReadDouble();
            break;
          }
          case 40: {
            WheelType = input.ReadInt32();
            break;
          }
          case 49: {
            WheelWin = input.ReadDouble();
            break;
          }
          case 56: {
            WheelGetFree = input.ReadBool();
            break;
          }
          case 64: {
            WheelFGType = input.ReadInt32();
            break;
          }
          case 72: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 81: {
            AllWin = input.ReadDouble();
            break;
          }
          case 88: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            symbol_.AddEntriesFrom(ref input, _repeated_symbol_codec);
            break;
          }
          case 18: {
            awardDataVec_.AddEntriesFrom(ref input, _repeated_awardDataVec_codec);
            break;
          }
          case 25: {
            PlateWin = input.ReadDouble();
            break;
          }
          case 33: {
            ScatterCount = input.ReadDouble();
            break;
          }
          case 40: {
            WheelType = input.ReadInt32();
            break;
          }
          case 49: {
            WheelWin = input.ReadDouble();
            break;
          }
          case 56: {
            WheelGetFree = input.ReadBool();
            break;
          }
          case 64: {
            WheelFGType = input.ReadInt32();
            break;
          }
          case 72: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 81: {
            AllWin = input.ReadDouble();
            break;
          }
          case 88: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FreeData : pb::IMessage<FreeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FreeData> _parser = new pb::MessageParser<FreeData>(() => new FreeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FreeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreeData(FreeData other) : this() {
      freeStart_ = other.freeStart_ != null ? other.freeStart_.Clone() : null;
      freeQueue_ = other.freeQueue_.Clone();
      freeTotalWin_ = other.freeTotalWin_;
      fianlChoose_ = other.fianlChoose_;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreeData Clone() {
      return new FreeData(this);
    }

    /// <summary>Field number for the "FreeStart" field.</summary>
    public const int FreeStartFieldNumber = 1;
    private global::Jili.Protocols.Tph.FreePlate freeStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Tph.FreePlate FreeStart {
      get { return freeStart_; }
      set {
        freeStart_ = value;
      }
    }

    /// <summary>Field number for the "FreeQueue" field.</summary>
    public const int FreeQueueFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.FreePlate> _repeated_freeQueue_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Tph.FreePlate.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.FreePlate> freeQueue_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.FreePlate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.FreePlate> FreeQueue {
      get { return freeQueue_; }
    }

    /// <summary>Field number for the "FreeTotalWin" field.</summary>
    public const int FreeTotalWinFieldNumber = 3;
    private double freeTotalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FreeTotalWin {
      get { return freeTotalWin_; }
      set {
        freeTotalWin_ = value;
      }
    }

    /// <summary>Field number for the "FianlChoose" field.</summary>
    public const int FianlChooseFieldNumber = 4;
    private int fianlChoose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FianlChoose {
      get { return fianlChoose_; }
      set {
        fianlChoose_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 5;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FreeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FreeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FreeStart, other.FreeStart)) return false;
      if(!freeQueue_.Equals(other.freeQueue_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FreeTotalWin, other.FreeTotalWin)) return false;
      if (FianlChoose != other.FianlChoose) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (freeStart_ != null) hash ^= FreeStart.GetHashCode();
      hash ^= freeQueue_.GetHashCode();
      if (FreeTotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FreeTotalWin);
      if (FianlChoose != 0) hash ^= FianlChoose.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (freeStart_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FreeStart);
      }
      freeQueue_.WriteTo(output, _repeated_freeQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(FreeTotalWin);
      }
      if (FianlChoose != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FianlChoose);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (freeStart_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FreeStart);
      }
      freeQueue_.WriteTo(ref output, _repeated_freeQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(FreeTotalWin);
      }
      if (FianlChoose != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FianlChoose);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (freeStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FreeStart);
      }
      size += freeQueue_.CalculateSize(_repeated_freeQueue_codec);
      if (FreeTotalWin != 0D) {
        size += 1 + 8;
      }
      if (FianlChoose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FianlChoose);
      }
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FreeData other) {
      if (other == null) {
        return;
      }
      if (other.freeStart_ != null) {
        if (freeStart_ == null) {
          FreeStart = new global::Jili.Protocols.Tph.FreePlate();
        }
        FreeStart.MergeFrom(other.FreeStart);
      }
      freeQueue_.Add(other.freeQueue_);
      if (other.FreeTotalWin != 0D) {
        FreeTotalWin = other.FreeTotalWin;
      }
      if (other.FianlChoose != 0) {
        FianlChoose = other.FianlChoose;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (freeStart_ == null) {
              FreeStart = new global::Jili.Protocols.Tph.FreePlate();
            }
            input.ReadMessage(FreeStart);
            break;
          }
          case 18: {
            freeQueue_.AddEntriesFrom(input, _repeated_freeQueue_codec);
            break;
          }
          case 25: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 32: {
            FianlChoose = input.ReadInt32();
            break;
          }
          case 40: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (freeStart_ == null) {
              FreeStart = new global::Jili.Protocols.Tph.FreePlate();
            }
            input.ReadMessage(FreeStart);
            break;
          }
          case 18: {
            freeQueue_.AddEntriesFrom(ref input, _repeated_freeQueue_codec);
            break;
          }
          case 25: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 32: {
            FianlChoose = input.ReadInt32();
            break;
          }
          case 40: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FreePlate : pb::IMessage<FreePlate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FreePlate> _parser = new pb::MessageParser<FreePlate>(() => new FreePlate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FreePlate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreePlate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreePlate(FreePlate other) : this() {
      symbol_ = other.symbol_.Clone();
      bound_ = other.bound_.Clone();
      roundNow_ = other.roundNow_;
      roundTotal_ = other.roundTotal_;
      roundPlus_ = other.roundPlus_;
      shift_ = other.shift_.Clone();
      mega1Extend_ = other.mega1Extend_.Clone();
      lvMaxAwardDataVec_ = other.lvMaxAwardDataVec_.Clone();
      finalAwardDataVec_ = other.finalAwardDataVec_.Clone();
      lvWin_ = other.lvWin_;
      finalWin_ = other.finalWin_;
      awardTypeFlag_ = other.awardTypeFlag_;
      allWin_ = other.allWin_;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreePlate Clone() {
      return new FreePlate(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.Column> _repeated_symbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Tph.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.Column> symbol_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.Column> Symbol {
      get { return symbol_; }
    }

    /// <summary>Field number for the "Bound" field.</summary>
    public const int BoundFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.Column> _repeated_bound_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Tph.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.Column> bound_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.Column> Bound {
      get { return bound_; }
    }

    /// <summary>Field number for the "RoundNow" field.</summary>
    public const int RoundNowFieldNumber = 3;
    private int roundNow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoundNow {
      get { return roundNow_; }
      set {
        roundNow_ = value;
      }
    }

    /// <summary>Field number for the "RoundTotal" field.</summary>
    public const int RoundTotalFieldNumber = 4;
    private int roundTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoundTotal {
      get { return roundTotal_; }
      set {
        roundTotal_ = value;
      }
    }

    /// <summary>Field number for the "RoundPlus" field.</summary>
    public const int RoundPlusFieldNumber = 5;
    private int roundPlus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoundPlus {
      get { return roundPlus_; }
      set {
        roundPlus_ = value;
      }
    }

    /// <summary>Field number for the "Shift" field.</summary>
    public const int ShiftFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.ShiftUpData> _repeated_shift_codec
        = pb::FieldCodec.ForMessage(50, global::Jili.Protocols.Tph.ShiftUpData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.ShiftUpData> shift_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.ShiftUpData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.ShiftUpData> Shift {
      get { return shift_; }
    }

    /// <summary>Field number for the "Mega1Extend" field.</summary>
    public const int Mega1ExtendFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.ExtendData> _repeated_mega1Extend_codec
        = pb::FieldCodec.ForMessage(58, global::Jili.Protocols.Tph.ExtendData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.ExtendData> mega1Extend_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.ExtendData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.ExtendData> Mega1Extend {
      get { return mega1Extend_; }
    }

    /// <summary>Field number for the "LvMaxAwardDataVec" field.</summary>
    public const int LvMaxAwardDataVecFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.FreeAwardData> _repeated_lvMaxAwardDataVec_codec
        = pb::FieldCodec.ForMessage(66, global::Jili.Protocols.Tph.FreeAwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.FreeAwardData> lvMaxAwardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.FreeAwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.FreeAwardData> LvMaxAwardDataVec {
      get { return lvMaxAwardDataVec_; }
    }

    /// <summary>Field number for the "FinalAwardDataVec" field.</summary>
    public const int FinalAwardDataVecFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tph.FreeAwardData> _repeated_finalAwardDataVec_codec
        = pb::FieldCodec.ForMessage(74, global::Jili.Protocols.Tph.FreeAwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tph.FreeAwardData> finalAwardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Tph.FreeAwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tph.FreeAwardData> FinalAwardDataVec {
      get { return finalAwardDataVec_; }
    }

    /// <summary>Field number for the "LvWin" field.</summary>
    public const int LvWinFieldNumber = 10;
    private double lvWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LvWin {
      get { return lvWin_; }
      set {
        lvWin_ = value;
      }
    }

    /// <summary>Field number for the "FinalWin" field.</summary>
    public const int FinalWinFieldNumber = 11;
    private double finalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FinalWin {
      get { return finalWin_; }
      set {
        finalWin_ = value;
      }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 12;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "AllWin" field.</summary>
    public const int AllWinFieldNumber = 13;
    private double allWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AllWin {
      get { return allWin_; }
      set {
        allWin_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 14;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FreePlate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FreePlate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!symbol_.Equals(other.symbol_)) return false;
      if(!bound_.Equals(other.bound_)) return false;
      if (RoundNow != other.RoundNow) return false;
      if (RoundTotal != other.RoundTotal) return false;
      if (RoundPlus != other.RoundPlus) return false;
      if(!shift_.Equals(other.shift_)) return false;
      if(!mega1Extend_.Equals(other.mega1Extend_)) return false;
      if(!lvMaxAwardDataVec_.Equals(other.lvMaxAwardDataVec_)) return false;
      if(!finalAwardDataVec_.Equals(other.finalAwardDataVec_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LvWin, other.LvWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FinalWin, other.FinalWin)) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AllWin, other.AllWin)) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= symbol_.GetHashCode();
      hash ^= bound_.GetHashCode();
      if (RoundNow != 0) hash ^= RoundNow.GetHashCode();
      if (RoundTotal != 0) hash ^= RoundTotal.GetHashCode();
      if (RoundPlus != 0) hash ^= RoundPlus.GetHashCode();
      hash ^= shift_.GetHashCode();
      hash ^= mega1Extend_.GetHashCode();
      hash ^= lvMaxAwardDataVec_.GetHashCode();
      hash ^= finalAwardDataVec_.GetHashCode();
      if (LvWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LvWin);
      if (FinalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FinalWin);
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (AllWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AllWin);
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      symbol_.WriteTo(output, _repeated_symbol_codec);
      bound_.WriteTo(output, _repeated_bound_codec);
      if (RoundNow != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoundNow);
      }
      if (RoundTotal != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoundTotal);
      }
      if (RoundPlus != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RoundPlus);
      }
      shift_.WriteTo(output, _repeated_shift_codec);
      mega1Extend_.WriteTo(output, _repeated_mega1Extend_codec);
      lvMaxAwardDataVec_.WriteTo(output, _repeated_lvMaxAwardDataVec_codec);
      finalAwardDataVec_.WriteTo(output, _repeated_finalAwardDataVec_codec);
      if (LvWin != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(LvWin);
      }
      if (FinalWin != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(FinalWin);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(AwardTypeFlag);
      }
      if (AllWin != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(AllWin);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(112);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      symbol_.WriteTo(ref output, _repeated_symbol_codec);
      bound_.WriteTo(ref output, _repeated_bound_codec);
      if (RoundNow != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoundNow);
      }
      if (RoundTotal != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoundTotal);
      }
      if (RoundPlus != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RoundPlus);
      }
      shift_.WriteTo(ref output, _repeated_shift_codec);
      mega1Extend_.WriteTo(ref output, _repeated_mega1Extend_codec);
      lvMaxAwardDataVec_.WriteTo(ref output, _repeated_lvMaxAwardDataVec_codec);
      finalAwardDataVec_.WriteTo(ref output, _repeated_finalAwardDataVec_codec);
      if (LvWin != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(LvWin);
      }
      if (FinalWin != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(FinalWin);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(AwardTypeFlag);
      }
      if (AllWin != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(AllWin);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(112);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += symbol_.CalculateSize(_repeated_symbol_codec);
      size += bound_.CalculateSize(_repeated_bound_codec);
      if (RoundNow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundNow);
      }
      if (RoundTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundTotal);
      }
      if (RoundPlus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundPlus);
      }
      size += shift_.CalculateSize(_repeated_shift_codec);
      size += mega1Extend_.CalculateSize(_repeated_mega1Extend_codec);
      size += lvMaxAwardDataVec_.CalculateSize(_repeated_lvMaxAwardDataVec_codec);
      size += finalAwardDataVec_.CalculateSize(_repeated_finalAwardDataVec_codec);
      if (LvWin != 0D) {
        size += 1 + 8;
      }
      if (FinalWin != 0D) {
        size += 1 + 8;
      }
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (AllWin != 0D) {
        size += 1 + 8;
      }
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FreePlate other) {
      if (other == null) {
        return;
      }
      symbol_.Add(other.symbol_);
      bound_.Add(other.bound_);
      if (other.RoundNow != 0) {
        RoundNow = other.RoundNow;
      }
      if (other.RoundTotal != 0) {
        RoundTotal = other.RoundTotal;
      }
      if (other.RoundPlus != 0) {
        RoundPlus = other.RoundPlus;
      }
      shift_.Add(other.shift_);
      mega1Extend_.Add(other.mega1Extend_);
      lvMaxAwardDataVec_.Add(other.lvMaxAwardDataVec_);
      finalAwardDataVec_.Add(other.finalAwardDataVec_);
      if (other.LvWin != 0D) {
        LvWin = other.LvWin;
      }
      if (other.FinalWin != 0D) {
        FinalWin = other.FinalWin;
      }
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.AllWin != 0D) {
        AllWin = other.AllWin;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            symbol_.AddEntriesFrom(input, _repeated_symbol_codec);
            break;
          }
          case 18: {
            bound_.AddEntriesFrom(input, _repeated_bound_codec);
            break;
          }
          case 24: {
            RoundNow = input.ReadInt32();
            break;
          }
          case 32: {
            RoundTotal = input.ReadInt32();
            break;
          }
          case 40: {
            RoundPlus = input.ReadInt32();
            break;
          }
          case 50: {
            shift_.AddEntriesFrom(input, _repeated_shift_codec);
            break;
          }
          case 58: {
            mega1Extend_.AddEntriesFrom(input, _repeated_mega1Extend_codec);
            break;
          }
          case 66: {
            lvMaxAwardDataVec_.AddEntriesFrom(input, _repeated_lvMaxAwardDataVec_codec);
            break;
          }
          case 74: {
            finalAwardDataVec_.AddEntriesFrom(input, _repeated_finalAwardDataVec_codec);
            break;
          }
          case 81: {
            LvWin = input.ReadDouble();
            break;
          }
          case 89: {
            FinalWin = input.ReadDouble();
            break;
          }
          case 96: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 105: {
            AllWin = input.ReadDouble();
            break;
          }
          case 112: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            symbol_.AddEntriesFrom(ref input, _repeated_symbol_codec);
            break;
          }
          case 18: {
            bound_.AddEntriesFrom(ref input, _repeated_bound_codec);
            break;
          }
          case 24: {
            RoundNow = input.ReadInt32();
            break;
          }
          case 32: {
            RoundTotal = input.ReadInt32();
            break;
          }
          case 40: {
            RoundPlus = input.ReadInt32();
            break;
          }
          case 50: {
            shift_.AddEntriesFrom(ref input, _repeated_shift_codec);
            break;
          }
          case 58: {
            mega1Extend_.AddEntriesFrom(ref input, _repeated_mega1Extend_codec);
            break;
          }
          case 66: {
            lvMaxAwardDataVec_.AddEntriesFrom(ref input, _repeated_lvMaxAwardDataVec_codec);
            break;
          }
          case 74: {
            finalAwardDataVec_.AddEntriesFrom(ref input, _repeated_finalAwardDataVec_codec);
            break;
          }
          case 81: {
            LvWin = input.ReadDouble();
            break;
          }
          case 89: {
            FinalWin = input.ReadDouble();
            break;
          }
          case 96: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 105: {
            AllWin = input.ReadDouble();
            break;
          }
          case 112: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      row_ = other.row_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Row" field.</summary>
    public const int RowFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_row_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> row_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Row {
      get { return row_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!row_.Equals(other.row_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= row_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      row_.WriteTo(output, _repeated_row_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      row_.WriteTo(ref output, _repeated_row_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += row_.CalculateSize(_repeated_row_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      row_.Add(other.row_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            row_.AddEntriesFrom(input, _repeated_row_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            row_.AddEntriesFrom(ref input, _repeated_row_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FreeAwardData : pb::IMessage<FreeAwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FreeAwardData> _parser = new pb::MessageParser<FreeAwardData>(() => new FreeAwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FreeAwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreeAwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreeAwardData(FreeAwardData other) : this() {
      pos_ = other.pos_;
      mul_ = other.mul_;
      win_ = other.win_;
      winType_ = other.winType_;
      jPType_ = other.jPType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FreeAwardData Clone() {
      return new FreeAwardData(this);
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "Mul" field.</summary>
    public const int MulFieldNumber = 2;
    private double mul_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mul {
      get { return mul_; }
      set {
        mul_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 3;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    /// <summary>Field number for the "WinType" field.</summary>
    public const int WinTypeFieldNumber = 4;
    private int winType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WinType {
      get { return winType_; }
      set {
        winType_ = value;
      }
    }

    /// <summary>Field number for the "JPType" field.</summary>
    public const int JPTypeFieldNumber = 5;
    private int jPType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JPType {
      get { return jPType_; }
      set {
        jPType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FreeAwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FreeAwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mul, other.Mul)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      if (WinType != other.WinType) return false;
      if (JPType != other.JPType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (Mul != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mul);
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      if (WinType != 0) hash ^= WinType.GetHashCode();
      if (JPType != 0) hash ^= JPType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Mul != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Mul);
      }
      if (Win != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Win);
      }
      if (WinType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(WinType);
      }
      if (JPType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(JPType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Mul != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Mul);
      }
      if (Win != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Win);
      }
      if (WinType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(WinType);
      }
      if (JPType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(JPType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (Mul != 0D) {
        size += 1 + 8;
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      if (WinType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinType);
      }
      if (JPType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JPType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FreeAwardData other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.Mul != 0D) {
        Mul = other.Mul;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      if (other.WinType != 0) {
        WinType = other.WinType;
      }
      if (other.JPType != 0) {
        JPType = other.JPType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 17: {
            Mul = input.ReadDouble();
            break;
          }
          case 25: {
            Win = input.ReadDouble();
            break;
          }
          case 32: {
            WinType = input.ReadInt32();
            break;
          }
          case 40: {
            JPType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 17: {
            Mul = input.ReadDouble();
            break;
          }
          case 25: {
            Win = input.ReadDouble();
            break;
          }
          case 32: {
            WinType = input.ReadInt32();
            break;
          }
          case 40: {
            JPType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ShiftUpData : pb::IMessage<ShiftUpData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShiftUpData> _parser = new pb::MessageParser<ShiftUpData>(() => new ShiftUpData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShiftUpData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShiftUpData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShiftUpData(ShiftUpData other) : this() {
      pos_ = other.pos_;
      target_ = other.target_;
      upcount_ = other.upcount_;
      src_ = other.src_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShiftUpData Clone() {
      return new ShiftUpData(this);
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "Target" field.</summary>
    public const int TargetFieldNumber = 2;
    private int target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "Upcount" field.</summary>
    public const int UpcountFieldNumber = 3;
    private int upcount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Upcount {
      get { return upcount_; }
      set {
        upcount_ = value;
      }
    }

    /// <summary>Field number for the "Src" field.</summary>
    public const int SrcFieldNumber = 4;
    private int src_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Src {
      get { return src_; }
      set {
        src_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShiftUpData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShiftUpData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if (Target != other.Target) return false;
      if (Upcount != other.Upcount) return false;
      if (Src != other.Src) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (Target != 0) hash ^= Target.GetHashCode();
      if (Upcount != 0) hash ^= Upcount.GetHashCode();
      if (Src != 0) hash ^= Src.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Target != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Target);
      }
      if (Upcount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Upcount);
      }
      if (Src != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Src);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Target != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Target);
      }
      if (Upcount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Upcount);
      }
      if (Src != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Src);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (Target != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Target);
      }
      if (Upcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Upcount);
      }
      if (Src != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Src);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShiftUpData other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.Target != 0) {
        Target = other.Target;
      }
      if (other.Upcount != 0) {
        Upcount = other.Upcount;
      }
      if (other.Src != 0) {
        Src = other.Src;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 16: {
            Target = input.ReadInt32();
            break;
          }
          case 24: {
            Upcount = input.ReadInt32();
            break;
          }
          case 32: {
            Src = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 16: {
            Target = input.ReadInt32();
            break;
          }
          case 24: {
            Upcount = input.ReadInt32();
            break;
          }
          case 32: {
            Src = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExtendData : pb::IMessage<ExtendData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExtendData> _parser = new pb::MessageParser<ExtendData>(() => new ExtendData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExtendData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtendData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtendData(ExtendData other) : this() {
      pos_ = other.pos_;
      extendType_ = other.extendType_;
      extendPos_ = other.extendPos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtendData Clone() {
      return new ExtendData(this);
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "ExtendType" field.</summary>
    public const int ExtendTypeFieldNumber = 2;
    private int extendType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExtendType {
      get { return extendType_; }
      set {
        extendType_ = value;
      }
    }

    /// <summary>Field number for the "ExtendPos" field.</summary>
    public const int ExtendPosFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_extendPos_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> extendPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ExtendPos {
      get { return extendPos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExtendData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExtendData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if (ExtendType != other.ExtendType) return false;
      if(!extendPos_.Equals(other.extendPos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (ExtendType != 0) hash ^= ExtendType.GetHashCode();
      hash ^= extendPos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (ExtendType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExtendType);
      }
      extendPos_.WriteTo(output, _repeated_extendPos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (ExtendType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExtendType);
      }
      extendPos_.WriteTo(ref output, _repeated_extendPos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (ExtendType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtendType);
      }
      size += extendPos_.CalculateSize(_repeated_extendPos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExtendData other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.ExtendType != 0) {
        ExtendType = other.ExtendType;
      }
      extendPos_.Add(other.extendPos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 16: {
            ExtendType = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            extendPos_.AddEntriesFrom(input, _repeated_extendPos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 16: {
            ExtendType = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            extendPos_.AddEntriesFrom(ref input, _repeated_extendPos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tph.SpinAckReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      symbol_ = other.symbol_;
      count_ = other.count_;
      lineNum_ = other.lineNum_;
      win_ = other.win_;
      pos_ = other.pos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "LineNum" field.</summary>
    public const int LineNumFieldNumber = 3;
    private int lineNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LineNum {
      get { return lineNum_; }
      set {
        lineNum_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 4;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_pos_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> pos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Pos {
      get { return pos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Count != other.Count) return false;
      if (LineNum != other.LineNum) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      if(!pos_.Equals(other.pos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (LineNum != 0) hash ^= LineNum.GetHashCode();
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      hash ^= pos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (LineNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LineNum);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      pos_.WriteTo(output, _repeated_pos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (LineNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LineNum);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      pos_.WriteTo(ref output, _repeated_pos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (LineNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LineNum);
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      size += pos_.CalculateSize(_repeated_pos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.LineNum != 0) {
        LineNum = other.LineNum;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      pos_.Add(other.pos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            LineNum = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
          case 42:
          case 40: {
            pos_.AddEntriesFrom(input, _repeated_pos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            LineNum = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
          case 42:
          case 40: {
            pos_.AddEntriesFrom(ref input, _repeated_pos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
