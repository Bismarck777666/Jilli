// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Tsq {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhJKaWxpLlByb3RvY29scy50c3EikQEKB1NwaW5B",
            "Y2sSMQoKUm91bmRRdWV1ZRgBIAMoCzIdLkppbGkuUHJvdG9jb2xzLnRzcS5S",
            "b3VuZEluZm8SFAoMRnJlZVRvdGFsV2luGAIgASgBEg0KBUlzQnV5GAMgASgI",
            "EhAKCFRvdGFsV2luGAQgASgBEg8KB0Fja1R5cGUYBSABKAUSCwoDUlRQGAYg",
            "ASgBIugBCglSb3VuZEluZm8SOgoOQ29tYm9TdGFnZURhdGEYASADKAsyIi5K",
            "aWxpLlByb3RvY29scy50c3EuQ29tYm9TdGFnZUluZm8SEAoIUm91bmRXaW4Y",
            "AiABKAESDAoETXVsdBgDIAEoARIQCghMaWdodFBvcxgEIAMoBRIbChNUb3Rh",
            "bEVsaW1pbmF0ZUNvdW50GAUgASgFEhIKCkxldmVsQ291bnQYBiABKAUSDQoF",
            "TGV2ZWwYByABKAUSFgoORnJlZVRvdGFsUm91bmQYCCABKAUSFQoNQXdhcmRU",
            "eXBlRmxhZxgJIAEoBSL4AgoOQ29tYm9TdGFnZUluZm8SNAoQQ29tYm9TdGFn",
            "ZVN5bWJvbBgBIAMoCzIaLkppbGkuUHJvdG9jb2xzLnRzcS5Db2x1bW4SFQoN",
            "Q29tYm9TdGFnZVdpbhgCIAEoARIzCgxBd2FyZERhdGFWZWMYAyADKAsyHS5K",
            "aWxpLlByb3RvY29scy50c3EuQXdhcmREYXRhEi8KC0ZpbGxTeW1ib2xzGAQg",
            "AygLMhouSmlsaS5Qcm90b2NvbHMudHNxLkNvbHVtbhIVCg1OZWVkRWxpbWlu",
            "YXRlGAUgASgIEi0KCUVsaW1pbmF0ZRgGIAMoCzIaLkppbGkuUHJvdG9jb2xz",
            "LnRzcS5Db2x1bW4SFgoORWxpbWluYXRlQ291bnQYByABKAUSEAoITGlnaHRH",
            "ZXQYCCADKAgSEQoJTGlnaHRTaG93GAkgAygIEjAKCUxpZ2h0SW5mbxgKIAMo",
            "CzIdLkppbGkuUHJvdG9jb2xzLnRzcS5MaWdodERhdGEiFQoGQ29sdW1uEgsK",
            "A0NvbBgBIAMoBSLPAQoJTGlnaHREYXRhEhEKCUxpZ2h0VHlwZRgBIAEoBRIP",
            "CgdUd29JbmZvGAIgASgFEi0KCVRocmVlSW5mbxgDIAMoCzIaLkppbGkuUHJv",
            "dG9jb2xzLnRzcS5CaWdHZW0SLAoIRm91ckluZm8YBCADKAsyGi5KaWxpLlBy",
            "b3RvY29scy50c3EuQmlnR2VtEhAKCEZpdmVJbmZvGAUgAygFEi8KC0xpZ2h0",
            "U3ltYm9sGAYgAygLMhouSmlsaS5Qcm90b2NvbHMudHNxLkNvbHVtbiI2CgZC",
            "aWdHZW0SDgoGU3ltYm9sGAEgASgFEgwKBFNpemUYAiABKAUSDgoGUG9zVmVj",
            "GAMgAygFIlkKCUF3YXJkRGF0YRIOCgZTeW1ib2wYASABKAUSDQoFQ291bnQY",
            "AiABKAUSEAoIT2RkQ291bnQYAyABKAUSDgoGUG9zVmVjGAQgAygFEgsKA1dp",
            "bhgFIAEoAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tsq.SpinAck), global::Jili.Protocols.Tsq.SpinAck.Parser, new[]{ "RoundQueue", "FreeTotalWin", "IsBuy", "TotalWin", "AckType", "RTP" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tsq.RoundInfo), global::Jili.Protocols.Tsq.RoundInfo.Parser, new[]{ "ComboStageData", "RoundWin", "Mult", "LightPos", "TotalEliminateCount", "LevelCount", "Level", "FreeTotalRound", "AwardTypeFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tsq.ComboStageInfo), global::Jili.Protocols.Tsq.ComboStageInfo.Parser, new[]{ "ComboStageSymbol", "ComboStageWin", "AwardDataVec", "FillSymbols", "NeedEliminate", "Eliminate", "EliminateCount", "LightGet", "LightShow", "LightInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tsq.Column), global::Jili.Protocols.Tsq.Column.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tsq.LightData), global::Jili.Protocols.Tsq.LightData.Parser, new[]{ "LightType", "TwoInfo", "ThreeInfo", "FourInfo", "FiveInfo", "LightSymbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tsq.BigGem), global::Jili.Protocols.Tsq.BigGem.Parser, new[]{ "Symbol", "Size", "PosVec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Tsq.AwardData), global::Jili.Protocols.Tsq.AwardData.Parser, new[]{ "Symbol", "Count", "OddCount", "PosVec", "Win" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tsq.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      roundQueue_ = other.roundQueue_.Clone();
      freeTotalWin_ = other.freeTotalWin_;
      isBuy_ = other.isBuy_;
      totalWin_ = other.totalWin_;
      ackType_ = other.ackType_;
      rTP_ = other.rTP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "RoundQueue" field.</summary>
    public const int RoundQueueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.RoundInfo> _repeated_roundQueue_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Tsq.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.RoundInfo> roundQueue_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.RoundInfo> RoundQueue {
      get { return roundQueue_; }
    }

    /// <summary>Field number for the "FreeTotalWin" field.</summary>
    public const int FreeTotalWinFieldNumber = 2;
    private double freeTotalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FreeTotalWin {
      get { return freeTotalWin_; }
      set {
        freeTotalWin_ = value;
      }
    }

    /// <summary>Field number for the "IsBuy" field.</summary>
    public const int IsBuyFieldNumber = 3;
    private bool isBuy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBuy {
      get { return isBuy_; }
      set {
        isBuy_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 4;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "AckType" field.</summary>
    public const int AckTypeFieldNumber = 5;
    private int ackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 6;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundQueue_.Equals(other.roundQueue_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FreeTotalWin, other.FreeTotalWin)) return false;
      if (IsBuy != other.IsBuy) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (AckType != other.AckType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundQueue_.GetHashCode();
      if (FreeTotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FreeTotalWin);
      if (IsBuy != false) hash ^= IsBuy.GetHashCode();
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (AckType != 0) hash ^= AckType.GetHashCode();
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundQueue_.WriteTo(output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (IsBuy != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsBuy);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TotalWin);
      }
      if (AckType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RTP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundQueue_.WriteTo(ref output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (IsBuy != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsBuy);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TotalWin);
      }
      if (AckType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RTP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roundQueue_.CalculateSize(_repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        size += 1 + 8;
      }
      if (IsBuy != false) {
        size += 1 + 1;
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckType);
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      roundQueue_.Add(other.roundQueue_);
      if (other.FreeTotalWin != 0D) {
        FreeTotalWin = other.FreeTotalWin;
      }
      if (other.IsBuy != false) {
        IsBuy = other.IsBuy;
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 24: {
            IsBuy = input.ReadBool();
            break;
          }
          case 33: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 40: {
            AckType = input.ReadInt32();
            break;
          }
          case 49: {
            RTP = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(ref input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 24: {
            IsBuy = input.ReadBool();
            break;
          }
          case 33: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 40: {
            AckType = input.ReadInt32();
            break;
          }
          case 49: {
            RTP = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoundInfo : pb::IMessage<RoundInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tsq.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo(RoundInfo other) : this() {
      comboStageData_ = other.comboStageData_.Clone();
      roundWin_ = other.roundWin_;
      mult_ = other.mult_;
      lightPos_ = other.lightPos_.Clone();
      totalEliminateCount_ = other.totalEliminateCount_;
      levelCount_ = other.levelCount_;
      level_ = other.level_;
      freeTotalRound_ = other.freeTotalRound_;
      awardTypeFlag_ = other.awardTypeFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "ComboStageData" field.</summary>
    public const int ComboStageDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.ComboStageInfo> _repeated_comboStageData_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Tsq.ComboStageInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.ComboStageInfo> comboStageData_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.ComboStageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.ComboStageInfo> ComboStageData {
      get { return comboStageData_; }
    }

    /// <summary>Field number for the "RoundWin" field.</summary>
    public const int RoundWinFieldNumber = 2;
    private double roundWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RoundWin {
      get { return roundWin_; }
      set {
        roundWin_ = value;
      }
    }

    /// <summary>Field number for the "Mult" field.</summary>
    public const int MultFieldNumber = 3;
    private double mult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mult {
      get { return mult_; }
      set {
        mult_ = value;
      }
    }

    /// <summary>Field number for the "LightPos" field.</summary>
    public const int LightPosFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_lightPos_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> lightPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> LightPos {
      get { return lightPos_; }
    }

    /// <summary>Field number for the "TotalEliminateCount" field.</summary>
    public const int TotalEliminateCountFieldNumber = 5;
    private int totalEliminateCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalEliminateCount {
      get { return totalEliminateCount_; }
      set {
        totalEliminateCount_ = value;
      }
    }

    /// <summary>Field number for the "LevelCount" field.</summary>
    public const int LevelCountFieldNumber = 6;
    private int levelCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LevelCount {
      get { return levelCount_; }
      set {
        levelCount_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 7;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "FreeTotalRound" field.</summary>
    public const int FreeTotalRoundFieldNumber = 8;
    private int freeTotalRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeTotalRound {
      get { return freeTotalRound_; }
      set {
        freeTotalRound_ = value;
      }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 9;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comboStageData_.Equals(other.comboStageData_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RoundWin, other.RoundWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mult, other.Mult)) return false;
      if(!lightPos_.Equals(other.lightPos_)) return false;
      if (TotalEliminateCount != other.TotalEliminateCount) return false;
      if (LevelCount != other.LevelCount) return false;
      if (Level != other.Level) return false;
      if (FreeTotalRound != other.FreeTotalRound) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comboStageData_.GetHashCode();
      if (RoundWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RoundWin);
      if (Mult != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mult);
      hash ^= lightPos_.GetHashCode();
      if (TotalEliminateCount != 0) hash ^= TotalEliminateCount.GetHashCode();
      if (LevelCount != 0) hash ^= LevelCount.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (FreeTotalRound != 0) hash ^= FreeTotalRound.GetHashCode();
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comboStageData_.WriteTo(output, _repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RoundWin);
      }
      if (Mult != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mult);
      }
      lightPos_.WriteTo(output, _repeated_lightPos_codec);
      if (TotalEliminateCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalEliminateCount);
      }
      if (LevelCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LevelCount);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (FreeTotalRound != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FreeTotalRound);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AwardTypeFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comboStageData_.WriteTo(ref output, _repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RoundWin);
      }
      if (Mult != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mult);
      }
      lightPos_.WriteTo(ref output, _repeated_lightPos_codec);
      if (TotalEliminateCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalEliminateCount);
      }
      if (LevelCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LevelCount);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (FreeTotalRound != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FreeTotalRound);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AwardTypeFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += comboStageData_.CalculateSize(_repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        size += 1 + 8;
      }
      if (Mult != 0D) {
        size += 1 + 8;
      }
      size += lightPos_.CalculateSize(_repeated_lightPos_codec);
      if (TotalEliminateCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalEliminateCount);
      }
      if (LevelCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelCount);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (FreeTotalRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeTotalRound);
      }
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      comboStageData_.Add(other.comboStageData_);
      if (other.RoundWin != 0D) {
        RoundWin = other.RoundWin;
      }
      if (other.Mult != 0D) {
        Mult = other.Mult;
      }
      lightPos_.Add(other.lightPos_);
      if (other.TotalEliminateCount != 0) {
        TotalEliminateCount = other.TotalEliminateCount;
      }
      if (other.LevelCount != 0) {
        LevelCount = other.LevelCount;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.FreeTotalRound != 0) {
        FreeTotalRound = other.FreeTotalRound;
      }
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comboStageData_.AddEntriesFrom(input, _repeated_comboStageData_codec);
            break;
          }
          case 17: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 25: {
            Mult = input.ReadDouble();
            break;
          }
          case 34:
          case 32: {
            lightPos_.AddEntriesFrom(input, _repeated_lightPos_codec);
            break;
          }
          case 40: {
            TotalEliminateCount = input.ReadInt32();
            break;
          }
          case 48: {
            LevelCount = input.ReadInt32();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 64: {
            FreeTotalRound = input.ReadInt32();
            break;
          }
          case 72: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comboStageData_.AddEntriesFrom(ref input, _repeated_comboStageData_codec);
            break;
          }
          case 17: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 25: {
            Mult = input.ReadDouble();
            break;
          }
          case 34:
          case 32: {
            lightPos_.AddEntriesFrom(ref input, _repeated_lightPos_codec);
            break;
          }
          case 40: {
            TotalEliminateCount = input.ReadInt32();
            break;
          }
          case 48: {
            LevelCount = input.ReadInt32();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 64: {
            FreeTotalRound = input.ReadInt32();
            break;
          }
          case 72: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ComboStageInfo : pb::IMessage<ComboStageInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComboStageInfo> _parser = new pb::MessageParser<ComboStageInfo>(() => new ComboStageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComboStageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tsq.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo(ComboStageInfo other) : this() {
      comboStageSymbol_ = other.comboStageSymbol_.Clone();
      comboStageWin_ = other.comboStageWin_;
      awardDataVec_ = other.awardDataVec_.Clone();
      fillSymbols_ = other.fillSymbols_.Clone();
      needEliminate_ = other.needEliminate_;
      eliminate_ = other.eliminate_.Clone();
      eliminateCount_ = other.eliminateCount_;
      lightGet_ = other.lightGet_.Clone();
      lightShow_ = other.lightShow_.Clone();
      lightInfo_ = other.lightInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo Clone() {
      return new ComboStageInfo(this);
    }

    /// <summary>Field number for the "ComboStageSymbol" field.</summary>
    public const int ComboStageSymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.Column> _repeated_comboStageSymbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Tsq.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.Column> comboStageSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.Column> ComboStageSymbol {
      get { return comboStageSymbol_; }
    }

    /// <summary>Field number for the "ComboStageWin" field.</summary>
    public const int ComboStageWinFieldNumber = 2;
    private double comboStageWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ComboStageWin {
      get { return comboStageWin_; }
      set {
        comboStageWin_ = value;
      }
    }

    /// <summary>Field number for the "AwardDataVec" field.</summary>
    public const int AwardDataVecFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.AwardData> _repeated_awardDataVec_codec
        = pb::FieldCodec.ForMessage(26, global::Jili.Protocols.Tsq.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.AwardData> awardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.AwardData> AwardDataVec {
      get { return awardDataVec_; }
    }

    /// <summary>Field number for the "FillSymbols" field.</summary>
    public const int FillSymbolsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.Column> _repeated_fillSymbols_codec
        = pb::FieldCodec.ForMessage(34, global::Jili.Protocols.Tsq.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.Column> fillSymbols_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.Column> FillSymbols {
      get { return fillSymbols_; }
    }

    /// <summary>Field number for the "NeedEliminate" field.</summary>
    public const int NeedEliminateFieldNumber = 5;
    private bool needEliminate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedEliminate {
      get { return needEliminate_; }
      set {
        needEliminate_ = value;
      }
    }

    /// <summary>Field number for the "Eliminate" field.</summary>
    public const int EliminateFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.Column> _repeated_eliminate_codec
        = pb::FieldCodec.ForMessage(50, global::Jili.Protocols.Tsq.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.Column> eliminate_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.Column> Eliminate {
      get { return eliminate_; }
    }

    /// <summary>Field number for the "EliminateCount" field.</summary>
    public const int EliminateCountFieldNumber = 7;
    private int eliminateCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EliminateCount {
      get { return eliminateCount_; }
      set {
        eliminateCount_ = value;
      }
    }

    /// <summary>Field number for the "LightGet" field.</summary>
    public const int LightGetFieldNumber = 8;
    private static readonly pb::FieldCodec<bool> _repeated_lightGet_codec
        = pb::FieldCodec.ForBool(66);
    private readonly pbc::RepeatedField<bool> lightGet_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> LightGet {
      get { return lightGet_; }
    }

    /// <summary>Field number for the "LightShow" field.</summary>
    public const int LightShowFieldNumber = 9;
    private static readonly pb::FieldCodec<bool> _repeated_lightShow_codec
        = pb::FieldCodec.ForBool(74);
    private readonly pbc::RepeatedField<bool> lightShow_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> LightShow {
      get { return lightShow_; }
    }

    /// <summary>Field number for the "LightInfo" field.</summary>
    public const int LightInfoFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.LightData> _repeated_lightInfo_codec
        = pb::FieldCodec.ForMessage(82, global::Jili.Protocols.Tsq.LightData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.LightData> lightInfo_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.LightData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.LightData> LightInfo {
      get { return lightInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComboStageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComboStageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comboStageSymbol_.Equals(other.comboStageSymbol_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ComboStageWin, other.ComboStageWin)) return false;
      if(!awardDataVec_.Equals(other.awardDataVec_)) return false;
      if(!fillSymbols_.Equals(other.fillSymbols_)) return false;
      if (NeedEliminate != other.NeedEliminate) return false;
      if(!eliminate_.Equals(other.eliminate_)) return false;
      if (EliminateCount != other.EliminateCount) return false;
      if(!lightGet_.Equals(other.lightGet_)) return false;
      if(!lightShow_.Equals(other.lightShow_)) return false;
      if(!lightInfo_.Equals(other.lightInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comboStageSymbol_.GetHashCode();
      if (ComboStageWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ComboStageWin);
      hash ^= awardDataVec_.GetHashCode();
      hash ^= fillSymbols_.GetHashCode();
      if (NeedEliminate != false) hash ^= NeedEliminate.GetHashCode();
      hash ^= eliminate_.GetHashCode();
      if (EliminateCount != 0) hash ^= EliminateCount.GetHashCode();
      hash ^= lightGet_.GetHashCode();
      hash ^= lightShow_.GetHashCode();
      hash ^= lightInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comboStageSymbol_.WriteTo(output, _repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ComboStageWin);
      }
      awardDataVec_.WriteTo(output, _repeated_awardDataVec_codec);
      fillSymbols_.WriteTo(output, _repeated_fillSymbols_codec);
      if (NeedEliminate != false) {
        output.WriteRawTag(40);
        output.WriteBool(NeedEliminate);
      }
      eliminate_.WriteTo(output, _repeated_eliminate_codec);
      if (EliminateCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EliminateCount);
      }
      lightGet_.WriteTo(output, _repeated_lightGet_codec);
      lightShow_.WriteTo(output, _repeated_lightShow_codec);
      lightInfo_.WriteTo(output, _repeated_lightInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comboStageSymbol_.WriteTo(ref output, _repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ComboStageWin);
      }
      awardDataVec_.WriteTo(ref output, _repeated_awardDataVec_codec);
      fillSymbols_.WriteTo(ref output, _repeated_fillSymbols_codec);
      if (NeedEliminate != false) {
        output.WriteRawTag(40);
        output.WriteBool(NeedEliminate);
      }
      eliminate_.WriteTo(ref output, _repeated_eliminate_codec);
      if (EliminateCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EliminateCount);
      }
      lightGet_.WriteTo(ref output, _repeated_lightGet_codec);
      lightShow_.WriteTo(ref output, _repeated_lightShow_codec);
      lightInfo_.WriteTo(ref output, _repeated_lightInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += comboStageSymbol_.CalculateSize(_repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        size += 1 + 8;
      }
      size += awardDataVec_.CalculateSize(_repeated_awardDataVec_codec);
      size += fillSymbols_.CalculateSize(_repeated_fillSymbols_codec);
      if (NeedEliminate != false) {
        size += 1 + 1;
      }
      size += eliminate_.CalculateSize(_repeated_eliminate_codec);
      if (EliminateCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EliminateCount);
      }
      size += lightGet_.CalculateSize(_repeated_lightGet_codec);
      size += lightShow_.CalculateSize(_repeated_lightShow_codec);
      size += lightInfo_.CalculateSize(_repeated_lightInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComboStageInfo other) {
      if (other == null) {
        return;
      }
      comboStageSymbol_.Add(other.comboStageSymbol_);
      if (other.ComboStageWin != 0D) {
        ComboStageWin = other.ComboStageWin;
      }
      awardDataVec_.Add(other.awardDataVec_);
      fillSymbols_.Add(other.fillSymbols_);
      if (other.NeedEliminate != false) {
        NeedEliminate = other.NeedEliminate;
      }
      eliminate_.Add(other.eliminate_);
      if (other.EliminateCount != 0) {
        EliminateCount = other.EliminateCount;
      }
      lightGet_.Add(other.lightGet_);
      lightShow_.Add(other.lightShow_);
      lightInfo_.Add(other.lightInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comboStageSymbol_.AddEntriesFrom(input, _repeated_comboStageSymbol_codec);
            break;
          }
          case 17: {
            ComboStageWin = input.ReadDouble();
            break;
          }
          case 26: {
            awardDataVec_.AddEntriesFrom(input, _repeated_awardDataVec_codec);
            break;
          }
          case 34: {
            fillSymbols_.AddEntriesFrom(input, _repeated_fillSymbols_codec);
            break;
          }
          case 40: {
            NeedEliminate = input.ReadBool();
            break;
          }
          case 50: {
            eliminate_.AddEntriesFrom(input, _repeated_eliminate_codec);
            break;
          }
          case 56: {
            EliminateCount = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            lightGet_.AddEntriesFrom(input, _repeated_lightGet_codec);
            break;
          }
          case 74:
          case 72: {
            lightShow_.AddEntriesFrom(input, _repeated_lightShow_codec);
            break;
          }
          case 82: {
            lightInfo_.AddEntriesFrom(input, _repeated_lightInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comboStageSymbol_.AddEntriesFrom(ref input, _repeated_comboStageSymbol_codec);
            break;
          }
          case 17: {
            ComboStageWin = input.ReadDouble();
            break;
          }
          case 26: {
            awardDataVec_.AddEntriesFrom(ref input, _repeated_awardDataVec_codec);
            break;
          }
          case 34: {
            fillSymbols_.AddEntriesFrom(ref input, _repeated_fillSymbols_codec);
            break;
          }
          case 40: {
            NeedEliminate = input.ReadBool();
            break;
          }
          case 50: {
            eliminate_.AddEntriesFrom(ref input, _repeated_eliminate_codec);
            break;
          }
          case 56: {
            EliminateCount = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            lightGet_.AddEntriesFrom(ref input, _repeated_lightGet_codec);
            break;
          }
          case 74:
          case 72: {
            lightShow_.AddEntriesFrom(ref input, _repeated_lightShow_codec);
            break;
          }
          case 82: {
            lightInfo_.AddEntriesFrom(ref input, _repeated_lightInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tsq.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_col_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> col_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LightData : pb::IMessage<LightData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LightData> _parser = new pb::MessageParser<LightData>(() => new LightData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LightData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tsq.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightData(LightData other) : this() {
      lightType_ = other.lightType_;
      twoInfo_ = other.twoInfo_;
      threeInfo_ = other.threeInfo_.Clone();
      fourInfo_ = other.fourInfo_.Clone();
      fiveInfo_ = other.fiveInfo_.Clone();
      lightSymbol_ = other.lightSymbol_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LightData Clone() {
      return new LightData(this);
    }

    /// <summary>Field number for the "LightType" field.</summary>
    public const int LightTypeFieldNumber = 1;
    private int lightType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LightType {
      get { return lightType_; }
      set {
        lightType_ = value;
      }
    }

    /// <summary>Field number for the "TwoInfo" field.</summary>
    public const int TwoInfoFieldNumber = 2;
    private int twoInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TwoInfo {
      get { return twoInfo_; }
      set {
        twoInfo_ = value;
      }
    }

    /// <summary>Field number for the "ThreeInfo" field.</summary>
    public const int ThreeInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.BigGem> _repeated_threeInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Jili.Protocols.Tsq.BigGem.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.BigGem> threeInfo_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.BigGem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.BigGem> ThreeInfo {
      get { return threeInfo_; }
    }

    /// <summary>Field number for the "FourInfo" field.</summary>
    public const int FourInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.BigGem> _repeated_fourInfo_codec
        = pb::FieldCodec.ForMessage(34, global::Jili.Protocols.Tsq.BigGem.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.BigGem> fourInfo_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.BigGem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.BigGem> FourInfo {
      get { return fourInfo_; }
    }

    /// <summary>Field number for the "FiveInfo" field.</summary>
    public const int FiveInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_fiveInfo_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> fiveInfo_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> FiveInfo {
      get { return fiveInfo_; }
    }

    /// <summary>Field number for the "LightSymbol" field.</summary>
    public const int LightSymbolFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Tsq.Column> _repeated_lightSymbol_codec
        = pb::FieldCodec.ForMessage(50, global::Jili.Protocols.Tsq.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Tsq.Column> lightSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Tsq.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Tsq.Column> LightSymbol {
      get { return lightSymbol_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LightData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LightData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LightType != other.LightType) return false;
      if (TwoInfo != other.TwoInfo) return false;
      if(!threeInfo_.Equals(other.threeInfo_)) return false;
      if(!fourInfo_.Equals(other.fourInfo_)) return false;
      if(!fiveInfo_.Equals(other.fiveInfo_)) return false;
      if(!lightSymbol_.Equals(other.lightSymbol_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LightType != 0) hash ^= LightType.GetHashCode();
      if (TwoInfo != 0) hash ^= TwoInfo.GetHashCode();
      hash ^= threeInfo_.GetHashCode();
      hash ^= fourInfo_.GetHashCode();
      hash ^= fiveInfo_.GetHashCode();
      hash ^= lightSymbol_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LightType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LightType);
      }
      if (TwoInfo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TwoInfo);
      }
      threeInfo_.WriteTo(output, _repeated_threeInfo_codec);
      fourInfo_.WriteTo(output, _repeated_fourInfo_codec);
      fiveInfo_.WriteTo(output, _repeated_fiveInfo_codec);
      lightSymbol_.WriteTo(output, _repeated_lightSymbol_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LightType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LightType);
      }
      if (TwoInfo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TwoInfo);
      }
      threeInfo_.WriteTo(ref output, _repeated_threeInfo_codec);
      fourInfo_.WriteTo(ref output, _repeated_fourInfo_codec);
      fiveInfo_.WriteTo(ref output, _repeated_fiveInfo_codec);
      lightSymbol_.WriteTo(ref output, _repeated_lightSymbol_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LightType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LightType);
      }
      if (TwoInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TwoInfo);
      }
      size += threeInfo_.CalculateSize(_repeated_threeInfo_codec);
      size += fourInfo_.CalculateSize(_repeated_fourInfo_codec);
      size += fiveInfo_.CalculateSize(_repeated_fiveInfo_codec);
      size += lightSymbol_.CalculateSize(_repeated_lightSymbol_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LightData other) {
      if (other == null) {
        return;
      }
      if (other.LightType != 0) {
        LightType = other.LightType;
      }
      if (other.TwoInfo != 0) {
        TwoInfo = other.TwoInfo;
      }
      threeInfo_.Add(other.threeInfo_);
      fourInfo_.Add(other.fourInfo_);
      fiveInfo_.Add(other.fiveInfo_);
      lightSymbol_.Add(other.lightSymbol_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LightType = input.ReadInt32();
            break;
          }
          case 16: {
            TwoInfo = input.ReadInt32();
            break;
          }
          case 26: {
            threeInfo_.AddEntriesFrom(input, _repeated_threeInfo_codec);
            break;
          }
          case 34: {
            fourInfo_.AddEntriesFrom(input, _repeated_fourInfo_codec);
            break;
          }
          case 42:
          case 40: {
            fiveInfo_.AddEntriesFrom(input, _repeated_fiveInfo_codec);
            break;
          }
          case 50: {
            lightSymbol_.AddEntriesFrom(input, _repeated_lightSymbol_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LightType = input.ReadInt32();
            break;
          }
          case 16: {
            TwoInfo = input.ReadInt32();
            break;
          }
          case 26: {
            threeInfo_.AddEntriesFrom(ref input, _repeated_threeInfo_codec);
            break;
          }
          case 34: {
            fourInfo_.AddEntriesFrom(ref input, _repeated_fourInfo_codec);
            break;
          }
          case 42:
          case 40: {
            fiveInfo_.AddEntriesFrom(ref input, _repeated_fiveInfo_codec);
            break;
          }
          case 50: {
            lightSymbol_.AddEntriesFrom(ref input, _repeated_lightSymbol_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BigGem : pb::IMessage<BigGem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigGem> _parser = new pb::MessageParser<BigGem>(() => new BigGem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BigGem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tsq.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigGem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigGem(BigGem other) : this() {
      symbol_ = other.symbol_;
      size_ = other.size_;
      posVec_ = other.posVec_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigGem Clone() {
      return new BigGem(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Size" field.</summary>
    public const int SizeFieldNumber = 2;
    private int size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "PosVec" field.</summary>
    public const int PosVecFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_posVec_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> posVec_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PosVec {
      get { return posVec_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BigGem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BigGem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Size != other.Size) return false;
      if(!posVec_.Equals(other.posVec_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      hash ^= posVec_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Size != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Size);
      }
      posVec_.WriteTo(output, _repeated_posVec_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Size != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Size);
      }
      posVec_.WriteTo(ref output, _repeated_posVec_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      size += posVec_.CalculateSize(_repeated_posVec_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BigGem other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      posVec_.Add(other.posVec_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Size = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            posVec_.AddEntriesFrom(input, _repeated_posVec_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Size = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            posVec_.AddEntriesFrom(ref input, _repeated_posVec_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Tsq.SpinAckReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      symbol_ = other.symbol_;
      count_ = other.count_;
      oddCount_ = other.oddCount_;
      posVec_ = other.posVec_.Clone();
      win_ = other.win_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "OddCount" field.</summary>
    public const int OddCountFieldNumber = 3;
    private int oddCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OddCount {
      get { return oddCount_; }
      set {
        oddCount_ = value;
      }
    }

    /// <summary>Field number for the "PosVec" field.</summary>
    public const int PosVecFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_posVec_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> posVec_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PosVec {
      get { return posVec_; }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 5;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Count != other.Count) return false;
      if (OddCount != other.OddCount) return false;
      if(!posVec_.Equals(other.posVec_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (OddCount != 0) hash ^= OddCount.GetHashCode();
      hash ^= posVec_.GetHashCode();
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (OddCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OddCount);
      }
      posVec_.WriteTo(output, _repeated_posVec_codec);
      if (Win != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (OddCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OddCount);
      }
      posVec_.WriteTo(ref output, _repeated_posVec_codec);
      if (Win != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (OddCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OddCount);
      }
      size += posVec_.CalculateSize(_repeated_posVec_codec);
      if (Win != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.OddCount != 0) {
        OddCount = other.OddCount;
      }
      posVec_.Add(other.posVec_);
      if (other.Win != 0D) {
        Win = other.Win;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            OddCount = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            posVec_.AddEntriesFrom(input, _repeated_posVec_codec);
            break;
          }
          case 41: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            OddCount = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            posVec_.AddEntriesFrom(ref input, _repeated_posVec_codec);
            break;
          }
          case 41: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
