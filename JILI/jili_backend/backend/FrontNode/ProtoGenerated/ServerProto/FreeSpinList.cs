// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: freeSpinList.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Common {

  /// <summary>Holder for reflection information generated from freeSpinList.proto</summary>
  public static partial class FreeSpinListReflection {

    #region Descriptor
    /// <summary>File descriptor for freeSpinList.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FreeSpinListReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJmcmVlU3Bpbkxpc3QucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8iJwoMZnJlZVNwaW5MaXN0EhcKBGZyZWUYASADKAsyCS5mcmVl",
            "RGF0YSLZAQoIZnJlZURhdGESCgoCaWQYASABKAkSDgoGcmVtYWluGAIgASgF",
            "EgwKBHR5cGUYAyABKAUSCwoDYmV0GAQgASgBEg4KBm1heFdpbhgFIAEoARIO",
            "CgZub3dXaW4YBiABKAESHQoJYm9udXNEYXRhGAcgASgLMgouZnJlZUJvbnVz",
            "EisKB2V4cGlyZWQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "EhMKC2lzQWxsb3dTdG9wGAkgASgIEhUKDWNsb3NlT25GaW5pc2gYCiABKAgi",
            "wAEKCWZyZWVCb251cxINCgV3YWdlchgBIAEoARIRCgl3YWdlck9kZHMYAiAB",
            "KAESDgoGcGVyaW9kGAMgASgFEisKB2V4cGlyZWQYBCABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEhEKCXNraXBGaWVsZBgFIAEoBRIRCglpc0lu",
            "V2FnZXIYBiABKAgSDgoGbWF4V2luGAcgASgBEg0KBWlzRW5kGAggASgIEg8K",
            "B2Jhc2VXaW4YCSABKAFCGKoCFUppbGkuUHJvdG9jb2xzLkNvbW1vbmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.freeSpinList), global::Jili.Protocols.Common.freeSpinList.Parser, new[]{ "Free" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.freeData), global::Jili.Protocols.Common.freeData.Parser, new[]{ "Id", "Remain", "Type", "Bet", "MaxWin", "NowWin", "BonusData", "Expired", "IsAllowStop", "CloseOnFinish" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.freeBonus), global::Jili.Protocols.Common.freeBonus.Parser, new[]{ "Wager", "WagerOdds", "Period", "Expired", "SkipField", "IsInWager", "MaxWin", "IsEnd", "BaseWin" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class freeSpinList : pb::IMessage<freeSpinList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<freeSpinList> _parser = new pb::MessageParser<freeSpinList>(() => new freeSpinList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<freeSpinList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.FreeSpinListReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeSpinList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeSpinList(freeSpinList other) : this() {
      free_ = other.free_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeSpinList Clone() {
      return new freeSpinList(this);
    }

    /// <summary>Field number for the "free" field.</summary>
    public const int FreeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Common.freeData> _repeated_free_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Common.freeData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Common.freeData> free_ = new pbc::RepeatedField<global::Jili.Protocols.Common.freeData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Common.freeData> Free {
      get { return free_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as freeSpinList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(freeSpinList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!free_.Equals(other.free_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= free_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      free_.WriteTo(output, _repeated_free_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      free_.WriteTo(ref output, _repeated_free_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += free_.CalculateSize(_repeated_free_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(freeSpinList other) {
      if (other == null) {
        return;
      }
      free_.Add(other.free_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            free_.AddEntriesFrom(input, _repeated_free_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            free_.AddEntriesFrom(ref input, _repeated_free_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class freeData : pb::IMessage<freeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<freeData> _parser = new pb::MessageParser<freeData>(() => new freeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<freeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.FreeSpinListReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeData(freeData other) : this() {
      id_ = other.id_;
      remain_ = other.remain_;
      type_ = other.type_;
      bet_ = other.bet_;
      maxWin_ = other.maxWin_;
      nowWin_ = other.nowWin_;
      bonusData_ = other.bonusData_ != null ? other.bonusData_.Clone() : null;
      expired_ = other.expired_ != null ? other.expired_.Clone() : null;
      isAllowStop_ = other.isAllowStop_;
      closeOnFinish_ = other.closeOnFinish_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeData Clone() {
      return new freeData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remain" field.</summary>
    public const int RemainFieldNumber = 2;
    private int remain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Remain {
      get { return remain_; }
      set {
        remain_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 4;
    private double bet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "maxWin" field.</summary>
    public const int MaxWinFieldNumber = 5;
    private double maxWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxWin {
      get { return maxWin_; }
      set {
        maxWin_ = value;
      }
    }

    /// <summary>Field number for the "nowWin" field.</summary>
    public const int NowWinFieldNumber = 6;
    private double nowWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NowWin {
      get { return nowWin_; }
      set {
        nowWin_ = value;
      }
    }

    /// <summary>Field number for the "bonusData" field.</summary>
    public const int BonusDataFieldNumber = 7;
    private global::Jili.Protocols.Common.freeBonus bonusData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Common.freeBonus BonusData {
      get { return bonusData_; }
      set {
        bonusData_ = value;
      }
    }

    /// <summary>Field number for the "expired" field.</summary>
    public const int ExpiredFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Expired {
      get { return expired_; }
      set {
        expired_ = value;
      }
    }

    /// <summary>Field number for the "isAllowStop" field.</summary>
    public const int IsAllowStopFieldNumber = 9;
    private bool isAllowStop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAllowStop {
      get { return isAllowStop_; }
      set {
        isAllowStop_ = value;
      }
    }

    /// <summary>Field number for the "closeOnFinish" field.</summary>
    public const int CloseOnFinishFieldNumber = 10;
    private bool closeOnFinish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CloseOnFinish {
      get { return closeOnFinish_; }
      set {
        closeOnFinish_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as freeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(freeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Remain != other.Remain) return false;
      if (Type != other.Type) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bet, other.Bet)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxWin, other.MaxWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NowWin, other.NowWin)) return false;
      if (!object.Equals(BonusData, other.BonusData)) return false;
      if (!object.Equals(Expired, other.Expired)) return false;
      if (IsAllowStop != other.IsAllowStop) return false;
      if (CloseOnFinish != other.CloseOnFinish) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Remain != 0) hash ^= Remain.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Bet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bet);
      if (MaxWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxWin);
      if (NowWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NowWin);
      if (bonusData_ != null) hash ^= BonusData.GetHashCode();
      if (expired_ != null) hash ^= Expired.GetHashCode();
      if (IsAllowStop != false) hash ^= IsAllowStop.GetHashCode();
      if (CloseOnFinish != false) hash ^= CloseOnFinish.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Remain != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Remain);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (Bet != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Bet);
      }
      if (MaxWin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MaxWin);
      }
      if (NowWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(NowWin);
      }
      if (bonusData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BonusData);
      }
      if (expired_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Expired);
      }
      if (IsAllowStop != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsAllowStop);
      }
      if (CloseOnFinish != false) {
        output.WriteRawTag(80);
        output.WriteBool(CloseOnFinish);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Remain != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Remain);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (Bet != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Bet);
      }
      if (MaxWin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MaxWin);
      }
      if (NowWin != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(NowWin);
      }
      if (bonusData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BonusData);
      }
      if (expired_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Expired);
      }
      if (IsAllowStop != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsAllowStop);
      }
      if (CloseOnFinish != false) {
        output.WriteRawTag(80);
        output.WriteBool(CloseOnFinish);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Remain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Remain);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Bet != 0D) {
        size += 1 + 8;
      }
      if (MaxWin != 0D) {
        size += 1 + 8;
      }
      if (NowWin != 0D) {
        size += 1 + 8;
      }
      if (bonusData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BonusData);
      }
      if (expired_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expired);
      }
      if (IsAllowStop != false) {
        size += 1 + 1;
      }
      if (CloseOnFinish != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(freeData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Remain != 0) {
        Remain = other.Remain;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Bet != 0D) {
        Bet = other.Bet;
      }
      if (other.MaxWin != 0D) {
        MaxWin = other.MaxWin;
      }
      if (other.NowWin != 0D) {
        NowWin = other.NowWin;
      }
      if (other.bonusData_ != null) {
        if (bonusData_ == null) {
          BonusData = new global::Jili.Protocols.Common.freeBonus();
        }
        BonusData.MergeFrom(other.BonusData);
      }
      if (other.expired_ != null) {
        if (expired_ == null) {
          Expired = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Expired.MergeFrom(other.Expired);
      }
      if (other.IsAllowStop != false) {
        IsAllowStop = other.IsAllowStop;
      }
      if (other.CloseOnFinish != false) {
        CloseOnFinish = other.CloseOnFinish;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Remain = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 33: {
            Bet = input.ReadDouble();
            break;
          }
          case 41: {
            MaxWin = input.ReadDouble();
            break;
          }
          case 49: {
            NowWin = input.ReadDouble();
            break;
          }
          case 58: {
            if (bonusData_ == null) {
              BonusData = new global::Jili.Protocols.Common.freeBonus();
            }
            input.ReadMessage(BonusData);
            break;
          }
          case 66: {
            if (expired_ == null) {
              Expired = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expired);
            break;
          }
          case 72: {
            IsAllowStop = input.ReadBool();
            break;
          }
          case 80: {
            CloseOnFinish = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Remain = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 33: {
            Bet = input.ReadDouble();
            break;
          }
          case 41: {
            MaxWin = input.ReadDouble();
            break;
          }
          case 49: {
            NowWin = input.ReadDouble();
            break;
          }
          case 58: {
            if (bonusData_ == null) {
              BonusData = new global::Jili.Protocols.Common.freeBonus();
            }
            input.ReadMessage(BonusData);
            break;
          }
          case 66: {
            if (expired_ == null) {
              Expired = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expired);
            break;
          }
          case 72: {
            IsAllowStop = input.ReadBool();
            break;
          }
          case 80: {
            CloseOnFinish = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class freeBonus : pb::IMessage<freeBonus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<freeBonus> _parser = new pb::MessageParser<freeBonus>(() => new freeBonus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<freeBonus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.FreeSpinListReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeBonus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeBonus(freeBonus other) : this() {
      wager_ = other.wager_;
      wagerOdds_ = other.wagerOdds_;
      period_ = other.period_;
      expired_ = other.expired_ != null ? other.expired_.Clone() : null;
      skipField_ = other.skipField_;
      isInWager_ = other.isInWager_;
      maxWin_ = other.maxWin_;
      isEnd_ = other.isEnd_;
      baseWin_ = other.baseWin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public freeBonus Clone() {
      return new freeBonus(this);
    }

    /// <summary>Field number for the "wager" field.</summary>
    public const int WagerFieldNumber = 1;
    private double wager_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Wager {
      get { return wager_; }
      set {
        wager_ = value;
      }
    }

    /// <summary>Field number for the "wagerOdds" field.</summary>
    public const int WagerOddsFieldNumber = 2;
    private double wagerOdds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WagerOdds {
      get { return wagerOdds_; }
      set {
        wagerOdds_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private int period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "expired" field.</summary>
    public const int ExpiredFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Expired {
      get { return expired_; }
      set {
        expired_ = value;
      }
    }

    /// <summary>Field number for the "skipField" field.</summary>
    public const int SkipFieldFieldNumber = 5;
    private int skipField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkipField {
      get { return skipField_; }
      set {
        skipField_ = value;
      }
    }

    /// <summary>Field number for the "isInWager" field.</summary>
    public const int IsInWagerFieldNumber = 6;
    private bool isInWager_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInWager {
      get { return isInWager_; }
      set {
        isInWager_ = value;
      }
    }

    /// <summary>Field number for the "maxWin" field.</summary>
    public const int MaxWinFieldNumber = 7;
    private double maxWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxWin {
      get { return maxWin_; }
      set {
        maxWin_ = value;
      }
    }

    /// <summary>Field number for the "isEnd" field.</summary>
    public const int IsEndFieldNumber = 8;
    private bool isEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEnd {
      get { return isEnd_; }
      set {
        isEnd_ = value;
      }
    }

    /// <summary>Field number for the "baseWin" field.</summary>
    public const int BaseWinFieldNumber = 9;
    private double baseWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BaseWin {
      get { return baseWin_; }
      set {
        baseWin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as freeBonus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(freeBonus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Wager, other.Wager)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WagerOdds, other.WagerOdds)) return false;
      if (Period != other.Period) return false;
      if (!object.Equals(Expired, other.Expired)) return false;
      if (SkipField != other.SkipField) return false;
      if (IsInWager != other.IsInWager) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxWin, other.MaxWin)) return false;
      if (IsEnd != other.IsEnd) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BaseWin, other.BaseWin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Wager != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Wager);
      if (WagerOdds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WagerOdds);
      if (Period != 0) hash ^= Period.GetHashCode();
      if (expired_ != null) hash ^= Expired.GetHashCode();
      if (SkipField != 0) hash ^= SkipField.GetHashCode();
      if (IsInWager != false) hash ^= IsInWager.GetHashCode();
      if (MaxWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxWin);
      if (IsEnd != false) hash ^= IsEnd.GetHashCode();
      if (BaseWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BaseWin);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Wager != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Wager);
      }
      if (WagerOdds != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(WagerOdds);
      }
      if (Period != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Period);
      }
      if (expired_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expired);
      }
      if (SkipField != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SkipField);
      }
      if (IsInWager != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsInWager);
      }
      if (MaxWin != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(MaxWin);
      }
      if (IsEnd != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsEnd);
      }
      if (BaseWin != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(BaseWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Wager != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Wager);
      }
      if (WagerOdds != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(WagerOdds);
      }
      if (Period != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Period);
      }
      if (expired_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expired);
      }
      if (SkipField != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SkipField);
      }
      if (IsInWager != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsInWager);
      }
      if (MaxWin != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(MaxWin);
      }
      if (IsEnd != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsEnd);
      }
      if (BaseWin != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(BaseWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Wager != 0D) {
        size += 1 + 8;
      }
      if (WagerOdds != 0D) {
        size += 1 + 8;
      }
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Period);
      }
      if (expired_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expired);
      }
      if (SkipField != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkipField);
      }
      if (IsInWager != false) {
        size += 1 + 1;
      }
      if (MaxWin != 0D) {
        size += 1 + 8;
      }
      if (IsEnd != false) {
        size += 1 + 1;
      }
      if (BaseWin != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(freeBonus other) {
      if (other == null) {
        return;
      }
      if (other.Wager != 0D) {
        Wager = other.Wager;
      }
      if (other.WagerOdds != 0D) {
        WagerOdds = other.WagerOdds;
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
      if (other.expired_ != null) {
        if (expired_ == null) {
          Expired = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Expired.MergeFrom(other.Expired);
      }
      if (other.SkipField != 0) {
        SkipField = other.SkipField;
      }
      if (other.IsInWager != false) {
        IsInWager = other.IsInWager;
      }
      if (other.MaxWin != 0D) {
        MaxWin = other.MaxWin;
      }
      if (other.IsEnd != false) {
        IsEnd = other.IsEnd;
      }
      if (other.BaseWin != 0D) {
        BaseWin = other.BaseWin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Wager = input.ReadDouble();
            break;
          }
          case 17: {
            WagerOdds = input.ReadDouble();
            break;
          }
          case 24: {
            Period = input.ReadInt32();
            break;
          }
          case 34: {
            if (expired_ == null) {
              Expired = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expired);
            break;
          }
          case 40: {
            SkipField = input.ReadInt32();
            break;
          }
          case 48: {
            IsInWager = input.ReadBool();
            break;
          }
          case 57: {
            MaxWin = input.ReadDouble();
            break;
          }
          case 64: {
            IsEnd = input.ReadBool();
            break;
          }
          case 73: {
            BaseWin = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Wager = input.ReadDouble();
            break;
          }
          case 17: {
            WagerOdds = input.ReadDouble();
            break;
          }
          case 24: {
            Period = input.ReadInt32();
            break;
          }
          case 34: {
            if (expired_ == null) {
              Expired = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expired);
            break;
          }
          case 40: {
            SkipField = input.ReadInt32();
            break;
          }
          case 48: {
            IsInWager = input.ReadBool();
            break;
          }
          case 57: {
            MaxWin = input.ReadDouble();
            break;
          }
          case 64: {
            IsEnd = input.ReadBool();
            break;
          }
          case 73: {
            BaseWin = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
