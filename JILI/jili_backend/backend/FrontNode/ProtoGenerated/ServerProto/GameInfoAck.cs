// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameInfoAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Common {

  /// <summary>Holder for reflection information generated from GameInfoAck.proto</summary>
  public static partial class GameInfoAckReflection {

    #region Descriptor
    /// <summary>File descriptor for GameInfoAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameInfoAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFHYW1lSW5mb0Fjay5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFt",
            "cC5wcm90bxoSZnJlZVNwaW5MaXN0LnByb3RvGhBXYWxsZXRJbmZvLnByb3Rv",
            "Io0DCgtHYW1lSW5mb0FjaxIfCgpXYWxsZXRJbmZvGAEgAygLMgsuV2FsbGV0",
            "SW5mbxIgCgZQcmVmZXIYAiABKAsyEC5QcmVmZXJSb3VuZFNob3cSFgoORnJl",
            "ZVNwaW5SZW1haW4YAyABKAUSEgoKc2tpcEZpZWxkMRgEIAEoBRIRCglleHRy",
            "YUluZm8YBSABKAwSCwoDcnRwGAYgASgBEhMKC2pwVW5sb2NrQmV0GAcgAygB",
            "EhcKBG1hbGwYCCABKAsyCS5NYWxsSW5mbxIPCgdBcGlUeXBlGAkgASgFEhMK",
            "C0ZyZWVTcGluQmV0GAogASgBEhIKCnNraXBGaWVsZDIYCyABKAUSHwoIZ2Ft",
            "ZU1hbGwYDCABKAsyDS5HYW1lTWFsbEluZm8SDgoGTWF4T2RkGA0gASgBEh8K",
            "CGZyZWVTcGluGA4gASgLMg0uZnJlZVNwaW5MaXN0EhQKDGZyZWVTcGluVHlw",
            "ZRgPIAEoBRIfCgp0b3VybmFtZW50GBAgASgLMgsuVG91cm5hbWVudCJ6Cg9Q",
            "cmVmZXJSb3VuZFNob3cSEQoJQmFzZVJvdW5kGAEgASgBEhIKClNpZ21hUm91",
            "bmQYAiABKAESCgoCQ1YYAyABKAESCgoCSFIYBCABKAESCwoDTUdSGAUgASgB",
            "Eg0KBVJhbmdlGAYgASgFEgwKBFNob3cYByABKAUiXQoITWFsbEluZm8SEAoI",
            "UHJpY2VPZGQYASABKAESEAoIRGVzY1R5cGUYAiABKAUSDgoGTWF4QmV0GAMg",
            "ASgBEg8KB0FsdGVySUQYBCABKAUSDAoEU2hvdxgFIAEoBSJBCgxHYW1lTWFs",
            "bEluZm8SDgoGTWF4QmV0GAEgASgBEhAKCFByaWNlT2RkGAIgAygBEg8KB0Fs",
            "dGVySUQYAyADKAUi+gEKClRvdXJuYW1lbnQSCgoCaWQYASABKAUSDwoHYmFs",
            "YW5jZRgCIAEoARITCgtpbml0QmFsYW5jZRgDIAEoARIOCgZNaW5CZXQYBCAB",
            "KAESDgoGTWF4QmV0GAUgASgBEgwKBGdvYWwYBiABKAUSKQoFc3RhcnQYByAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEicKA2VuZBgIIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEgoKYnV5Qm9udXNPbhgJIAEo",
            "CBISCgpleHRyYUJldE9uGAogASgIEhAKCGNhdGVnb3J5GAsgASgFQhiqAhVK",
            "aWxpLlByb3RvY29scy5Db21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Jili.Protocols.Common.FreeSpinListReflection.Descriptor, global::Jili.Protocols.Common.WalletInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.GameInfoAck), global::Jili.Protocols.Common.GameInfoAck.Parser, new[]{ "WalletInfo", "Prefer", "FreeSpinRemain", "SkipField1", "ExtraInfo", "Rtp", "JpUnlockBet", "Mall", "ApiType", "FreeSpinBet", "SkipField2", "GameMall", "MaxOdd", "FreeSpin", "FreeSpinType", "Tournament" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.PreferRoundShow), global::Jili.Protocols.Common.PreferRoundShow.Parser, new[]{ "BaseRound", "SigmaRound", "CV", "HR", "MGR", "Range", "Show" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.MallInfo), global::Jili.Protocols.Common.MallInfo.Parser, new[]{ "PriceOdd", "DescType", "MaxBet", "AlterID", "Show" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.GameMallInfo), global::Jili.Protocols.Common.GameMallInfo.Parser, new[]{ "MaxBet", "PriceOdd", "AlterID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.Tournament), global::Jili.Protocols.Common.Tournament.Parser, new[]{ "Id", "Balance", "InitBalance", "MinBet", "MaxBet", "Goal", "Start", "End", "BuyBonusOn", "ExtraBetOn", "Category" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameInfoAck : pb::IMessage<GameInfoAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameInfoAck> _parser = new pb::MessageParser<GameInfoAck>(() => new GameInfoAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameInfoAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.GameInfoAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameInfoAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameInfoAck(GameInfoAck other) : this() {
      walletInfo_ = other.walletInfo_.Clone();
      prefer_ = other.prefer_ != null ? other.prefer_.Clone() : null;
      freeSpinRemain_ = other.freeSpinRemain_;
      skipField1_ = other.skipField1_;
      extraInfo_ = other.extraInfo_;
      rtp_ = other.rtp_;
      jpUnlockBet_ = other.jpUnlockBet_.Clone();
      mall_ = other.mall_ != null ? other.mall_.Clone() : null;
      apiType_ = other.apiType_;
      freeSpinBet_ = other.freeSpinBet_;
      skipField2_ = other.skipField2_;
      gameMall_ = other.gameMall_ != null ? other.gameMall_.Clone() : null;
      maxOdd_ = other.maxOdd_;
      freeSpin_ = other.freeSpin_ != null ? other.freeSpin_.Clone() : null;
      freeSpinType_ = other.freeSpinType_;
      tournament_ = other.tournament_ != null ? other.tournament_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameInfoAck Clone() {
      return new GameInfoAck(this);
    }

    /// <summary>Field number for the "WalletInfo" field.</summary>
    public const int WalletInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Common.WalletInfo> _repeated_walletInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Common.WalletInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Common.WalletInfo> walletInfo_ = new pbc::RepeatedField<global::Jili.Protocols.Common.WalletInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Common.WalletInfo> WalletInfo {
      get { return walletInfo_; }
    }

    /// <summary>Field number for the "Prefer" field.</summary>
    public const int PreferFieldNumber = 2;
    private global::Jili.Protocols.Common.PreferRoundShow prefer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Common.PreferRoundShow Prefer {
      get { return prefer_; }
      set {
        prefer_ = value;
      }
    }

    /// <summary>Field number for the "FreeSpinRemain" field.</summary>
    public const int FreeSpinRemainFieldNumber = 3;
    private int freeSpinRemain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeSpinRemain {
      get { return freeSpinRemain_; }
      set {
        freeSpinRemain_ = value;
      }
    }

    /// <summary>Field number for the "skipField1" field.</summary>
    public const int SkipField1FieldNumber = 4;
    private int skipField1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkipField1 {
      get { return skipField1_; }
      set {
        skipField1_ = value;
      }
    }

    /// <summary>Field number for the "extraInfo" field.</summary>
    public const int ExtraInfoFieldNumber = 5;
    private pb::ByteString extraInfo_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ExtraInfo {
      get { return extraInfo_; }
      set {
        extraInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rtp" field.</summary>
    public const int RtpFieldNumber = 6;
    private double rtp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Rtp {
      get { return rtp_; }
      set {
        rtp_ = value;
      }
    }

    /// <summary>Field number for the "jpUnlockBet" field.</summary>
    public const int JpUnlockBetFieldNumber = 7;
    private static readonly pb::FieldCodec<double> _repeated_jpUnlockBet_codec
        = pb::FieldCodec.ForDouble(58);
    private readonly pbc::RepeatedField<double> jpUnlockBet_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> JpUnlockBet {
      get { return jpUnlockBet_; }
    }

    /// <summary>Field number for the "mall" field.</summary>
    public const int MallFieldNumber = 8;
    private global::Jili.Protocols.Common.MallInfo mall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Common.MallInfo Mall {
      get { return mall_; }
      set {
        mall_ = value;
      }
    }

    /// <summary>Field number for the "ApiType" field.</summary>
    public const int ApiTypeFieldNumber = 9;
    private int apiType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ApiType {
      get { return apiType_; }
      set {
        apiType_ = value;
      }
    }

    /// <summary>Field number for the "FreeSpinBet" field.</summary>
    public const int FreeSpinBetFieldNumber = 10;
    private double freeSpinBet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FreeSpinBet {
      get { return freeSpinBet_; }
      set {
        freeSpinBet_ = value;
      }
    }

    /// <summary>Field number for the "skipField2" field.</summary>
    public const int SkipField2FieldNumber = 11;
    private int skipField2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkipField2 {
      get { return skipField2_; }
      set {
        skipField2_ = value;
      }
    }

    /// <summary>Field number for the "gameMall" field.</summary>
    public const int GameMallFieldNumber = 12;
    private global::Jili.Protocols.Common.GameMallInfo gameMall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Common.GameMallInfo GameMall {
      get { return gameMall_; }
      set {
        gameMall_ = value;
      }
    }

    /// <summary>Field number for the "MaxOdd" field.</summary>
    public const int MaxOddFieldNumber = 13;
    private double maxOdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxOdd {
      get { return maxOdd_; }
      set {
        maxOdd_ = value;
      }
    }

    /// <summary>Field number for the "freeSpin" field.</summary>
    public const int FreeSpinFieldNumber = 14;
    private global::Jili.Protocols.Common.freeSpinList freeSpin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Common.freeSpinList FreeSpin {
      get { return freeSpin_; }
      set {
        freeSpin_ = value;
      }
    }

    /// <summary>Field number for the "freeSpinType" field.</summary>
    public const int FreeSpinTypeFieldNumber = 15;
    private int freeSpinType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeSpinType {
      get { return freeSpinType_; }
      set {
        freeSpinType_ = value;
      }
    }

    /// <summary>Field number for the "tournament" field.</summary>
    public const int TournamentFieldNumber = 16;
    private global::Jili.Protocols.Common.Tournament tournament_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Common.Tournament Tournament {
      get { return tournament_; }
      set {
        tournament_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameInfoAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameInfoAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!walletInfo_.Equals(other.walletInfo_)) return false;
      if (!object.Equals(Prefer, other.Prefer)) return false;
      if (FreeSpinRemain != other.FreeSpinRemain) return false;
      if (SkipField1 != other.SkipField1) return false;
      if (ExtraInfo != other.ExtraInfo) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Rtp, other.Rtp)) return false;
      if(!jpUnlockBet_.Equals(other.jpUnlockBet_)) return false;
      if (!object.Equals(Mall, other.Mall)) return false;
      if (ApiType != other.ApiType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FreeSpinBet, other.FreeSpinBet)) return false;
      if (SkipField2 != other.SkipField2) return false;
      if (!object.Equals(GameMall, other.GameMall)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxOdd, other.MaxOdd)) return false;
      if (!object.Equals(FreeSpin, other.FreeSpin)) return false;
      if (FreeSpinType != other.FreeSpinType) return false;
      if (!object.Equals(Tournament, other.Tournament)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= walletInfo_.GetHashCode();
      if (prefer_ != null) hash ^= Prefer.GetHashCode();
      if (FreeSpinRemain != 0) hash ^= FreeSpinRemain.GetHashCode();
      if (SkipField1 != 0) hash ^= SkipField1.GetHashCode();
      if (ExtraInfo.Length != 0) hash ^= ExtraInfo.GetHashCode();
      if (Rtp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Rtp);
      hash ^= jpUnlockBet_.GetHashCode();
      if (mall_ != null) hash ^= Mall.GetHashCode();
      if (ApiType != 0) hash ^= ApiType.GetHashCode();
      if (FreeSpinBet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FreeSpinBet);
      if (SkipField2 != 0) hash ^= SkipField2.GetHashCode();
      if (gameMall_ != null) hash ^= GameMall.GetHashCode();
      if (MaxOdd != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxOdd);
      if (freeSpin_ != null) hash ^= FreeSpin.GetHashCode();
      if (FreeSpinType != 0) hash ^= FreeSpinType.GetHashCode();
      if (tournament_ != null) hash ^= Tournament.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      walletInfo_.WriteTo(output, _repeated_walletInfo_codec);
      if (prefer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Prefer);
      }
      if (FreeSpinRemain != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeSpinRemain);
      }
      if (SkipField1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SkipField1);
      }
      if (ExtraInfo.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(ExtraInfo);
      }
      if (Rtp != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Rtp);
      }
      jpUnlockBet_.WriteTo(output, _repeated_jpUnlockBet_codec);
      if (mall_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Mall);
      }
      if (ApiType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ApiType);
      }
      if (FreeSpinBet != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(FreeSpinBet);
      }
      if (SkipField2 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SkipField2);
      }
      if (gameMall_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GameMall);
      }
      if (MaxOdd != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(MaxOdd);
      }
      if (freeSpin_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(FreeSpin);
      }
      if (FreeSpinType != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(FreeSpinType);
      }
      if (tournament_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Tournament);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      walletInfo_.WriteTo(ref output, _repeated_walletInfo_codec);
      if (prefer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Prefer);
      }
      if (FreeSpinRemain != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeSpinRemain);
      }
      if (SkipField1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SkipField1);
      }
      if (ExtraInfo.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(ExtraInfo);
      }
      if (Rtp != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Rtp);
      }
      jpUnlockBet_.WriteTo(ref output, _repeated_jpUnlockBet_codec);
      if (mall_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Mall);
      }
      if (ApiType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ApiType);
      }
      if (FreeSpinBet != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(FreeSpinBet);
      }
      if (SkipField2 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SkipField2);
      }
      if (gameMall_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GameMall);
      }
      if (MaxOdd != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(MaxOdd);
      }
      if (freeSpin_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(FreeSpin);
      }
      if (FreeSpinType != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(FreeSpinType);
      }
      if (tournament_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Tournament);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += walletInfo_.CalculateSize(_repeated_walletInfo_codec);
      if (prefer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prefer);
      }
      if (FreeSpinRemain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeSpinRemain);
      }
      if (SkipField1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkipField1);
      }
      if (ExtraInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExtraInfo);
      }
      if (Rtp != 0D) {
        size += 1 + 8;
      }
      size += jpUnlockBet_.CalculateSize(_repeated_jpUnlockBet_codec);
      if (mall_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mall);
      }
      if (ApiType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApiType);
      }
      if (FreeSpinBet != 0D) {
        size += 1 + 8;
      }
      if (SkipField2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkipField2);
      }
      if (gameMall_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameMall);
      }
      if (MaxOdd != 0D) {
        size += 1 + 8;
      }
      if (freeSpin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FreeSpin);
      }
      if (FreeSpinType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeSpinType);
      }
      if (tournament_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Tournament);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameInfoAck other) {
      if (other == null) {
        return;
      }
      walletInfo_.Add(other.walletInfo_);
      if (other.prefer_ != null) {
        if (prefer_ == null) {
          Prefer = new global::Jili.Protocols.Common.PreferRoundShow();
        }
        Prefer.MergeFrom(other.Prefer);
      }
      if (other.FreeSpinRemain != 0) {
        FreeSpinRemain = other.FreeSpinRemain;
      }
      if (other.SkipField1 != 0) {
        SkipField1 = other.SkipField1;
      }
      if (other.ExtraInfo.Length != 0) {
        ExtraInfo = other.ExtraInfo;
      }
      if (other.Rtp != 0D) {
        Rtp = other.Rtp;
      }
      jpUnlockBet_.Add(other.jpUnlockBet_);
      if (other.mall_ != null) {
        if (mall_ == null) {
          Mall = new global::Jili.Protocols.Common.MallInfo();
        }
        Mall.MergeFrom(other.Mall);
      }
      if (other.ApiType != 0) {
        ApiType = other.ApiType;
      }
      if (other.FreeSpinBet != 0D) {
        FreeSpinBet = other.FreeSpinBet;
      }
      if (other.SkipField2 != 0) {
        SkipField2 = other.SkipField2;
      }
      if (other.gameMall_ != null) {
        if (gameMall_ == null) {
          GameMall = new global::Jili.Protocols.Common.GameMallInfo();
        }
        GameMall.MergeFrom(other.GameMall);
      }
      if (other.MaxOdd != 0D) {
        MaxOdd = other.MaxOdd;
      }
      if (other.freeSpin_ != null) {
        if (freeSpin_ == null) {
          FreeSpin = new global::Jili.Protocols.Common.freeSpinList();
        }
        FreeSpin.MergeFrom(other.FreeSpin);
      }
      if (other.FreeSpinType != 0) {
        FreeSpinType = other.FreeSpinType;
      }
      if (other.tournament_ != null) {
        if (tournament_ == null) {
          Tournament = new global::Jili.Protocols.Common.Tournament();
        }
        Tournament.MergeFrom(other.Tournament);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            walletInfo_.AddEntriesFrom(input, _repeated_walletInfo_codec);
            break;
          }
          case 18: {
            if (prefer_ == null) {
              Prefer = new global::Jili.Protocols.Common.PreferRoundShow();
            }
            input.ReadMessage(Prefer);
            break;
          }
          case 24: {
            FreeSpinRemain = input.ReadInt32();
            break;
          }
          case 32: {
            SkipField1 = input.ReadInt32();
            break;
          }
          case 42: {
            ExtraInfo = input.ReadBytes();
            break;
          }
          case 49: {
            Rtp = input.ReadDouble();
            break;
          }
          case 58:
          case 57: {
            jpUnlockBet_.AddEntriesFrom(input, _repeated_jpUnlockBet_codec);
            break;
          }
          case 66: {
            if (mall_ == null) {
              Mall = new global::Jili.Protocols.Common.MallInfo();
            }
            input.ReadMessage(Mall);
            break;
          }
          case 72: {
            ApiType = input.ReadInt32();
            break;
          }
          case 81: {
            FreeSpinBet = input.ReadDouble();
            break;
          }
          case 88: {
            SkipField2 = input.ReadInt32();
            break;
          }
          case 98: {
            if (gameMall_ == null) {
              GameMall = new global::Jili.Protocols.Common.GameMallInfo();
            }
            input.ReadMessage(GameMall);
            break;
          }
          case 105: {
            MaxOdd = input.ReadDouble();
            break;
          }
          case 114: {
            if (freeSpin_ == null) {
              FreeSpin = new global::Jili.Protocols.Common.freeSpinList();
            }
            input.ReadMessage(FreeSpin);
            break;
          }
          case 120: {
            FreeSpinType = input.ReadInt32();
            break;
          }
          case 130: {
            if (tournament_ == null) {
              Tournament = new global::Jili.Protocols.Common.Tournament();
            }
            input.ReadMessage(Tournament);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            walletInfo_.AddEntriesFrom(ref input, _repeated_walletInfo_codec);
            break;
          }
          case 18: {
            if (prefer_ == null) {
              Prefer = new global::Jili.Protocols.Common.PreferRoundShow();
            }
            input.ReadMessage(Prefer);
            break;
          }
          case 24: {
            FreeSpinRemain = input.ReadInt32();
            break;
          }
          case 32: {
            SkipField1 = input.ReadInt32();
            break;
          }
          case 42: {
            ExtraInfo = input.ReadBytes();
            break;
          }
          case 49: {
            Rtp = input.ReadDouble();
            break;
          }
          case 58:
          case 57: {
            jpUnlockBet_.AddEntriesFrom(ref input, _repeated_jpUnlockBet_codec);
            break;
          }
          case 66: {
            if (mall_ == null) {
              Mall = new global::Jili.Protocols.Common.MallInfo();
            }
            input.ReadMessage(Mall);
            break;
          }
          case 72: {
            ApiType = input.ReadInt32();
            break;
          }
          case 81: {
            FreeSpinBet = input.ReadDouble();
            break;
          }
          case 88: {
            SkipField2 = input.ReadInt32();
            break;
          }
          case 98: {
            if (gameMall_ == null) {
              GameMall = new global::Jili.Protocols.Common.GameMallInfo();
            }
            input.ReadMessage(GameMall);
            break;
          }
          case 105: {
            MaxOdd = input.ReadDouble();
            break;
          }
          case 114: {
            if (freeSpin_ == null) {
              FreeSpin = new global::Jili.Protocols.Common.freeSpinList();
            }
            input.ReadMessage(FreeSpin);
            break;
          }
          case 120: {
            FreeSpinType = input.ReadInt32();
            break;
          }
          case 130: {
            if (tournament_ == null) {
              Tournament = new global::Jili.Protocols.Common.Tournament();
            }
            input.ReadMessage(Tournament);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PreferRoundShow : pb::IMessage<PreferRoundShow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreferRoundShow> _parser = new pb::MessageParser<PreferRoundShow>(() => new PreferRoundShow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PreferRoundShow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.GameInfoAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreferRoundShow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreferRoundShow(PreferRoundShow other) : this() {
      baseRound_ = other.baseRound_;
      sigmaRound_ = other.sigmaRound_;
      cV_ = other.cV_;
      hR_ = other.hR_;
      mGR_ = other.mGR_;
      range_ = other.range_;
      show_ = other.show_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreferRoundShow Clone() {
      return new PreferRoundShow(this);
    }

    /// <summary>Field number for the "BaseRound" field.</summary>
    public const int BaseRoundFieldNumber = 1;
    private double baseRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BaseRound {
      get { return baseRound_; }
      set {
        baseRound_ = value;
      }
    }

    /// <summary>Field number for the "SigmaRound" field.</summary>
    public const int SigmaRoundFieldNumber = 2;
    private double sigmaRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SigmaRound {
      get { return sigmaRound_; }
      set {
        sigmaRound_ = value;
      }
    }

    /// <summary>Field number for the "CV" field.</summary>
    public const int CVFieldNumber = 3;
    private double cV_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CV {
      get { return cV_; }
      set {
        cV_ = value;
      }
    }

    /// <summary>Field number for the "HR" field.</summary>
    public const int HRFieldNumber = 4;
    private double hR_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double HR {
      get { return hR_; }
      set {
        hR_ = value;
      }
    }

    /// <summary>Field number for the "MGR" field.</summary>
    public const int MGRFieldNumber = 5;
    private double mGR_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MGR {
      get { return mGR_; }
      set {
        mGR_ = value;
      }
    }

    /// <summary>Field number for the "Range" field.</summary>
    public const int RangeFieldNumber = 6;
    private int range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "Show" field.</summary>
    public const int ShowFieldNumber = 7;
    private int show_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Show {
      get { return show_; }
      set {
        show_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PreferRoundShow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PreferRoundShow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BaseRound, other.BaseRound)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SigmaRound, other.SigmaRound)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CV, other.CV)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HR, other.HR)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MGR, other.MGR)) return false;
      if (Range != other.Range) return false;
      if (Show != other.Show) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseRound != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BaseRound);
      if (SigmaRound != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SigmaRound);
      if (CV != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CV);
      if (HR != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HR);
      if (MGR != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MGR);
      if (Range != 0) hash ^= Range.GetHashCode();
      if (Show != 0) hash ^= Show.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BaseRound != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(BaseRound);
      }
      if (SigmaRound != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(SigmaRound);
      }
      if (CV != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(CV);
      }
      if (HR != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HR);
      }
      if (MGR != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MGR);
      }
      if (Range != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Range);
      }
      if (Show != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Show);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BaseRound != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(BaseRound);
      }
      if (SigmaRound != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(SigmaRound);
      }
      if (CV != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(CV);
      }
      if (HR != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HR);
      }
      if (MGR != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MGR);
      }
      if (Range != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Range);
      }
      if (Show != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Show);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BaseRound != 0D) {
        size += 1 + 8;
      }
      if (SigmaRound != 0D) {
        size += 1 + 8;
      }
      if (CV != 0D) {
        size += 1 + 8;
      }
      if (HR != 0D) {
        size += 1 + 8;
      }
      if (MGR != 0D) {
        size += 1 + 8;
      }
      if (Range != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Range);
      }
      if (Show != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Show);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PreferRoundShow other) {
      if (other == null) {
        return;
      }
      if (other.BaseRound != 0D) {
        BaseRound = other.BaseRound;
      }
      if (other.SigmaRound != 0D) {
        SigmaRound = other.SigmaRound;
      }
      if (other.CV != 0D) {
        CV = other.CV;
      }
      if (other.HR != 0D) {
        HR = other.HR;
      }
      if (other.MGR != 0D) {
        MGR = other.MGR;
      }
      if (other.Range != 0) {
        Range = other.Range;
      }
      if (other.Show != 0) {
        Show = other.Show;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            BaseRound = input.ReadDouble();
            break;
          }
          case 17: {
            SigmaRound = input.ReadDouble();
            break;
          }
          case 25: {
            CV = input.ReadDouble();
            break;
          }
          case 33: {
            HR = input.ReadDouble();
            break;
          }
          case 41: {
            MGR = input.ReadDouble();
            break;
          }
          case 48: {
            Range = input.ReadInt32();
            break;
          }
          case 56: {
            Show = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            BaseRound = input.ReadDouble();
            break;
          }
          case 17: {
            SigmaRound = input.ReadDouble();
            break;
          }
          case 25: {
            CV = input.ReadDouble();
            break;
          }
          case 33: {
            HR = input.ReadDouble();
            break;
          }
          case 41: {
            MGR = input.ReadDouble();
            break;
          }
          case 48: {
            Range = input.ReadInt32();
            break;
          }
          case 56: {
            Show = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MallInfo : pb::IMessage<MallInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MallInfo> _parser = new pb::MessageParser<MallInfo>(() => new MallInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MallInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.GameInfoAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MallInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MallInfo(MallInfo other) : this() {
      priceOdd_ = other.priceOdd_;
      descType_ = other.descType_;
      maxBet_ = other.maxBet_;
      alterID_ = other.alterID_;
      show_ = other.show_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MallInfo Clone() {
      return new MallInfo(this);
    }

    /// <summary>Field number for the "PriceOdd" field.</summary>
    public const int PriceOddFieldNumber = 1;
    private double priceOdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PriceOdd {
      get { return priceOdd_; }
      set {
        priceOdd_ = value;
      }
    }

    /// <summary>Field number for the "DescType" field.</summary>
    public const int DescTypeFieldNumber = 2;
    private int descType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DescType {
      get { return descType_; }
      set {
        descType_ = value;
      }
    }

    /// <summary>Field number for the "MaxBet" field.</summary>
    public const int MaxBetFieldNumber = 3;
    private double maxBet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxBet {
      get { return maxBet_; }
      set {
        maxBet_ = value;
      }
    }

    /// <summary>Field number for the "AlterID" field.</summary>
    public const int AlterIDFieldNumber = 4;
    private int alterID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AlterID {
      get { return alterID_; }
      set {
        alterID_ = value;
      }
    }

    /// <summary>Field number for the "Show" field.</summary>
    public const int ShowFieldNumber = 5;
    private int show_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Show {
      get { return show_; }
      set {
        show_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MallInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MallInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PriceOdd, other.PriceOdd)) return false;
      if (DescType != other.DescType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxBet, other.MaxBet)) return false;
      if (AlterID != other.AlterID) return false;
      if (Show != other.Show) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PriceOdd != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PriceOdd);
      if (DescType != 0) hash ^= DescType.GetHashCode();
      if (MaxBet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxBet);
      if (AlterID != 0) hash ^= AlterID.GetHashCode();
      if (Show != 0) hash ^= Show.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PriceOdd != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(PriceOdd);
      }
      if (DescType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DescType);
      }
      if (MaxBet != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaxBet);
      }
      if (AlterID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AlterID);
      }
      if (Show != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Show);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PriceOdd != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(PriceOdd);
      }
      if (DescType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DescType);
      }
      if (MaxBet != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaxBet);
      }
      if (AlterID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AlterID);
      }
      if (Show != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Show);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PriceOdd != 0D) {
        size += 1 + 8;
      }
      if (DescType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DescType);
      }
      if (MaxBet != 0D) {
        size += 1 + 8;
      }
      if (AlterID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AlterID);
      }
      if (Show != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Show);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MallInfo other) {
      if (other == null) {
        return;
      }
      if (other.PriceOdd != 0D) {
        PriceOdd = other.PriceOdd;
      }
      if (other.DescType != 0) {
        DescType = other.DescType;
      }
      if (other.MaxBet != 0D) {
        MaxBet = other.MaxBet;
      }
      if (other.AlterID != 0) {
        AlterID = other.AlterID;
      }
      if (other.Show != 0) {
        Show = other.Show;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            PriceOdd = input.ReadDouble();
            break;
          }
          case 16: {
            DescType = input.ReadInt32();
            break;
          }
          case 25: {
            MaxBet = input.ReadDouble();
            break;
          }
          case 32: {
            AlterID = input.ReadInt32();
            break;
          }
          case 40: {
            Show = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            PriceOdd = input.ReadDouble();
            break;
          }
          case 16: {
            DescType = input.ReadInt32();
            break;
          }
          case 25: {
            MaxBet = input.ReadDouble();
            break;
          }
          case 32: {
            AlterID = input.ReadInt32();
            break;
          }
          case 40: {
            Show = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameMallInfo : pb::IMessage<GameMallInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameMallInfo> _parser = new pb::MessageParser<GameMallInfo>(() => new GameMallInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameMallInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.GameInfoAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameMallInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameMallInfo(GameMallInfo other) : this() {
      maxBet_ = other.maxBet_;
      priceOdd_ = other.priceOdd_.Clone();
      alterID_ = other.alterID_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameMallInfo Clone() {
      return new GameMallInfo(this);
    }

    /// <summary>Field number for the "MaxBet" field.</summary>
    public const int MaxBetFieldNumber = 1;
    private double maxBet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxBet {
      get { return maxBet_; }
      set {
        maxBet_ = value;
      }
    }

    /// <summary>Field number for the "PriceOdd" field.</summary>
    public const int PriceOddFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_priceOdd_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> priceOdd_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> PriceOdd {
      get { return priceOdd_; }
    }

    /// <summary>Field number for the "AlterID" field.</summary>
    public const int AlterIDFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_alterID_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> alterID_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AlterID {
      get { return alterID_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameMallInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameMallInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxBet, other.MaxBet)) return false;
      if(!priceOdd_.Equals(other.priceOdd_)) return false;
      if(!alterID_.Equals(other.alterID_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxBet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxBet);
      hash ^= priceOdd_.GetHashCode();
      hash ^= alterID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxBet != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(MaxBet);
      }
      priceOdd_.WriteTo(output, _repeated_priceOdd_codec);
      alterID_.WriteTo(output, _repeated_alterID_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxBet != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(MaxBet);
      }
      priceOdd_.WriteTo(ref output, _repeated_priceOdd_codec);
      alterID_.WriteTo(ref output, _repeated_alterID_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MaxBet != 0D) {
        size += 1 + 8;
      }
      size += priceOdd_.CalculateSize(_repeated_priceOdd_codec);
      size += alterID_.CalculateSize(_repeated_alterID_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameMallInfo other) {
      if (other == null) {
        return;
      }
      if (other.MaxBet != 0D) {
        MaxBet = other.MaxBet;
      }
      priceOdd_.Add(other.priceOdd_);
      alterID_.Add(other.alterID_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            MaxBet = input.ReadDouble();
            break;
          }
          case 18:
          case 17: {
            priceOdd_.AddEntriesFrom(input, _repeated_priceOdd_codec);
            break;
          }
          case 26:
          case 24: {
            alterID_.AddEntriesFrom(input, _repeated_alterID_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            MaxBet = input.ReadDouble();
            break;
          }
          case 18:
          case 17: {
            priceOdd_.AddEntriesFrom(ref input, _repeated_priceOdd_codec);
            break;
          }
          case 26:
          case 24: {
            alterID_.AddEntriesFrom(ref input, _repeated_alterID_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Tournament : pb::IMessage<Tournament>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tournament> _parser = new pb::MessageParser<Tournament>(() => new Tournament());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Tournament> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.GameInfoAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tournament() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tournament(Tournament other) : this() {
      id_ = other.id_;
      balance_ = other.balance_;
      initBalance_ = other.initBalance_;
      minBet_ = other.minBet_;
      maxBet_ = other.maxBet_;
      goal_ = other.goal_;
      start_ = other.start_ != null ? other.start_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      buyBonusOn_ = other.buyBonusOn_;
      extraBetOn_ = other.extraBetOn_;
      category_ = other.category_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tournament Clone() {
      return new Tournament(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private double balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "initBalance" field.</summary>
    public const int InitBalanceFieldNumber = 3;
    private double initBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitBalance {
      get { return initBalance_; }
      set {
        initBalance_ = value;
      }
    }

    /// <summary>Field number for the "MinBet" field.</summary>
    public const int MinBetFieldNumber = 4;
    private double minBet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinBet {
      get { return minBet_; }
      set {
        minBet_ = value;
      }
    }

    /// <summary>Field number for the "MaxBet" field.</summary>
    public const int MaxBetFieldNumber = 5;
    private double maxBet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxBet {
      get { return maxBet_; }
      set {
        maxBet_ = value;
      }
    }

    /// <summary>Field number for the "goal" field.</summary>
    public const int GoalFieldNumber = 6;
    private int goal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Goal {
      get { return goal_; }
      set {
        goal_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "buyBonusOn" field.</summary>
    public const int BuyBonusOnFieldNumber = 9;
    private bool buyBonusOn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BuyBonusOn {
      get { return buyBonusOn_; }
      set {
        buyBonusOn_ = value;
      }
    }

    /// <summary>Field number for the "extraBetOn" field.</summary>
    public const int ExtraBetOnFieldNumber = 10;
    private bool extraBetOn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ExtraBetOn {
      get { return extraBetOn_; }
      set {
        extraBetOn_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 11;
    private int category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Tournament);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Tournament other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Balance, other.Balance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitBalance, other.InitBalance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinBet, other.MinBet)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxBet, other.MaxBet)) return false;
      if (Goal != other.Goal) return false;
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(End, other.End)) return false;
      if (BuyBonusOn != other.BuyBonusOn) return false;
      if (ExtraBetOn != other.ExtraBetOn) return false;
      if (Category != other.Category) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Balance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Balance);
      if (InitBalance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitBalance);
      if (MinBet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinBet);
      if (MaxBet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxBet);
      if (Goal != 0) hash ^= Goal.GetHashCode();
      if (start_ != null) hash ^= Start.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      if (BuyBonusOn != false) hash ^= BuyBonusOn.GetHashCode();
      if (ExtraBetOn != false) hash ^= ExtraBetOn.GetHashCode();
      if (Category != 0) hash ^= Category.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Balance != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Balance);
      }
      if (InitBalance != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InitBalance);
      }
      if (MinBet != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinBet);
      }
      if (MaxBet != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MaxBet);
      }
      if (Goal != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Goal);
      }
      if (start_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(End);
      }
      if (BuyBonusOn != false) {
        output.WriteRawTag(72);
        output.WriteBool(BuyBonusOn);
      }
      if (ExtraBetOn != false) {
        output.WriteRawTag(80);
        output.WriteBool(ExtraBetOn);
      }
      if (Category != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Category);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Balance != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Balance);
      }
      if (InitBalance != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InitBalance);
      }
      if (MinBet != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinBet);
      }
      if (MaxBet != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MaxBet);
      }
      if (Goal != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Goal);
      }
      if (start_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(End);
      }
      if (BuyBonusOn != false) {
        output.WriteRawTag(72);
        output.WriteBool(BuyBonusOn);
      }
      if (ExtraBetOn != false) {
        output.WriteRawTag(80);
        output.WriteBool(ExtraBetOn);
      }
      if (Category != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Category);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Balance != 0D) {
        size += 1 + 8;
      }
      if (InitBalance != 0D) {
        size += 1 + 8;
      }
      if (MinBet != 0D) {
        size += 1 + 8;
      }
      if (MaxBet != 0D) {
        size += 1 + 8;
      }
      if (Goal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Goal);
      }
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      if (BuyBonusOn != false) {
        size += 1 + 1;
      }
      if (ExtraBetOn != false) {
        size += 1 + 1;
      }
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Category);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Tournament other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Balance != 0D) {
        Balance = other.Balance;
      }
      if (other.InitBalance != 0D) {
        InitBalance = other.InitBalance;
      }
      if (other.MinBet != 0D) {
        MinBet = other.MinBet;
      }
      if (other.MaxBet != 0D) {
        MaxBet = other.MaxBet;
      }
      if (other.Goal != 0) {
        Goal = other.Goal;
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        End.MergeFrom(other.End);
      }
      if (other.BuyBonusOn != false) {
        BuyBonusOn = other.BuyBonusOn;
      }
      if (other.ExtraBetOn != false) {
        ExtraBetOn = other.ExtraBetOn;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 17: {
            Balance = input.ReadDouble();
            break;
          }
          case 25: {
            InitBalance = input.ReadDouble();
            break;
          }
          case 33: {
            MinBet = input.ReadDouble();
            break;
          }
          case 41: {
            MaxBet = input.ReadDouble();
            break;
          }
          case 48: {
            Goal = input.ReadInt32();
            break;
          }
          case 58: {
            if (start_ == null) {
              Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Start);
            break;
          }
          case 66: {
            if (end_ == null) {
              End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(End);
            break;
          }
          case 72: {
            BuyBonusOn = input.ReadBool();
            break;
          }
          case 80: {
            ExtraBetOn = input.ReadBool();
            break;
          }
          case 88: {
            Category = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 17: {
            Balance = input.ReadDouble();
            break;
          }
          case 25: {
            InitBalance = input.ReadDouble();
            break;
          }
          case 33: {
            MinBet = input.ReadDouble();
            break;
          }
          case 41: {
            MaxBet = input.ReadDouble();
            break;
          }
          case 48: {
            Goal = input.ReadInt32();
            break;
          }
          case 58: {
            if (start_ == null) {
              Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Start);
            break;
          }
          case 66: {
            if (end_ == null) {
              End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(End);
            break;
          }
          case 72: {
            BuyBonusOn = input.ReadBool();
            break;
          }
          case 80: {
            ExtraBetOn = input.ReadBool();
            break;
          }
          case 88: {
            Category = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
