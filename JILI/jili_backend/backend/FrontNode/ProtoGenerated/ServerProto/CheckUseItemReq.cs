// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CheckUseItemReq.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Common {

  /// <summary>Holder for reflection information generated from CheckUseItemReq.proto</summary>
  public static partial class CheckUseItemReqReflection {

    #region Descriptor
    /// <summary>File descriptor for CheckUseItemReq.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CheckUseItemReqReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVDaGVja1VzZUl0ZW1SZXEucHJvdG8iaQoPQ2hlY2tVc2VJdGVtUmVxEgsK",
            "A2JldBgBIAEoARIRCglpdGVtaW5kZXgYAiABKAUSDgoGaXRlbWlkGAMgASgF",
            "Eg4KBmFtb3VudBgEIAEoBRIWCg5jdXJyZW5jeU51bWJlchgFIAEoBUIYqgIV",
            "SmlsaS5Qcm90b2NvbHMuQ29tbW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Common.CheckUseItemReq), global::Jili.Protocols.Common.CheckUseItemReq.Parser, new[]{ "Bet", "Itemindex", "Itemid", "Amount", "CurrencyNumber" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CheckUseItemReq : pb::IMessage<CheckUseItemReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckUseItemReq> _parser = new pb::MessageParser<CheckUseItemReq>(() => new CheckUseItemReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CheckUseItemReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Common.CheckUseItemReqReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUseItemReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUseItemReq(CheckUseItemReq other) : this() {
      bet_ = other.bet_;
      itemindex_ = other.itemindex_;
      itemid_ = other.itemid_;
      amount_ = other.amount_;
      currencyNumber_ = other.currencyNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUseItemReq Clone() {
      return new CheckUseItemReq(this);
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 1;
    private double bet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "itemindex" field.</summary>
    public const int ItemindexFieldNumber = 2;
    private int itemindex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Itemindex {
      get { return itemindex_; }
      set {
        itemindex_ = value;
      }
    }

    /// <summary>Field number for the "itemid" field.</summary>
    public const int ItemidFieldNumber = 3;
    private int itemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Itemid {
      get { return itemid_; }
      set {
        itemid_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "currencyNumber" field.</summary>
    public const int CurrencyNumberFieldNumber = 5;
    private int currencyNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrencyNumber {
      get { return currencyNumber_; }
      set {
        currencyNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CheckUseItemReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CheckUseItemReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bet, other.Bet)) return false;
      if (Itemindex != other.Itemindex) return false;
      if (Itemid != other.Itemid) return false;
      if (Amount != other.Amount) return false;
      if (CurrencyNumber != other.CurrencyNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Bet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bet);
      if (Itemindex != 0) hash ^= Itemindex.GetHashCode();
      if (Itemid != 0) hash ^= Itemid.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (CurrencyNumber != 0) hash ^= CurrencyNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Bet != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Bet);
      }
      if (Itemindex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Itemindex);
      }
      if (Itemid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Itemid);
      }
      if (Amount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
      if (CurrencyNumber != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrencyNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Bet != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Bet);
      }
      if (Itemindex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Itemindex);
      }
      if (Itemid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Itemid);
      }
      if (Amount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
      if (CurrencyNumber != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrencyNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Bet != 0D) {
        size += 1 + 8;
      }
      if (Itemindex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Itemindex);
      }
      if (Itemid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Itemid);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (CurrencyNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrencyNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CheckUseItemReq other) {
      if (other == null) {
        return;
      }
      if (other.Bet != 0D) {
        Bet = other.Bet;
      }
      if (other.Itemindex != 0) {
        Itemindex = other.Itemindex;
      }
      if (other.Itemid != 0) {
        Itemid = other.Itemid;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.CurrencyNumber != 0) {
        CurrencyNumber = other.CurrencyNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Bet = input.ReadDouble();
            break;
          }
          case 16: {
            Itemindex = input.ReadInt32();
            break;
          }
          case 24: {
            Itemid = input.ReadInt32();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
          case 40: {
            CurrencyNumber = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Bet = input.ReadDouble();
            break;
          }
          case 16: {
            Itemindex = input.ReadInt32();
            break;
          }
          case 24: {
            Itemid = input.ReadInt32();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
          case 40: {
            CurrencyNumber = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
