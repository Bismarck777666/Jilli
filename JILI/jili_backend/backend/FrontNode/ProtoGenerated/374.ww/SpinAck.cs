// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Ww {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhFKaWxpLlByb3RvY29scy53dyKtAQoHU3BpbkFj",
            "axIwCgpSb3VuZFF1ZXVlGAEgAygLMhwuSmlsaS5Qcm90b2NvbHMud3cuUm91",
            "bmRJbmZvEhQKDEZyZWVUb3RhbFdpbhgCIAEoARIQCghGcmVlVHlwZRgDIAEo",
            "BRIQCghUb3RhbFdpbhgEIAEoARIPCgdBY2tUeXBlGAUgASgFEgsKA1JUUBgG",
            "IAEoARILCgNMSUQYByABKAUSCwoDUklEGAggASgFIuICCglSb3VuZEluZm8S",
            "OQoOQ29tYm9TdGFnZURhdGEYASADKAsyIS5KaWxpLlByb3RvY29scy53dy5D",
            "b21ib1N0YWdlSW5mbxIQCghSb3VuZFdpbhgCIAEoARIVCg1NeXN0ZXJ5U3lt",
            "Ym9sGAMgASgFEhQKDEZyZWVOb3dSb3VuZBgEIAEoBRIWCg5GcmVlVG90YWxS",
            "b3VuZBgFIAEoBRIUCgxTY2F0dGVyQ291bnQYBiABKAUSEgoKU2NhdHRlcldp",
            "bhgHIAEoARISCgpHYW1iYWxlR2V0GAggASgIEhMKC0dhbWJhbGVUeXBlGAkg",
            "ASgFEhIKCkdhbWJhbGVOdW0YCiABKAUSFQoNQXdhcmRUeXBlRmxhZxgLIAEo",
            "BRIQCghSZWVsVHlwZRgMIAEoBRIOCgZJc01haW4YDSABKAgSDwoHTWF4Rmxh",
            "ZxgOIAEoCBISCgpQYXR0ZXJuUG9zGA8gAygFIuoBCg5Db21ib1N0YWdlSW5m",
            "bxIzChBDb21ib1N0YWdlU3ltYm9sGAEgAygLMhkuSmlsaS5Qcm90b2NvbHMu",
            "d3cuQ29sdW1uEhUKDUNvbWJvU3RhZ2VXaW4YAiABKAESDgoGTGluV2luGAMg",
            "ASgBEjIKDEF3YXJkRGF0YVZlYxgEIAMoCzIcLkppbGkuUHJvdG9jb2xzLnd3",
            "LkF3YXJkRGF0YRIRCglHb2xkZW5XaW4YBSABKAESNQoNTXlzdGVyeUdvbGRl",
            "bhgGIAMoCzIeLkppbGkuUHJvdG9jb2xzLnd3Lk11c3RlcnlQYWNrIhUKBkNv",
            "bHVtbhILCgNDb2wYASADKAUiRgoJQXdhcmREYXRhEg0KBUluZGV4GAEgASgF",
            "Eg4KBlN5bWJvbBgCIAEoBRINCgVDb3VudBgDIAEoBRILCgNXaW4YBCABKAEi",
            "0QEKC011c3RlcnlQYWNrEhIKCkdvbGRlblR5cGUYASABKAUSKwoHQ29pbk11",
            "bBgCIAMoCzIaLkppbGkuUHJvdG9jb2xzLnd3LkNvbHVtbk0SKAoETXVsdBgD",
            "IAMoCzIaLkppbGkuUHJvdG9jb2xzLnd3LlNTeW1ib2wSLgoJQ29sbGVjdG9y",
            "GAQgAygLMhsuSmlsaS5Qcm90b2NvbHMud3cuQ2NTeW1ib2wSJwoDQ3V0GAUg",
            "AygLMhouSmlsaS5Qcm90b2NvbHMud3cuU1N5bWJvbCIXCgdDb2x1bW5NEgwK",
            "BENvbG0YASADKAEiIwoHU1N5bWJvbBILCgNQb3MYASABKAUSCwoDTXVsGAIg",
            "ASgBIjYKCENjU3ltYm9sEg4KBlNyY1BvcxgBIAEoBRILCgNNdWwYAiABKAES",
            "DQoFQ2NQb3MYAyADKAUiPwoIQ3ZTeW1ib2wSFAoMVGFyZ2V0U3ltYm9sGAEg",
            "ASgFEg4KBlNyY1BvcxgCIAEoBRINCgVDdlBvcxgDIAMoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.SpinAck), global::Jili.Protocols.Ww.SpinAck.Parser, new[]{ "RoundQueue", "FreeTotalWin", "FreeType", "TotalWin", "AckType", "RTP", "LID", "RID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.RoundInfo), global::Jili.Protocols.Ww.RoundInfo.Parser, new[]{ "ComboStageData", "RoundWin", "MysterySymbol", "FreeNowRound", "FreeTotalRound", "ScatterCount", "ScatterWin", "GambaleGet", "GambaleType", "GambaleNum", "AwardTypeFlag", "ReelType", "IsMain", "MaxFlag", "PatternPos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.ComboStageInfo), global::Jili.Protocols.Ww.ComboStageInfo.Parser, new[]{ "ComboStageSymbol", "ComboStageWin", "LinWin", "AwardDataVec", "GoldenWin", "MysteryGolden" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.Column), global::Jili.Protocols.Ww.Column.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.AwardData), global::Jili.Protocols.Ww.AwardData.Parser, new[]{ "Index", "Symbol", "Count", "Win" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.MusteryPack), global::Jili.Protocols.Ww.MusteryPack.Parser, new[]{ "GoldenType", "CoinMul", "Mult", "Collector", "Cut" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.ColumnM), global::Jili.Protocols.Ww.ColumnM.Parser, new[]{ "Colm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.SSymbol), global::Jili.Protocols.Ww.SSymbol.Parser, new[]{ "Pos", "Mul" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.CcSymbol), global::Jili.Protocols.Ww.CcSymbol.Parser, new[]{ "SrcPos", "Mul", "CcPos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Ww.CvSymbol), global::Jili.Protocols.Ww.CvSymbol.Parser, new[]{ "TargetSymbol", "SrcPos", "CvPos" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      roundQueue_ = other.roundQueue_.Clone();
      freeTotalWin_ = other.freeTotalWin_;
      freeType_ = other.freeType_;
      totalWin_ = other.totalWin_;
      ackType_ = other.ackType_;
      rTP_ = other.rTP_;
      lID_ = other.lID_;
      rID_ = other.rID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "RoundQueue" field.</summary>
    public const int RoundQueueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.RoundInfo> _repeated_roundQueue_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Ww.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.RoundInfo> roundQueue_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.RoundInfo> RoundQueue {
      get { return roundQueue_; }
    }

    /// <summary>Field number for the "FreeTotalWin" field.</summary>
    public const int FreeTotalWinFieldNumber = 2;
    private double freeTotalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FreeTotalWin {
      get { return freeTotalWin_; }
      set {
        freeTotalWin_ = value;
      }
    }

    /// <summary>Field number for the "FreeType" field.</summary>
    public const int FreeTypeFieldNumber = 3;
    private int freeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeType {
      get { return freeType_; }
      set {
        freeType_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 4;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "AckType" field.</summary>
    public const int AckTypeFieldNumber = 5;
    private int ackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 6;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    /// <summary>Field number for the "LID" field.</summary>
    public const int LIDFieldNumber = 7;
    private int lID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LID {
      get { return lID_; }
      set {
        lID_ = value;
      }
    }

    /// <summary>Field number for the "RID" field.</summary>
    public const int RIDFieldNumber = 8;
    private int rID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RID {
      get { return rID_; }
      set {
        rID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundQueue_.Equals(other.roundQueue_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FreeTotalWin, other.FreeTotalWin)) return false;
      if (FreeType != other.FreeType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (AckType != other.AckType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      if (LID != other.LID) return false;
      if (RID != other.RID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundQueue_.GetHashCode();
      if (FreeTotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FreeTotalWin);
      if (FreeType != 0) hash ^= FreeType.GetHashCode();
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (AckType != 0) hash ^= AckType.GetHashCode();
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (LID != 0) hash ^= LID.GetHashCode();
      if (RID != 0) hash ^= RID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundQueue_.WriteTo(output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (FreeType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeType);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TotalWin);
      }
      if (AckType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundQueue_.WriteTo(ref output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (FreeType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeType);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TotalWin);
      }
      if (AckType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roundQueue_.CalculateSize(_repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        size += 1 + 8;
      }
      if (FreeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeType);
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckType);
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (LID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LID);
      }
      if (RID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      roundQueue_.Add(other.roundQueue_);
      if (other.FreeTotalWin != 0D) {
        FreeTotalWin = other.FreeTotalWin;
      }
      if (other.FreeType != 0) {
        FreeType = other.FreeType;
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      if (other.LID != 0) {
        LID = other.LID;
      }
      if (other.RID != 0) {
        RID = other.RID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 24: {
            FreeType = input.ReadInt32();
            break;
          }
          case 33: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 40: {
            AckType = input.ReadInt32();
            break;
          }
          case 49: {
            RTP = input.ReadDouble();
            break;
          }
          case 56: {
            LID = input.ReadInt32();
            break;
          }
          case 64: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(ref input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 24: {
            FreeType = input.ReadInt32();
            break;
          }
          case 33: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 40: {
            AckType = input.ReadInt32();
            break;
          }
          case 49: {
            RTP = input.ReadDouble();
            break;
          }
          case 56: {
            LID = input.ReadInt32();
            break;
          }
          case 64: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoundInfo : pb::IMessage<RoundInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo(RoundInfo other) : this() {
      comboStageData_ = other.comboStageData_.Clone();
      roundWin_ = other.roundWin_;
      mysterySymbol_ = other.mysterySymbol_;
      freeNowRound_ = other.freeNowRound_;
      freeTotalRound_ = other.freeTotalRound_;
      scatterCount_ = other.scatterCount_;
      scatterWin_ = other.scatterWin_;
      gambaleGet_ = other.gambaleGet_;
      gambaleType_ = other.gambaleType_;
      gambaleNum_ = other.gambaleNum_;
      awardTypeFlag_ = other.awardTypeFlag_;
      reelType_ = other.reelType_;
      isMain_ = other.isMain_;
      maxFlag_ = other.maxFlag_;
      patternPos_ = other.patternPos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "ComboStageData" field.</summary>
    public const int ComboStageDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.ComboStageInfo> _repeated_comboStageData_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Ww.ComboStageInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.ComboStageInfo> comboStageData_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.ComboStageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.ComboStageInfo> ComboStageData {
      get { return comboStageData_; }
    }

    /// <summary>Field number for the "RoundWin" field.</summary>
    public const int RoundWinFieldNumber = 2;
    private double roundWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RoundWin {
      get { return roundWin_; }
      set {
        roundWin_ = value;
      }
    }

    /// <summary>Field number for the "MysterySymbol" field.</summary>
    public const int MysterySymbolFieldNumber = 3;
    private int mysterySymbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MysterySymbol {
      get { return mysterySymbol_; }
      set {
        mysterySymbol_ = value;
      }
    }

    /// <summary>Field number for the "FreeNowRound" field.</summary>
    public const int FreeNowRoundFieldNumber = 4;
    private int freeNowRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeNowRound {
      get { return freeNowRound_; }
      set {
        freeNowRound_ = value;
      }
    }

    /// <summary>Field number for the "FreeTotalRound" field.</summary>
    public const int FreeTotalRoundFieldNumber = 5;
    private int freeTotalRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeTotalRound {
      get { return freeTotalRound_; }
      set {
        freeTotalRound_ = value;
      }
    }

    /// <summary>Field number for the "ScatterCount" field.</summary>
    public const int ScatterCountFieldNumber = 6;
    private int scatterCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ScatterCount {
      get { return scatterCount_; }
      set {
        scatterCount_ = value;
      }
    }

    /// <summary>Field number for the "ScatterWin" field.</summary>
    public const int ScatterWinFieldNumber = 7;
    private double scatterWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ScatterWin {
      get { return scatterWin_; }
      set {
        scatterWin_ = value;
      }
    }

    /// <summary>Field number for the "GambaleGet" field.</summary>
    public const int GambaleGetFieldNumber = 8;
    private bool gambaleGet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GambaleGet {
      get { return gambaleGet_; }
      set {
        gambaleGet_ = value;
      }
    }

    /// <summary>Field number for the "GambaleType" field.</summary>
    public const int GambaleTypeFieldNumber = 9;
    private int gambaleType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GambaleType {
      get { return gambaleType_; }
      set {
        gambaleType_ = value;
      }
    }

    /// <summary>Field number for the "GambaleNum" field.</summary>
    public const int GambaleNumFieldNumber = 10;
    private int gambaleNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GambaleNum {
      get { return gambaleNum_; }
      set {
        gambaleNum_ = value;
      }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 11;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "ReelType" field.</summary>
    public const int ReelTypeFieldNumber = 12;
    private int reelType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReelType {
      get { return reelType_; }
      set {
        reelType_ = value;
      }
    }

    /// <summary>Field number for the "IsMain" field.</summary>
    public const int IsMainFieldNumber = 13;
    private bool isMain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMain {
      get { return isMain_; }
      set {
        isMain_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 14;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    /// <summary>Field number for the "PatternPos" field.</summary>
    public const int PatternPosFieldNumber = 15;
    private static readonly pb::FieldCodec<int> _repeated_patternPos_codec
        = pb::FieldCodec.ForInt32(122);
    private readonly pbc::RepeatedField<int> patternPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PatternPos {
      get { return patternPos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comboStageData_.Equals(other.comboStageData_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RoundWin, other.RoundWin)) return false;
      if (MysterySymbol != other.MysterySymbol) return false;
      if (FreeNowRound != other.FreeNowRound) return false;
      if (FreeTotalRound != other.FreeTotalRound) return false;
      if (ScatterCount != other.ScatterCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ScatterWin, other.ScatterWin)) return false;
      if (GambaleGet != other.GambaleGet) return false;
      if (GambaleType != other.GambaleType) return false;
      if (GambaleNum != other.GambaleNum) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (ReelType != other.ReelType) return false;
      if (IsMain != other.IsMain) return false;
      if (MaxFlag != other.MaxFlag) return false;
      if(!patternPos_.Equals(other.patternPos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comboStageData_.GetHashCode();
      if (RoundWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RoundWin);
      if (MysterySymbol != 0) hash ^= MysterySymbol.GetHashCode();
      if (FreeNowRound != 0) hash ^= FreeNowRound.GetHashCode();
      if (FreeTotalRound != 0) hash ^= FreeTotalRound.GetHashCode();
      if (ScatterCount != 0) hash ^= ScatterCount.GetHashCode();
      if (ScatterWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ScatterWin);
      if (GambaleGet != false) hash ^= GambaleGet.GetHashCode();
      if (GambaleType != 0) hash ^= GambaleType.GetHashCode();
      if (GambaleNum != 0) hash ^= GambaleNum.GetHashCode();
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (ReelType != 0) hash ^= ReelType.GetHashCode();
      if (IsMain != false) hash ^= IsMain.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      hash ^= patternPos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comboStageData_.WriteTo(output, _repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RoundWin);
      }
      if (MysterySymbol != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MysterySymbol);
      }
      if (FreeNowRound != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeNowRound);
      }
      if (FreeTotalRound != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeTotalRound);
      }
      if (ScatterCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ScatterCount);
      }
      if (ScatterWin != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(ScatterWin);
      }
      if (GambaleGet != false) {
        output.WriteRawTag(64);
        output.WriteBool(GambaleGet);
      }
      if (GambaleType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GambaleType);
      }
      if (GambaleNum != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(GambaleNum);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(AwardTypeFlag);
      }
      if (ReelType != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ReelType);
      }
      if (IsMain != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsMain);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(112);
        output.WriteBool(MaxFlag);
      }
      patternPos_.WriteTo(output, _repeated_patternPos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comboStageData_.WriteTo(ref output, _repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RoundWin);
      }
      if (MysterySymbol != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MysterySymbol);
      }
      if (FreeNowRound != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeNowRound);
      }
      if (FreeTotalRound != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeTotalRound);
      }
      if (ScatterCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ScatterCount);
      }
      if (ScatterWin != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(ScatterWin);
      }
      if (GambaleGet != false) {
        output.WriteRawTag(64);
        output.WriteBool(GambaleGet);
      }
      if (GambaleType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GambaleType);
      }
      if (GambaleNum != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(GambaleNum);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(AwardTypeFlag);
      }
      if (ReelType != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ReelType);
      }
      if (IsMain != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsMain);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(112);
        output.WriteBool(MaxFlag);
      }
      patternPos_.WriteTo(ref output, _repeated_patternPos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += comboStageData_.CalculateSize(_repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        size += 1 + 8;
      }
      if (MysterySymbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MysterySymbol);
      }
      if (FreeNowRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeNowRound);
      }
      if (FreeTotalRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeTotalRound);
      }
      if (ScatterCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScatterCount);
      }
      if (ScatterWin != 0D) {
        size += 1 + 8;
      }
      if (GambaleGet != false) {
        size += 1 + 1;
      }
      if (GambaleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GambaleType);
      }
      if (GambaleNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GambaleNum);
      }
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (ReelType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReelType);
      }
      if (IsMain != false) {
        size += 1 + 1;
      }
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      size += patternPos_.CalculateSize(_repeated_patternPos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      comboStageData_.Add(other.comboStageData_);
      if (other.RoundWin != 0D) {
        RoundWin = other.RoundWin;
      }
      if (other.MysterySymbol != 0) {
        MysterySymbol = other.MysterySymbol;
      }
      if (other.FreeNowRound != 0) {
        FreeNowRound = other.FreeNowRound;
      }
      if (other.FreeTotalRound != 0) {
        FreeTotalRound = other.FreeTotalRound;
      }
      if (other.ScatterCount != 0) {
        ScatterCount = other.ScatterCount;
      }
      if (other.ScatterWin != 0D) {
        ScatterWin = other.ScatterWin;
      }
      if (other.GambaleGet != false) {
        GambaleGet = other.GambaleGet;
      }
      if (other.GambaleType != 0) {
        GambaleType = other.GambaleType;
      }
      if (other.GambaleNum != 0) {
        GambaleNum = other.GambaleNum;
      }
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.ReelType != 0) {
        ReelType = other.ReelType;
      }
      if (other.IsMain != false) {
        IsMain = other.IsMain;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      patternPos_.Add(other.patternPos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comboStageData_.AddEntriesFrom(input, _repeated_comboStageData_codec);
            break;
          }
          case 17: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 24: {
            MysterySymbol = input.ReadInt32();
            break;
          }
          case 32: {
            FreeNowRound = input.ReadInt32();
            break;
          }
          case 40: {
            FreeTotalRound = input.ReadInt32();
            break;
          }
          case 48: {
            ScatterCount = input.ReadInt32();
            break;
          }
          case 57: {
            ScatterWin = input.ReadDouble();
            break;
          }
          case 64: {
            GambaleGet = input.ReadBool();
            break;
          }
          case 72: {
            GambaleType = input.ReadInt32();
            break;
          }
          case 80: {
            GambaleNum = input.ReadInt32();
            break;
          }
          case 88: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 96: {
            ReelType = input.ReadInt32();
            break;
          }
          case 104: {
            IsMain = input.ReadBool();
            break;
          }
          case 112: {
            MaxFlag = input.ReadBool();
            break;
          }
          case 122:
          case 120: {
            patternPos_.AddEntriesFrom(input, _repeated_patternPos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comboStageData_.AddEntriesFrom(ref input, _repeated_comboStageData_codec);
            break;
          }
          case 17: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 24: {
            MysterySymbol = input.ReadInt32();
            break;
          }
          case 32: {
            FreeNowRound = input.ReadInt32();
            break;
          }
          case 40: {
            FreeTotalRound = input.ReadInt32();
            break;
          }
          case 48: {
            ScatterCount = input.ReadInt32();
            break;
          }
          case 57: {
            ScatterWin = input.ReadDouble();
            break;
          }
          case 64: {
            GambaleGet = input.ReadBool();
            break;
          }
          case 72: {
            GambaleType = input.ReadInt32();
            break;
          }
          case 80: {
            GambaleNum = input.ReadInt32();
            break;
          }
          case 88: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 96: {
            ReelType = input.ReadInt32();
            break;
          }
          case 104: {
            IsMain = input.ReadBool();
            break;
          }
          case 112: {
            MaxFlag = input.ReadBool();
            break;
          }
          case 122:
          case 120: {
            patternPos_.AddEntriesFrom(ref input, _repeated_patternPos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ComboStageInfo : pb::IMessage<ComboStageInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComboStageInfo> _parser = new pb::MessageParser<ComboStageInfo>(() => new ComboStageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComboStageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo(ComboStageInfo other) : this() {
      comboStageSymbol_ = other.comboStageSymbol_.Clone();
      comboStageWin_ = other.comboStageWin_;
      linWin_ = other.linWin_;
      awardDataVec_ = other.awardDataVec_.Clone();
      goldenWin_ = other.goldenWin_;
      mysteryGolden_ = other.mysteryGolden_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo Clone() {
      return new ComboStageInfo(this);
    }

    /// <summary>Field number for the "ComboStageSymbol" field.</summary>
    public const int ComboStageSymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.Column> _repeated_comboStageSymbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Ww.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.Column> comboStageSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.Column> ComboStageSymbol {
      get { return comboStageSymbol_; }
    }

    /// <summary>Field number for the "ComboStageWin" field.</summary>
    public const int ComboStageWinFieldNumber = 2;
    private double comboStageWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ComboStageWin {
      get { return comboStageWin_; }
      set {
        comboStageWin_ = value;
      }
    }

    /// <summary>Field number for the "LinWin" field.</summary>
    public const int LinWinFieldNumber = 3;
    private double linWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LinWin {
      get { return linWin_; }
      set {
        linWin_ = value;
      }
    }

    /// <summary>Field number for the "AwardDataVec" field.</summary>
    public const int AwardDataVecFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.AwardData> _repeated_awardDataVec_codec
        = pb::FieldCodec.ForMessage(34, global::Jili.Protocols.Ww.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.AwardData> awardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.AwardData> AwardDataVec {
      get { return awardDataVec_; }
    }

    /// <summary>Field number for the "GoldenWin" field.</summary>
    public const int GoldenWinFieldNumber = 5;
    private double goldenWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double GoldenWin {
      get { return goldenWin_; }
      set {
        goldenWin_ = value;
      }
    }

    /// <summary>Field number for the "MysteryGolden" field.</summary>
    public const int MysteryGoldenFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.MusteryPack> _repeated_mysteryGolden_codec
        = pb::FieldCodec.ForMessage(50, global::Jili.Protocols.Ww.MusteryPack.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.MusteryPack> mysteryGolden_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.MusteryPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.MusteryPack> MysteryGolden {
      get { return mysteryGolden_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComboStageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComboStageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comboStageSymbol_.Equals(other.comboStageSymbol_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ComboStageWin, other.ComboStageWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LinWin, other.LinWin)) return false;
      if(!awardDataVec_.Equals(other.awardDataVec_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GoldenWin, other.GoldenWin)) return false;
      if(!mysteryGolden_.Equals(other.mysteryGolden_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comboStageSymbol_.GetHashCode();
      if (ComboStageWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ComboStageWin);
      if (LinWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LinWin);
      hash ^= awardDataVec_.GetHashCode();
      if (GoldenWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GoldenWin);
      hash ^= mysteryGolden_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comboStageSymbol_.WriteTo(output, _repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ComboStageWin);
      }
      if (LinWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LinWin);
      }
      awardDataVec_.WriteTo(output, _repeated_awardDataVec_codec);
      if (GoldenWin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(GoldenWin);
      }
      mysteryGolden_.WriteTo(output, _repeated_mysteryGolden_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comboStageSymbol_.WriteTo(ref output, _repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ComboStageWin);
      }
      if (LinWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LinWin);
      }
      awardDataVec_.WriteTo(ref output, _repeated_awardDataVec_codec);
      if (GoldenWin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(GoldenWin);
      }
      mysteryGolden_.WriteTo(ref output, _repeated_mysteryGolden_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += comboStageSymbol_.CalculateSize(_repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        size += 1 + 8;
      }
      if (LinWin != 0D) {
        size += 1 + 8;
      }
      size += awardDataVec_.CalculateSize(_repeated_awardDataVec_codec);
      if (GoldenWin != 0D) {
        size += 1 + 8;
      }
      size += mysteryGolden_.CalculateSize(_repeated_mysteryGolden_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComboStageInfo other) {
      if (other == null) {
        return;
      }
      comboStageSymbol_.Add(other.comboStageSymbol_);
      if (other.ComboStageWin != 0D) {
        ComboStageWin = other.ComboStageWin;
      }
      if (other.LinWin != 0D) {
        LinWin = other.LinWin;
      }
      awardDataVec_.Add(other.awardDataVec_);
      if (other.GoldenWin != 0D) {
        GoldenWin = other.GoldenWin;
      }
      mysteryGolden_.Add(other.mysteryGolden_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comboStageSymbol_.AddEntriesFrom(input, _repeated_comboStageSymbol_codec);
            break;
          }
          case 17: {
            ComboStageWin = input.ReadDouble();
            break;
          }
          case 25: {
            LinWin = input.ReadDouble();
            break;
          }
          case 34: {
            awardDataVec_.AddEntriesFrom(input, _repeated_awardDataVec_codec);
            break;
          }
          case 41: {
            GoldenWin = input.ReadDouble();
            break;
          }
          case 50: {
            mysteryGolden_.AddEntriesFrom(input, _repeated_mysteryGolden_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comboStageSymbol_.AddEntriesFrom(ref input, _repeated_comboStageSymbol_codec);
            break;
          }
          case 17: {
            ComboStageWin = input.ReadDouble();
            break;
          }
          case 25: {
            LinWin = input.ReadDouble();
            break;
          }
          case 34: {
            awardDataVec_.AddEntriesFrom(ref input, _repeated_awardDataVec_codec);
            break;
          }
          case 41: {
            GoldenWin = input.ReadDouble();
            break;
          }
          case 50: {
            mysteryGolden_.AddEntriesFrom(ref input, _repeated_mysteryGolden_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_col_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> col_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      index_ = other.index_;
      symbol_ = other.symbol_;
      count_ = other.count_;
      win_ = other.win_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 3;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 4;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Symbol != other.Symbol) return false;
      if (Count != other.Count) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Symbol != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Symbol != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Symbol = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Symbol = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MusteryPack : pb::IMessage<MusteryPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MusteryPack> _parser = new pb::MessageParser<MusteryPack>(() => new MusteryPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MusteryPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MusteryPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MusteryPack(MusteryPack other) : this() {
      goldenType_ = other.goldenType_;
      coinMul_ = other.coinMul_.Clone();
      mult_ = other.mult_.Clone();
      collector_ = other.collector_.Clone();
      cut_ = other.cut_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MusteryPack Clone() {
      return new MusteryPack(this);
    }

    /// <summary>Field number for the "GoldenType" field.</summary>
    public const int GoldenTypeFieldNumber = 1;
    private int goldenType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GoldenType {
      get { return goldenType_; }
      set {
        goldenType_ = value;
      }
    }

    /// <summary>Field number for the "CoinMul" field.</summary>
    public const int CoinMulFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.ColumnM> _repeated_coinMul_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Ww.ColumnM.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.ColumnM> coinMul_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.ColumnM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.ColumnM> CoinMul {
      get { return coinMul_; }
    }

    /// <summary>Field number for the "Mult" field.</summary>
    public const int MultFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.SSymbol> _repeated_mult_codec
        = pb::FieldCodec.ForMessage(26, global::Jili.Protocols.Ww.SSymbol.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.SSymbol> mult_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.SSymbol>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.SSymbol> Mult {
      get { return mult_; }
    }

    /// <summary>Field number for the "Collector" field.</summary>
    public const int CollectorFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.CcSymbol> _repeated_collector_codec
        = pb::FieldCodec.ForMessage(34, global::Jili.Protocols.Ww.CcSymbol.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.CcSymbol> collector_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.CcSymbol>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.CcSymbol> Collector {
      get { return collector_; }
    }

    /// <summary>Field number for the "Cut" field.</summary>
    public const int CutFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Ww.SSymbol> _repeated_cut_codec
        = pb::FieldCodec.ForMessage(42, global::Jili.Protocols.Ww.SSymbol.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Ww.SSymbol> cut_ = new pbc::RepeatedField<global::Jili.Protocols.Ww.SSymbol>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Ww.SSymbol> Cut {
      get { return cut_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MusteryPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MusteryPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoldenType != other.GoldenType) return false;
      if(!coinMul_.Equals(other.coinMul_)) return false;
      if(!mult_.Equals(other.mult_)) return false;
      if(!collector_.Equals(other.collector_)) return false;
      if(!cut_.Equals(other.cut_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GoldenType != 0) hash ^= GoldenType.GetHashCode();
      hash ^= coinMul_.GetHashCode();
      hash ^= mult_.GetHashCode();
      hash ^= collector_.GetHashCode();
      hash ^= cut_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GoldenType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoldenType);
      }
      coinMul_.WriteTo(output, _repeated_coinMul_codec);
      mult_.WriteTo(output, _repeated_mult_codec);
      collector_.WriteTo(output, _repeated_collector_codec);
      cut_.WriteTo(output, _repeated_cut_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GoldenType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoldenType);
      }
      coinMul_.WriteTo(ref output, _repeated_coinMul_codec);
      mult_.WriteTo(ref output, _repeated_mult_codec);
      collector_.WriteTo(ref output, _repeated_collector_codec);
      cut_.WriteTo(ref output, _repeated_cut_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GoldenType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoldenType);
      }
      size += coinMul_.CalculateSize(_repeated_coinMul_codec);
      size += mult_.CalculateSize(_repeated_mult_codec);
      size += collector_.CalculateSize(_repeated_collector_codec);
      size += cut_.CalculateSize(_repeated_cut_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MusteryPack other) {
      if (other == null) {
        return;
      }
      if (other.GoldenType != 0) {
        GoldenType = other.GoldenType;
      }
      coinMul_.Add(other.coinMul_);
      mult_.Add(other.mult_);
      collector_.Add(other.collector_);
      cut_.Add(other.cut_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GoldenType = input.ReadInt32();
            break;
          }
          case 18: {
            coinMul_.AddEntriesFrom(input, _repeated_coinMul_codec);
            break;
          }
          case 26: {
            mult_.AddEntriesFrom(input, _repeated_mult_codec);
            break;
          }
          case 34: {
            collector_.AddEntriesFrom(input, _repeated_collector_codec);
            break;
          }
          case 42: {
            cut_.AddEntriesFrom(input, _repeated_cut_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GoldenType = input.ReadInt32();
            break;
          }
          case 18: {
            coinMul_.AddEntriesFrom(ref input, _repeated_coinMul_codec);
            break;
          }
          case 26: {
            mult_.AddEntriesFrom(ref input, _repeated_mult_codec);
            break;
          }
          case 34: {
            collector_.AddEntriesFrom(ref input, _repeated_collector_codec);
            break;
          }
          case 42: {
            cut_.AddEntriesFrom(ref input, _repeated_cut_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ColumnM : pb::IMessage<ColumnM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnM> _parser = new pb::MessageParser<ColumnM>(() => new ColumnM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnM(ColumnM other) : this() {
      colm_ = other.colm_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnM Clone() {
      return new ColumnM(this);
    }

    /// <summary>Field number for the "Colm" field.</summary>
    public const int ColmFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_colm_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> colm_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Colm {
      get { return colm_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColumnM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!colm_.Equals(other.colm_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= colm_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      colm_.WriteTo(output, _repeated_colm_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      colm_.WriteTo(ref output, _repeated_colm_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += colm_.CalculateSize(_repeated_colm_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnM other) {
      if (other == null) {
        return;
      }
      colm_.Add(other.colm_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            colm_.AddEntriesFrom(input, _repeated_colm_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            colm_.AddEntriesFrom(ref input, _repeated_colm_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SSymbol : pb::IMessage<SSymbol>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SSymbol> _parser = new pb::MessageParser<SSymbol>(() => new SSymbol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SSymbol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSymbol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSymbol(SSymbol other) : this() {
      pos_ = other.pos_;
      mul_ = other.mul_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSymbol Clone() {
      return new SSymbol(this);
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "Mul" field.</summary>
    public const int MulFieldNumber = 2;
    private double mul_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mul {
      get { return mul_; }
      set {
        mul_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SSymbol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SSymbol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mul, other.Mul)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (Mul != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mul);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Mul != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Mul);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Mul != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Mul);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (Mul != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SSymbol other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.Mul != 0D) {
        Mul = other.Mul;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 17: {
            Mul = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 17: {
            Mul = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CcSymbol : pb::IMessage<CcSymbol>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CcSymbol> _parser = new pb::MessageParser<CcSymbol>(() => new CcSymbol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CcSymbol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CcSymbol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CcSymbol(CcSymbol other) : this() {
      srcPos_ = other.srcPos_;
      mul_ = other.mul_;
      ccPos_ = other.ccPos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CcSymbol Clone() {
      return new CcSymbol(this);
    }

    /// <summary>Field number for the "SrcPos" field.</summary>
    public const int SrcPosFieldNumber = 1;
    private int srcPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SrcPos {
      get { return srcPos_; }
      set {
        srcPos_ = value;
      }
    }

    /// <summary>Field number for the "Mul" field.</summary>
    public const int MulFieldNumber = 2;
    private double mul_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mul {
      get { return mul_; }
      set {
        mul_ = value;
      }
    }

    /// <summary>Field number for the "CcPos" field.</summary>
    public const int CcPosFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_ccPos_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> ccPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CcPos {
      get { return ccPos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CcSymbol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CcSymbol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SrcPos != other.SrcPos) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mul, other.Mul)) return false;
      if(!ccPos_.Equals(other.ccPos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SrcPos != 0) hash ^= SrcPos.GetHashCode();
      if (Mul != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mul);
      hash ^= ccPos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SrcPos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SrcPos);
      }
      if (Mul != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Mul);
      }
      ccPos_.WriteTo(output, _repeated_ccPos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SrcPos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SrcPos);
      }
      if (Mul != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Mul);
      }
      ccPos_.WriteTo(ref output, _repeated_ccPos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SrcPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SrcPos);
      }
      if (Mul != 0D) {
        size += 1 + 8;
      }
      size += ccPos_.CalculateSize(_repeated_ccPos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CcSymbol other) {
      if (other == null) {
        return;
      }
      if (other.SrcPos != 0) {
        SrcPos = other.SrcPos;
      }
      if (other.Mul != 0D) {
        Mul = other.Mul;
      }
      ccPos_.Add(other.ccPos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SrcPos = input.ReadInt32();
            break;
          }
          case 17: {
            Mul = input.ReadDouble();
            break;
          }
          case 26:
          case 24: {
            ccPos_.AddEntriesFrom(input, _repeated_ccPos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SrcPos = input.ReadInt32();
            break;
          }
          case 17: {
            Mul = input.ReadDouble();
            break;
          }
          case 26:
          case 24: {
            ccPos_.AddEntriesFrom(ref input, _repeated_ccPos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CvSymbol : pb::IMessage<CvSymbol>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CvSymbol> _parser = new pb::MessageParser<CvSymbol>(() => new CvSymbol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CvSymbol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Ww.SpinAckReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CvSymbol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CvSymbol(CvSymbol other) : this() {
      targetSymbol_ = other.targetSymbol_;
      srcPos_ = other.srcPos_;
      cvPos_ = other.cvPos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CvSymbol Clone() {
      return new CvSymbol(this);
    }

    /// <summary>Field number for the "TargetSymbol" field.</summary>
    public const int TargetSymbolFieldNumber = 1;
    private int targetSymbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetSymbol {
      get { return targetSymbol_; }
      set {
        targetSymbol_ = value;
      }
    }

    /// <summary>Field number for the "SrcPos" field.</summary>
    public const int SrcPosFieldNumber = 2;
    private int srcPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SrcPos {
      get { return srcPos_; }
      set {
        srcPos_ = value;
      }
    }

    /// <summary>Field number for the "CvPos" field.</summary>
    public const int CvPosFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_cvPos_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> cvPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CvPos {
      get { return cvPos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CvSymbol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CvSymbol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetSymbol != other.TargetSymbol) return false;
      if (SrcPos != other.SrcPos) return false;
      if(!cvPos_.Equals(other.cvPos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetSymbol != 0) hash ^= TargetSymbol.GetHashCode();
      if (SrcPos != 0) hash ^= SrcPos.GetHashCode();
      hash ^= cvPos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TargetSymbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetSymbol);
      }
      if (SrcPos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SrcPos);
      }
      cvPos_.WriteTo(output, _repeated_cvPos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TargetSymbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetSymbol);
      }
      if (SrcPos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SrcPos);
      }
      cvPos_.WriteTo(ref output, _repeated_cvPos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TargetSymbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetSymbol);
      }
      if (SrcPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SrcPos);
      }
      size += cvPos_.CalculateSize(_repeated_cvPos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CvSymbol other) {
      if (other == null) {
        return;
      }
      if (other.TargetSymbol != 0) {
        TargetSymbol = other.TargetSymbol;
      }
      if (other.SrcPos != 0) {
        SrcPos = other.SrcPos;
      }
      cvPos_.Add(other.cvPos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetSymbol = input.ReadInt32();
            break;
          }
          case 16: {
            SrcPos = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            cvPos_.AddEntriesFrom(input, _repeated_cvPos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TargetSymbol = input.ReadInt32();
            break;
          }
          case 16: {
            SrcPos = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            cvPos_.AddEntriesFrom(ref input, _repeated_cvPos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
