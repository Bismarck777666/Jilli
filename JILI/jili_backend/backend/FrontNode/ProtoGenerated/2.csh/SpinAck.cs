// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Csh {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhJKaWxpLlByb3RvY29scy5Dc2gixwEKB1NwaW5B",
            "Y2sSLwoGQWNrVmVjGAEgAygLMh8uSmlsaS5Qcm90b2NvbHMuQ3NoLlNpbmds",
            "ZVBsYXRlEg0KBU1HV2luGAIgASgBEg0KBUZHV2luGAMgASgBEhAKCFRvdGFs",
            "V2luGAQgASgBEhEKCVNob3dJbmRleBgFIAEoCRIQCghOb3dNb25leRgGIAEo",
            "ARIPCgdBY2tUeXBlGAcgASgFEgsKA1JUUBgIIAEoARILCgNMSUQYCSABKAUS",
            "CwoDUklEGAogASgFIvMBCgtTaW5nbGVQbGF0ZRIxCghBd2FyZFZlYxgBIAMo",
            "CzIfLkppbGkuUHJvdG9jb2xzLkNzaC5Bd2FyZERldGFpbBIsCghQbGF0ZVZl",
            "YxgCIAMoCzIaLkppbGkuUHJvdG9jb2xzLkNzaC5Db2x1bW4SMAoMQ29sdW1u",
            "U3ltYm9sGAMgAygLMhouSmlsaS5Qcm90b2NvbHMuQ3NoLkNvbHVtbhIVCg1B",
            "d2FyZFR5cGVGbGFnGAQgASgFEhMKC1JlbWFpblJvdW5kGAUgASgFEhIKCkV4",
            "dHJhUm91bmQYBiABKAUSEQoJRXh0cmFPZGRzGAcgASgFImUKC0F3YXJkRGV0",
            "YWlsEi8KCEF3YXJkU2V0GAEgAygLMh0uSmlsaS5Qcm90b2NvbHMuQ3NoLkF3",
            "YXJkRGF0YRIRCglza2lwRmllbGQYAiABKAUSEgoKQXdhcmRNb25leRgDIAEo",
            "ASKdAQoJQXdhcmREYXRhEhMKC0F3YXJkU3ltYm9sGAEgASgFEi4KDEF3YXJk",
            "R3JpZFZlYxgCIAMoCzIYLkppbGkuUHJvdG9jb2xzLkNzaC5HcmlkEhIKCkF3",
            "YXJkTW9uZXkYAyABKAESEwoLU3ltYm9sQ291bnQYBCABKAUSDQoFTGluZXMY",
            "BSABKAUSEwoLQ29udGFpbldpbGQYBiABKAgiIwoER3JpZBIOCgZDb2x1bW4Y",
            "ASABKAUSCwoDUm93GAIgASgFIhUKBkNvbHVtbhILCgNSb3cYASADKAViBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Csh.SpinAck), global::Jili.Protocols.Csh.SpinAck.Parser, new[]{ "AckVec", "MGWin", "FGWin", "TotalWin", "ShowIndex", "NowMoney", "AckType", "RTP", "LID", "RID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Csh.SinglePlate), global::Jili.Protocols.Csh.SinglePlate.Parser, new[]{ "AwardVec", "PlateVec", "ColumnSymbol", "AwardTypeFlag", "RemainRound", "ExtraRound", "ExtraOdds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Csh.AwardDetail), global::Jili.Protocols.Csh.AwardDetail.Parser, new[]{ "AwardSet", "SkipField", "AwardMoney" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Csh.AwardData), global::Jili.Protocols.Csh.AwardData.Parser, new[]{ "AwardSymbol", "AwardGridVec", "AwardMoney", "SymbolCount", "Lines", "ContainWild" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Csh.Grid), global::Jili.Protocols.Csh.Grid.Parser, new[]{ "Column", "Row" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Csh.Column), global::Jili.Protocols.Csh.Column.Parser, new[]{ "Row" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Csh.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      ackVec_ = other.ackVec_.Clone();
      mGWin_ = other.mGWin_;
      fGWin_ = other.fGWin_;
      totalWin_ = other.totalWin_;
      showIndex_ = other.showIndex_;
      nowMoney_ = other.nowMoney_;
      ackType_ = other.ackType_;
      rTP_ = other.rTP_;
      lID_ = other.lID_;
      rID_ = other.rID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "AckVec" field.</summary>
    public const int AckVecFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Csh.SinglePlate> _repeated_ackVec_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Csh.SinglePlate.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Csh.SinglePlate> ackVec_ = new pbc::RepeatedField<global::Jili.Protocols.Csh.SinglePlate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Csh.SinglePlate> AckVec {
      get { return ackVec_; }
    }

    /// <summary>Field number for the "MGWin" field.</summary>
    public const int MGWinFieldNumber = 2;
    private double mGWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MGWin {
      get { return mGWin_; }
      set {
        mGWin_ = value;
      }
    }

    /// <summary>Field number for the "FGWin" field.</summary>
    public const int FGWinFieldNumber = 3;
    private double fGWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FGWin {
      get { return fGWin_; }
      set {
        fGWin_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 4;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "ShowIndex" field.</summary>
    public const int ShowIndexFieldNumber = 5;
    private string showIndex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShowIndex {
      get { return showIndex_; }
      set {
        showIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NowMoney" field.</summary>
    public const int NowMoneyFieldNumber = 6;
    private double nowMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NowMoney {
      get { return nowMoney_; }
      set {
        nowMoney_ = value;
      }
    }

    /// <summary>Field number for the "AckType" field.</summary>
    public const int AckTypeFieldNumber = 7;
    private int ackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 8;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    /// <summary>Field number for the "LID" field.</summary>
    public const int LIDFieldNumber = 9;
    private int lID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LID {
      get { return lID_; }
      set {
        lID_ = value;
      }
    }

    /// <summary>Field number for the "RID" field.</summary>
    public const int RIDFieldNumber = 10;
    private int rID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RID {
      get { return rID_; }
      set {
        rID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ackVec_.Equals(other.ackVec_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MGWin, other.MGWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FGWin, other.FGWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (ShowIndex != other.ShowIndex) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NowMoney, other.NowMoney)) return false;
      if (AckType != other.AckType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      if (LID != other.LID) return false;
      if (RID != other.RID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ackVec_.GetHashCode();
      if (MGWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MGWin);
      if (FGWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FGWin);
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (ShowIndex.Length != 0) hash ^= ShowIndex.GetHashCode();
      if (NowMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NowMoney);
      if (AckType != 0) hash ^= AckType.GetHashCode();
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (LID != 0) hash ^= LID.GetHashCode();
      if (RID != 0) hash ^= RID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ackVec_.WriteTo(output, _repeated_ackVec_codec);
      if (MGWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MGWin);
      }
      if (FGWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(FGWin);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ackVec_.WriteTo(ref output, _repeated_ackVec_codec);
      if (MGWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MGWin);
      }
      if (FGWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(FGWin);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += ackVec_.CalculateSize(_repeated_ackVec_codec);
      if (MGWin != 0D) {
        size += 1 + 8;
      }
      if (FGWin != 0D) {
        size += 1 + 8;
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (ShowIndex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowIndex);
      }
      if (NowMoney != 0D) {
        size += 1 + 8;
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckType);
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (LID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LID);
      }
      if (RID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      ackVec_.Add(other.ackVec_);
      if (other.MGWin != 0D) {
        MGWin = other.MGWin;
      }
      if (other.FGWin != 0D) {
        FGWin = other.FGWin;
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.ShowIndex.Length != 0) {
        ShowIndex = other.ShowIndex;
      }
      if (other.NowMoney != 0D) {
        NowMoney = other.NowMoney;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      if (other.LID != 0) {
        LID = other.LID;
      }
      if (other.RID != 0) {
        RID = other.RID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ackVec_.AddEntriesFrom(input, _repeated_ackVec_codec);
            break;
          }
          case 17: {
            MGWin = input.ReadDouble();
            break;
          }
          case 25: {
            FGWin = input.ReadDouble();
            break;
          }
          case 33: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 42: {
            ShowIndex = input.ReadString();
            break;
          }
          case 49: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 56: {
            AckType = input.ReadInt32();
            break;
          }
          case 65: {
            RTP = input.ReadDouble();
            break;
          }
          case 72: {
            LID = input.ReadInt32();
            break;
          }
          case 80: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ackVec_.AddEntriesFrom(ref input, _repeated_ackVec_codec);
            break;
          }
          case 17: {
            MGWin = input.ReadDouble();
            break;
          }
          case 25: {
            FGWin = input.ReadDouble();
            break;
          }
          case 33: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 42: {
            ShowIndex = input.ReadString();
            break;
          }
          case 49: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 56: {
            AckType = input.ReadInt32();
            break;
          }
          case 65: {
            RTP = input.ReadDouble();
            break;
          }
          case 72: {
            LID = input.ReadInt32();
            break;
          }
          case 80: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SinglePlate : pb::IMessage<SinglePlate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SinglePlate> _parser = new pb::MessageParser<SinglePlate>(() => new SinglePlate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SinglePlate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Csh.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePlate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePlate(SinglePlate other) : this() {
      awardVec_ = other.awardVec_.Clone();
      plateVec_ = other.plateVec_.Clone();
      columnSymbol_ = other.columnSymbol_.Clone();
      awardTypeFlag_ = other.awardTypeFlag_;
      remainRound_ = other.remainRound_;
      extraRound_ = other.extraRound_;
      extraOdds_ = other.extraOdds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePlate Clone() {
      return new SinglePlate(this);
    }

    /// <summary>Field number for the "AwardVec" field.</summary>
    public const int AwardVecFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Csh.AwardDetail> _repeated_awardVec_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Csh.AwardDetail.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Csh.AwardDetail> awardVec_ = new pbc::RepeatedField<global::Jili.Protocols.Csh.AwardDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Csh.AwardDetail> AwardVec {
      get { return awardVec_; }
    }

    /// <summary>Field number for the "PlateVec" field.</summary>
    public const int PlateVecFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Csh.Column> _repeated_plateVec_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Csh.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Csh.Column> plateVec_ = new pbc::RepeatedField<global::Jili.Protocols.Csh.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Csh.Column> PlateVec {
      get { return plateVec_; }
    }

    /// <summary>Field number for the "ColumnSymbol" field.</summary>
    public const int ColumnSymbolFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Csh.Column> _repeated_columnSymbol_codec
        = pb::FieldCodec.ForMessage(26, global::Jili.Protocols.Csh.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Csh.Column> columnSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Csh.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Csh.Column> ColumnSymbol {
      get { return columnSymbol_; }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 4;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "RemainRound" field.</summary>
    public const int RemainRoundFieldNumber = 5;
    private int remainRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RemainRound {
      get { return remainRound_; }
      set {
        remainRound_ = value;
      }
    }

    /// <summary>Field number for the "ExtraRound" field.</summary>
    public const int ExtraRoundFieldNumber = 6;
    private int extraRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExtraRound {
      get { return extraRound_; }
      set {
        extraRound_ = value;
      }
    }

    /// <summary>Field number for the "ExtraOdds" field.</summary>
    public const int ExtraOddsFieldNumber = 7;
    private int extraOdds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExtraOdds {
      get { return extraOdds_; }
      set {
        extraOdds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SinglePlate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SinglePlate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!awardVec_.Equals(other.awardVec_)) return false;
      if(!plateVec_.Equals(other.plateVec_)) return false;
      if(!columnSymbol_.Equals(other.columnSymbol_)) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (RemainRound != other.RemainRound) return false;
      if (ExtraRound != other.ExtraRound) return false;
      if (ExtraOdds != other.ExtraOdds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= awardVec_.GetHashCode();
      hash ^= plateVec_.GetHashCode();
      hash ^= columnSymbol_.GetHashCode();
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (RemainRound != 0) hash ^= RemainRound.GetHashCode();
      if (ExtraRound != 0) hash ^= ExtraRound.GetHashCode();
      if (ExtraOdds != 0) hash ^= ExtraOdds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      awardVec_.WriteTo(output, _repeated_awardVec_codec);
      plateVec_.WriteTo(output, _repeated_plateVec_codec);
      columnSymbol_.WriteTo(output, _repeated_columnSymbol_codec);
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AwardTypeFlag);
      }
      if (RemainRound != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RemainRound);
      }
      if (ExtraRound != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ExtraRound);
      }
      if (ExtraOdds != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ExtraOdds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      awardVec_.WriteTo(ref output, _repeated_awardVec_codec);
      plateVec_.WriteTo(ref output, _repeated_plateVec_codec);
      columnSymbol_.WriteTo(ref output, _repeated_columnSymbol_codec);
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AwardTypeFlag);
      }
      if (RemainRound != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RemainRound);
      }
      if (ExtraRound != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ExtraRound);
      }
      if (ExtraOdds != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ExtraOdds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += awardVec_.CalculateSize(_repeated_awardVec_codec);
      size += plateVec_.CalculateSize(_repeated_plateVec_codec);
      size += columnSymbol_.CalculateSize(_repeated_columnSymbol_codec);
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (RemainRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainRound);
      }
      if (ExtraRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraRound);
      }
      if (ExtraOdds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraOdds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SinglePlate other) {
      if (other == null) {
        return;
      }
      awardVec_.Add(other.awardVec_);
      plateVec_.Add(other.plateVec_);
      columnSymbol_.Add(other.columnSymbol_);
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.RemainRound != 0) {
        RemainRound = other.RemainRound;
      }
      if (other.ExtraRound != 0) {
        ExtraRound = other.ExtraRound;
      }
      if (other.ExtraOdds != 0) {
        ExtraOdds = other.ExtraOdds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            awardVec_.AddEntriesFrom(input, _repeated_awardVec_codec);
            break;
          }
          case 18: {
            plateVec_.AddEntriesFrom(input, _repeated_plateVec_codec);
            break;
          }
          case 26: {
            columnSymbol_.AddEntriesFrom(input, _repeated_columnSymbol_codec);
            break;
          }
          case 32: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 40: {
            RemainRound = input.ReadInt32();
            break;
          }
          case 48: {
            ExtraRound = input.ReadInt32();
            break;
          }
          case 56: {
            ExtraOdds = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            awardVec_.AddEntriesFrom(ref input, _repeated_awardVec_codec);
            break;
          }
          case 18: {
            plateVec_.AddEntriesFrom(ref input, _repeated_plateVec_codec);
            break;
          }
          case 26: {
            columnSymbol_.AddEntriesFrom(ref input, _repeated_columnSymbol_codec);
            break;
          }
          case 32: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 40: {
            RemainRound = input.ReadInt32();
            break;
          }
          case 48: {
            ExtraRound = input.ReadInt32();
            break;
          }
          case 56: {
            ExtraOdds = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardDetail : pb::IMessage<AwardDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardDetail> _parser = new pb::MessageParser<AwardDetail>(() => new AwardDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Csh.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardDetail(AwardDetail other) : this() {
      awardSet_ = other.awardSet_.Clone();
      skipField_ = other.skipField_;
      awardMoney_ = other.awardMoney_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardDetail Clone() {
      return new AwardDetail(this);
    }

    /// <summary>Field number for the "AwardSet" field.</summary>
    public const int AwardSetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Csh.AwardData> _repeated_awardSet_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Csh.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Csh.AwardData> awardSet_ = new pbc::RepeatedField<global::Jili.Protocols.Csh.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Csh.AwardData> AwardSet {
      get { return awardSet_; }
    }

    /// <summary>Field number for the "skipField" field.</summary>
    public const int SkipFieldFieldNumber = 2;
    private int skipField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkipField {
      get { return skipField_; }
      set {
        skipField_ = value;
      }
    }

    /// <summary>Field number for the "AwardMoney" field.</summary>
    public const int AwardMoneyFieldNumber = 3;
    private double awardMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AwardMoney {
      get { return awardMoney_; }
      set {
        awardMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!awardSet_.Equals(other.awardSet_)) return false;
      if (SkipField != other.SkipField) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AwardMoney, other.AwardMoney)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= awardSet_.GetHashCode();
      if (SkipField != 0) hash ^= SkipField.GetHashCode();
      if (AwardMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AwardMoney);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      awardSet_.WriteTo(output, _repeated_awardSet_codec);
      if (SkipField != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkipField);
      }
      if (AwardMoney != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AwardMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      awardSet_.WriteTo(ref output, _repeated_awardSet_codec);
      if (SkipField != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkipField);
      }
      if (AwardMoney != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AwardMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += awardSet_.CalculateSize(_repeated_awardSet_codec);
      if (SkipField != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkipField);
      }
      if (AwardMoney != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardDetail other) {
      if (other == null) {
        return;
      }
      awardSet_.Add(other.awardSet_);
      if (other.SkipField != 0) {
        SkipField = other.SkipField;
      }
      if (other.AwardMoney != 0D) {
        AwardMoney = other.AwardMoney;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            awardSet_.AddEntriesFrom(input, _repeated_awardSet_codec);
            break;
          }
          case 16: {
            SkipField = input.ReadInt32();
            break;
          }
          case 25: {
            AwardMoney = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            awardSet_.AddEntriesFrom(ref input, _repeated_awardSet_codec);
            break;
          }
          case 16: {
            SkipField = input.ReadInt32();
            break;
          }
          case 25: {
            AwardMoney = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Csh.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      awardSymbol_ = other.awardSymbol_;
      awardGridVec_ = other.awardGridVec_.Clone();
      awardMoney_ = other.awardMoney_;
      symbolCount_ = other.symbolCount_;
      lines_ = other.lines_;
      containWild_ = other.containWild_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "AwardSymbol" field.</summary>
    public const int AwardSymbolFieldNumber = 1;
    private int awardSymbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardSymbol {
      get { return awardSymbol_; }
      set {
        awardSymbol_ = value;
      }
    }

    /// <summary>Field number for the "AwardGridVec" field.</summary>
    public const int AwardGridVecFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Csh.Grid> _repeated_awardGridVec_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Csh.Grid.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Csh.Grid> awardGridVec_ = new pbc::RepeatedField<global::Jili.Protocols.Csh.Grid>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Csh.Grid> AwardGridVec {
      get { return awardGridVec_; }
    }

    /// <summary>Field number for the "AwardMoney" field.</summary>
    public const int AwardMoneyFieldNumber = 3;
    private double awardMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AwardMoney {
      get { return awardMoney_; }
      set {
        awardMoney_ = value;
      }
    }

    /// <summary>Field number for the "SymbolCount" field.</summary>
    public const int SymbolCountFieldNumber = 4;
    private int symbolCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SymbolCount {
      get { return symbolCount_; }
      set {
        symbolCount_ = value;
      }
    }

    /// <summary>Field number for the "Lines" field.</summary>
    public const int LinesFieldNumber = 5;
    private int lines_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Lines {
      get { return lines_; }
      set {
        lines_ = value;
      }
    }

    /// <summary>Field number for the "ContainWild" field.</summary>
    public const int ContainWildFieldNumber = 6;
    private bool containWild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ContainWild {
      get { return containWild_; }
      set {
        containWild_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AwardSymbol != other.AwardSymbol) return false;
      if(!awardGridVec_.Equals(other.awardGridVec_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AwardMoney, other.AwardMoney)) return false;
      if (SymbolCount != other.SymbolCount) return false;
      if (Lines != other.Lines) return false;
      if (ContainWild != other.ContainWild) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AwardSymbol != 0) hash ^= AwardSymbol.GetHashCode();
      hash ^= awardGridVec_.GetHashCode();
      if (AwardMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AwardMoney);
      if (SymbolCount != 0) hash ^= SymbolCount.GetHashCode();
      if (Lines != 0) hash ^= Lines.GetHashCode();
      if (ContainWild != false) hash ^= ContainWild.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AwardSymbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AwardSymbol);
      }
      awardGridVec_.WriteTo(output, _repeated_awardGridVec_codec);
      if (AwardMoney != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AwardMoney);
      }
      if (SymbolCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SymbolCount);
      }
      if (Lines != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Lines);
      }
      if (ContainWild != false) {
        output.WriteRawTag(48);
        output.WriteBool(ContainWild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AwardSymbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AwardSymbol);
      }
      awardGridVec_.WriteTo(ref output, _repeated_awardGridVec_codec);
      if (AwardMoney != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AwardMoney);
      }
      if (SymbolCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SymbolCount);
      }
      if (Lines != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Lines);
      }
      if (ContainWild != false) {
        output.WriteRawTag(48);
        output.WriteBool(ContainWild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AwardSymbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardSymbol);
      }
      size += awardGridVec_.CalculateSize(_repeated_awardGridVec_codec);
      if (AwardMoney != 0D) {
        size += 1 + 8;
      }
      if (SymbolCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SymbolCount);
      }
      if (Lines != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lines);
      }
      if (ContainWild != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.AwardSymbol != 0) {
        AwardSymbol = other.AwardSymbol;
      }
      awardGridVec_.Add(other.awardGridVec_);
      if (other.AwardMoney != 0D) {
        AwardMoney = other.AwardMoney;
      }
      if (other.SymbolCount != 0) {
        SymbolCount = other.SymbolCount;
      }
      if (other.Lines != 0) {
        Lines = other.Lines;
      }
      if (other.ContainWild != false) {
        ContainWild = other.ContainWild;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AwardSymbol = input.ReadInt32();
            break;
          }
          case 18: {
            awardGridVec_.AddEntriesFrom(input, _repeated_awardGridVec_codec);
            break;
          }
          case 25: {
            AwardMoney = input.ReadDouble();
            break;
          }
          case 32: {
            SymbolCount = input.ReadInt32();
            break;
          }
          case 40: {
            Lines = input.ReadInt32();
            break;
          }
          case 48: {
            ContainWild = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AwardSymbol = input.ReadInt32();
            break;
          }
          case 18: {
            awardGridVec_.AddEntriesFrom(ref input, _repeated_awardGridVec_codec);
            break;
          }
          case 25: {
            AwardMoney = input.ReadDouble();
            break;
          }
          case 32: {
            SymbolCount = input.ReadInt32();
            break;
          }
          case 40: {
            Lines = input.ReadInt32();
            break;
          }
          case 48: {
            ContainWild = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Grid : pb::IMessage<Grid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Grid> _parser = new pb::MessageParser<Grid>(() => new Grid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Grid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Csh.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Grid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Grid(Grid other) : this() {
      column_ = other.column_;
      row_ = other.row_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Grid Clone() {
      return new Grid(this);
    }

    /// <summary>Field number for the "Column" field.</summary>
    public const int ColumnFieldNumber = 1;
    private int column_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Column {
      get { return column_; }
      set {
        column_ = value;
      }
    }

    /// <summary>Field number for the "Row" field.</summary>
    public const int RowFieldNumber = 2;
    private int row_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Row {
      get { return row_; }
      set {
        row_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Grid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Grid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Column != other.Column) return false;
      if (Row != other.Row) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Column != 0) hash ^= Column.GetHashCode();
      if (Row != 0) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Column != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Column);
      }
      if (Row != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Column != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Column);
      }
      if (Row != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Column != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Column);
      }
      if (Row != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Grid other) {
      if (other == null) {
        return;
      }
      if (other.Column != 0) {
        Column = other.Column;
      }
      if (other.Row != 0) {
        Row = other.Row;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Column = input.ReadInt32();
            break;
          }
          case 16: {
            Row = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Column = input.ReadInt32();
            break;
          }
          case 16: {
            Row = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Csh.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      row_ = other.row_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Row" field.</summary>
    public const int RowFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_row_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> row_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Row {
      get { return row_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!row_.Equals(other.row_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= row_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      row_.WriteTo(output, _repeated_row_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      row_.WriteTo(ref output, _repeated_row_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += row_.CalculateSize(_repeated_row_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      row_.Add(other.row_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            row_.AddEntriesFrom(input, _repeated_row_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            row_.AddEntriesFrom(ref input, _repeated_row_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
