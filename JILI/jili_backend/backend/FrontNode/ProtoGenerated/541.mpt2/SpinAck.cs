// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Mpt2 {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhNKaWxpLlByb3RvY29scy5NcHQyIpcBCgdTcGlu",
            "QWNrEjIKClJvdW5kUXVldWUYASADKAsyHi5KaWxpLlByb3RvY29scy5NcHQy",
            "LlJvdW5kSW5mbxIQCghHYW1lVHlwZRgCIAEoBRIQCghUb3RhbFdpbhgDIAEo",
            "ARINCgVFeHRyYRgEIAEoBRILCgNSVFAYBSABKAESCwoDTElEGAYgASgFEgsK",
            "A1JJRBgHIAEoBSK1BAoJUm91bmRJbmZvEisKBlN5bWJvbBgBIAMoCzIbLkpp",
            "bGkuUHJvdG9jb2xzLk1wdDIuQ29sdW1uEikKA011bBgCIAMoCzIcLkppbGku",
            "UHJvdG9jb2xzLk1wdDIuQ29sdW1uTRIwCgtGaW5hbFN5bWJvbBgDIAMoCzIb",
            "LkppbGkuUHJvdG9jb2xzLk1wdDIuQ29sdW1uEi4KCEZpbmFsTXVsGAQgAygL",
            "MhwuSmlsaS5Qcm90b2NvbHMuTXB0Mi5Db2x1bW5NEjEKC0NvbGxlY3RMaXN0",
            "GAUgAygLMhwuSmlsaS5Qcm90b2NvbHMuTXB0Mi5Db2xsZWN0EjEKC015c3Rl",
            "cnlMaXN0GAYgAygLMhwuSmlsaS5Qcm90b2NvbHMuTXB0Mi5NeXN0ZXJ5EjQK",
            "DEF3YXJkRGF0YVZlYxgHIAMoCzIeLkppbGkuUHJvdG9jb2xzLk1wdDIuQXdh",
            "cmREYXRhEhAKCFJvdW5kV2luGAggASgBEg8KB1BvdFR5cGUYCSABKAUSLwoH",
            "UG90TGlzdBgKIAMoCzIeLkppbGkuUHJvdG9jb2xzLk1wdDIuUG90U3ltYm9s",
            "EhkKEVJlU3BpblJlbWFpblJvdW5kGAsgASgFEhgKEFJlU3BpblRvdGFsUm91",
            "bmQYDCABKAUSEQoJR2V0UmVTcGluGA0gASgIEg4KBkdldEFkZBgOIAEoCBIV",
            "Cg1Bd2FyZFR5cGVGbGFnGA8gASgFEg8KB01heEZsYWcYECABKAgiNQoJUG90",
            "U3ltYm9sEgsKA1BvcxgBIAEoBRIOCgZTeW1ib2wYAiABKAUSCwoDTXVsGAMg",
            "ASgBIhUKBkNvbHVtbhILCgNDb2wYASADKAUiFgoHQ29sdW1uTRILCgNDb2wY",
            "ASADKAEiRAoHQ29sbGVjdBILCgNQb3MYASABKAUSDAoEQ1BvcxgCIAMoBRIL",
            "CgNNdWwYAyABKAESEQoJU3ltYm9sTXVsGAQgASgBIkEKB015c3RlcnkSDAoE",
            "SXNKUBgBIAEoCBILCgNQb3MYAiABKAUSDgoGU3ltYm9sGAMgASgFEgsKA011",
            "bBgEIAEoASJ/CglBd2FyZERhdGESDQoFQXR5cGUYASABKAUSDQoFSW5kZXgY",
            "AiABKAUSDQoFQ291bnQYAyABKAUSDgoGU3ltYm9sGAQgAygFEgsKA1BvcxgF",
            "IAEoBRILCgNNdWwYBiADKAESDgoGQWxsTXVsGAcgASgBEgsKA1dpbhgIIAEo",
            "AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Mpt2.SpinAck), global::Jili.Protocols.Mpt2.SpinAck.Parser, new[]{ "RoundQueue", "GameType", "TotalWin", "Extra", "RTP", "LID", "RID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Mpt2.RoundInfo), global::Jili.Protocols.Mpt2.RoundInfo.Parser, new[]{ "Symbol", "Mul", "FinalSymbol", "FinalMul", "CollectList", "MysteryList", "AwardDataVec", "RoundWin", "PotType", "PotList", "ReSpinRemainRound", "ReSpinTotalRound", "GetReSpin", "GetAdd", "AwardTypeFlag", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Mpt2.PotSymbol), global::Jili.Protocols.Mpt2.PotSymbol.Parser, new[]{ "Pos", "Symbol", "Mul" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Mpt2.Column), global::Jili.Protocols.Mpt2.Column.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Mpt2.ColumnM), global::Jili.Protocols.Mpt2.ColumnM.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Mpt2.Collect), global::Jili.Protocols.Mpt2.Collect.Parser, new[]{ "Pos", "CPos", "Mul", "SymbolMul" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Mpt2.Mystery), global::Jili.Protocols.Mpt2.Mystery.Parser, new[]{ "IsJP", "Pos", "Symbol", "Mul" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Mpt2.AwardData), global::Jili.Protocols.Mpt2.AwardData.Parser, new[]{ "Atype", "Index", "Count", "Symbol", "Pos", "Mul", "AllMul", "Win" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Mpt2.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      roundQueue_ = other.roundQueue_.Clone();
      gameType_ = other.gameType_;
      totalWin_ = other.totalWin_;
      extra_ = other.extra_;
      rTP_ = other.rTP_;
      lID_ = other.lID_;
      rID_ = other.rID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "RoundQueue" field.</summary>
    public const int RoundQueueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.RoundInfo> _repeated_roundQueue_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Mpt2.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.RoundInfo> roundQueue_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.RoundInfo> RoundQueue {
      get { return roundQueue_; }
    }

    /// <summary>Field number for the "GameType" field.</summary>
    public const int GameTypeFieldNumber = 2;
    private int gameType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 3;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "Extra" field.</summary>
    public const int ExtraFieldNumber = 4;
    private int extra_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Extra {
      get { return extra_; }
      set {
        extra_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 5;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    /// <summary>Field number for the "LID" field.</summary>
    public const int LIDFieldNumber = 6;
    private int lID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LID {
      get { return lID_; }
      set {
        lID_ = value;
      }
    }

    /// <summary>Field number for the "RID" field.</summary>
    public const int RIDFieldNumber = 7;
    private int rID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RID {
      get { return rID_; }
      set {
        rID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundQueue_.Equals(other.roundQueue_)) return false;
      if (GameType != other.GameType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (Extra != other.Extra) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      if (LID != other.LID) return false;
      if (RID != other.RID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundQueue_.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (Extra != 0) hash ^= Extra.GetHashCode();
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (LID != 0) hash ^= LID.GetHashCode();
      if (RID != 0) hash ^= RID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundQueue_.WriteTo(output, _repeated_roundQueue_codec);
      if (GameType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameType);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (Extra != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Extra);
      }
      if (RTP != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundQueue_.WriteTo(ref output, _repeated_roundQueue_codec);
      if (GameType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameType);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (Extra != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Extra);
      }
      if (RTP != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RTP);
      }
      if (LID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LID);
      }
      if (RID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roundQueue_.CalculateSize(_repeated_roundQueue_codec);
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (Extra != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Extra);
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (LID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LID);
      }
      if (RID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      roundQueue_.Add(other.roundQueue_);
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.Extra != 0) {
        Extra = other.Extra;
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      if (other.LID != 0) {
        LID = other.LID;
      }
      if (other.RID != 0) {
        RID = other.RID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(input, _repeated_roundQueue_codec);
            break;
          }
          case 16: {
            GameType = input.ReadInt32();
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 32: {
            Extra = input.ReadInt32();
            break;
          }
          case 41: {
            RTP = input.ReadDouble();
            break;
          }
          case 48: {
            LID = input.ReadInt32();
            break;
          }
          case 56: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(ref input, _repeated_roundQueue_codec);
            break;
          }
          case 16: {
            GameType = input.ReadInt32();
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 32: {
            Extra = input.ReadInt32();
            break;
          }
          case 41: {
            RTP = input.ReadDouble();
            break;
          }
          case 48: {
            LID = input.ReadInt32();
            break;
          }
          case 56: {
            RID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoundInfo : pb::IMessage<RoundInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Mpt2.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo(RoundInfo other) : this() {
      symbol_ = other.symbol_.Clone();
      mul_ = other.mul_.Clone();
      finalSymbol_ = other.finalSymbol_.Clone();
      finalMul_ = other.finalMul_.Clone();
      collectList_ = other.collectList_.Clone();
      mysteryList_ = other.mysteryList_.Clone();
      awardDataVec_ = other.awardDataVec_.Clone();
      roundWin_ = other.roundWin_;
      potType_ = other.potType_;
      potList_ = other.potList_.Clone();
      reSpinRemainRound_ = other.reSpinRemainRound_;
      reSpinTotalRound_ = other.reSpinTotalRound_;
      getReSpin_ = other.getReSpin_;
      getAdd_ = other.getAdd_;
      awardTypeFlag_ = other.awardTypeFlag_;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.Column> _repeated_symbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Mpt2.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.Column> symbol_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.Column> Symbol {
      get { return symbol_; }
    }

    /// <summary>Field number for the "Mul" field.</summary>
    public const int MulFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.ColumnM> _repeated_mul_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Mpt2.ColumnM.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.ColumnM> mul_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.ColumnM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.ColumnM> Mul {
      get { return mul_; }
    }

    /// <summary>Field number for the "FinalSymbol" field.</summary>
    public const int FinalSymbolFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.Column> _repeated_finalSymbol_codec
        = pb::FieldCodec.ForMessage(26, global::Jili.Protocols.Mpt2.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.Column> finalSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.Column> FinalSymbol {
      get { return finalSymbol_; }
    }

    /// <summary>Field number for the "FinalMul" field.</summary>
    public const int FinalMulFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.ColumnM> _repeated_finalMul_codec
        = pb::FieldCodec.ForMessage(34, global::Jili.Protocols.Mpt2.ColumnM.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.ColumnM> finalMul_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.ColumnM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.ColumnM> FinalMul {
      get { return finalMul_; }
    }

    /// <summary>Field number for the "CollectList" field.</summary>
    public const int CollectListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.Collect> _repeated_collectList_codec
        = pb::FieldCodec.ForMessage(42, global::Jili.Protocols.Mpt2.Collect.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.Collect> collectList_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.Collect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.Collect> CollectList {
      get { return collectList_; }
    }

    /// <summary>Field number for the "MysteryList" field.</summary>
    public const int MysteryListFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.Mystery> _repeated_mysteryList_codec
        = pb::FieldCodec.ForMessage(50, global::Jili.Protocols.Mpt2.Mystery.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.Mystery> mysteryList_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.Mystery>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.Mystery> MysteryList {
      get { return mysteryList_; }
    }

    /// <summary>Field number for the "AwardDataVec" field.</summary>
    public const int AwardDataVecFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.AwardData> _repeated_awardDataVec_codec
        = pb::FieldCodec.ForMessage(58, global::Jili.Protocols.Mpt2.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.AwardData> awardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.AwardData> AwardDataVec {
      get { return awardDataVec_; }
    }

    /// <summary>Field number for the "RoundWin" field.</summary>
    public const int RoundWinFieldNumber = 8;
    private double roundWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RoundWin {
      get { return roundWin_; }
      set {
        roundWin_ = value;
      }
    }

    /// <summary>Field number for the "PotType" field.</summary>
    public const int PotTypeFieldNumber = 9;
    private int potType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PotType {
      get { return potType_; }
      set {
        potType_ = value;
      }
    }

    /// <summary>Field number for the "PotList" field.</summary>
    public const int PotListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Mpt2.PotSymbol> _repeated_potList_codec
        = pb::FieldCodec.ForMessage(82, global::Jili.Protocols.Mpt2.PotSymbol.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Mpt2.PotSymbol> potList_ = new pbc::RepeatedField<global::Jili.Protocols.Mpt2.PotSymbol>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Mpt2.PotSymbol> PotList {
      get { return potList_; }
    }

    /// <summary>Field number for the "ReSpinRemainRound" field.</summary>
    public const int ReSpinRemainRoundFieldNumber = 11;
    private int reSpinRemainRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReSpinRemainRound {
      get { return reSpinRemainRound_; }
      set {
        reSpinRemainRound_ = value;
      }
    }

    /// <summary>Field number for the "ReSpinTotalRound" field.</summary>
    public const int ReSpinTotalRoundFieldNumber = 12;
    private int reSpinTotalRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReSpinTotalRound {
      get { return reSpinTotalRound_; }
      set {
        reSpinTotalRound_ = value;
      }
    }

    /// <summary>Field number for the "GetReSpin" field.</summary>
    public const int GetReSpinFieldNumber = 13;
    private bool getReSpin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetReSpin {
      get { return getReSpin_; }
      set {
        getReSpin_ = value;
      }
    }

    /// <summary>Field number for the "GetAdd" field.</summary>
    public const int GetAddFieldNumber = 14;
    private bool getAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetAdd {
      get { return getAdd_; }
      set {
        getAdd_ = value;
      }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 15;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 16;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!symbol_.Equals(other.symbol_)) return false;
      if(!mul_.Equals(other.mul_)) return false;
      if(!finalSymbol_.Equals(other.finalSymbol_)) return false;
      if(!finalMul_.Equals(other.finalMul_)) return false;
      if(!collectList_.Equals(other.collectList_)) return false;
      if(!mysteryList_.Equals(other.mysteryList_)) return false;
      if(!awardDataVec_.Equals(other.awardDataVec_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RoundWin, other.RoundWin)) return false;
      if (PotType != other.PotType) return false;
      if(!potList_.Equals(other.potList_)) return false;
      if (ReSpinRemainRound != other.ReSpinRemainRound) return false;
      if (ReSpinTotalRound != other.ReSpinTotalRound) return false;
      if (GetReSpin != other.GetReSpin) return false;
      if (GetAdd != other.GetAdd) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= symbol_.GetHashCode();
      hash ^= mul_.GetHashCode();
      hash ^= finalSymbol_.GetHashCode();
      hash ^= finalMul_.GetHashCode();
      hash ^= collectList_.GetHashCode();
      hash ^= mysteryList_.GetHashCode();
      hash ^= awardDataVec_.GetHashCode();
      if (RoundWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RoundWin);
      if (PotType != 0) hash ^= PotType.GetHashCode();
      hash ^= potList_.GetHashCode();
      if (ReSpinRemainRound != 0) hash ^= ReSpinRemainRound.GetHashCode();
      if (ReSpinTotalRound != 0) hash ^= ReSpinTotalRound.GetHashCode();
      if (GetReSpin != false) hash ^= GetReSpin.GetHashCode();
      if (GetAdd != false) hash ^= GetAdd.GetHashCode();
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      symbol_.WriteTo(output, _repeated_symbol_codec);
      mul_.WriteTo(output, _repeated_mul_codec);
      finalSymbol_.WriteTo(output, _repeated_finalSymbol_codec);
      finalMul_.WriteTo(output, _repeated_finalMul_codec);
      collectList_.WriteTo(output, _repeated_collectList_codec);
      mysteryList_.WriteTo(output, _repeated_mysteryList_codec);
      awardDataVec_.WriteTo(output, _repeated_awardDataVec_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(RoundWin);
      }
      if (PotType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PotType);
      }
      potList_.WriteTo(output, _repeated_potList_codec);
      if (ReSpinRemainRound != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ReSpinRemainRound);
      }
      if (ReSpinTotalRound != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ReSpinTotalRound);
      }
      if (GetReSpin != false) {
        output.WriteRawTag(104);
        output.WriteBool(GetReSpin);
      }
      if (GetAdd != false) {
        output.WriteRawTag(112);
        output.WriteBool(GetAdd);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AwardTypeFlag);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      symbol_.WriteTo(ref output, _repeated_symbol_codec);
      mul_.WriteTo(ref output, _repeated_mul_codec);
      finalSymbol_.WriteTo(ref output, _repeated_finalSymbol_codec);
      finalMul_.WriteTo(ref output, _repeated_finalMul_codec);
      collectList_.WriteTo(ref output, _repeated_collectList_codec);
      mysteryList_.WriteTo(ref output, _repeated_mysteryList_codec);
      awardDataVec_.WriteTo(ref output, _repeated_awardDataVec_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(RoundWin);
      }
      if (PotType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PotType);
      }
      potList_.WriteTo(ref output, _repeated_potList_codec);
      if (ReSpinRemainRound != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ReSpinRemainRound);
      }
      if (ReSpinTotalRound != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ReSpinTotalRound);
      }
      if (GetReSpin != false) {
        output.WriteRawTag(104);
        output.WriteBool(GetReSpin);
      }
      if (GetAdd != false) {
        output.WriteRawTag(112);
        output.WriteBool(GetAdd);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AwardTypeFlag);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += symbol_.CalculateSize(_repeated_symbol_codec);
      size += mul_.CalculateSize(_repeated_mul_codec);
      size += finalSymbol_.CalculateSize(_repeated_finalSymbol_codec);
      size += finalMul_.CalculateSize(_repeated_finalMul_codec);
      size += collectList_.CalculateSize(_repeated_collectList_codec);
      size += mysteryList_.CalculateSize(_repeated_mysteryList_codec);
      size += awardDataVec_.CalculateSize(_repeated_awardDataVec_codec);
      if (RoundWin != 0D) {
        size += 1 + 8;
      }
      if (PotType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PotType);
      }
      size += potList_.CalculateSize(_repeated_potList_codec);
      if (ReSpinRemainRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReSpinRemainRound);
      }
      if (ReSpinTotalRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReSpinTotalRound);
      }
      if (GetReSpin != false) {
        size += 1 + 1;
      }
      if (GetAdd != false) {
        size += 1 + 1;
      }
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (MaxFlag != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      symbol_.Add(other.symbol_);
      mul_.Add(other.mul_);
      finalSymbol_.Add(other.finalSymbol_);
      finalMul_.Add(other.finalMul_);
      collectList_.Add(other.collectList_);
      mysteryList_.Add(other.mysteryList_);
      awardDataVec_.Add(other.awardDataVec_);
      if (other.RoundWin != 0D) {
        RoundWin = other.RoundWin;
      }
      if (other.PotType != 0) {
        PotType = other.PotType;
      }
      potList_.Add(other.potList_);
      if (other.ReSpinRemainRound != 0) {
        ReSpinRemainRound = other.ReSpinRemainRound;
      }
      if (other.ReSpinTotalRound != 0) {
        ReSpinTotalRound = other.ReSpinTotalRound;
      }
      if (other.GetReSpin != false) {
        GetReSpin = other.GetReSpin;
      }
      if (other.GetAdd != false) {
        GetAdd = other.GetAdd;
      }
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            symbol_.AddEntriesFrom(input, _repeated_symbol_codec);
            break;
          }
          case 18: {
            mul_.AddEntriesFrom(input, _repeated_mul_codec);
            break;
          }
          case 26: {
            finalSymbol_.AddEntriesFrom(input, _repeated_finalSymbol_codec);
            break;
          }
          case 34: {
            finalMul_.AddEntriesFrom(input, _repeated_finalMul_codec);
            break;
          }
          case 42: {
            collectList_.AddEntriesFrom(input, _repeated_collectList_codec);
            break;
          }
          case 50: {
            mysteryList_.AddEntriesFrom(input, _repeated_mysteryList_codec);
            break;
          }
          case 58: {
            awardDataVec_.AddEntriesFrom(input, _repeated_awardDataVec_codec);
            break;
          }
          case 65: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 72: {
            PotType = input.ReadInt32();
            break;
          }
          case 82: {
            potList_.AddEntriesFrom(input, _repeated_potList_codec);
            break;
          }
          case 88: {
            ReSpinRemainRound = input.ReadInt32();
            break;
          }
          case 96: {
            ReSpinTotalRound = input.ReadInt32();
            break;
          }
          case 104: {
            GetReSpin = input.ReadBool();
            break;
          }
          case 112: {
            GetAdd = input.ReadBool();
            break;
          }
          case 120: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 128: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            symbol_.AddEntriesFrom(ref input, _repeated_symbol_codec);
            break;
          }
          case 18: {
            mul_.AddEntriesFrom(ref input, _repeated_mul_codec);
            break;
          }
          case 26: {
            finalSymbol_.AddEntriesFrom(ref input, _repeated_finalSymbol_codec);
            break;
          }
          case 34: {
            finalMul_.AddEntriesFrom(ref input, _repeated_finalMul_codec);
            break;
          }
          case 42: {
            collectList_.AddEntriesFrom(ref input, _repeated_collectList_codec);
            break;
          }
          case 50: {
            mysteryList_.AddEntriesFrom(ref input, _repeated_mysteryList_codec);
            break;
          }
          case 58: {
            awardDataVec_.AddEntriesFrom(ref input, _repeated_awardDataVec_codec);
            break;
          }
          case 65: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 72: {
            PotType = input.ReadInt32();
            break;
          }
          case 82: {
            potList_.AddEntriesFrom(ref input, _repeated_potList_codec);
            break;
          }
          case 88: {
            ReSpinRemainRound = input.ReadInt32();
            break;
          }
          case 96: {
            ReSpinTotalRound = input.ReadInt32();
            break;
          }
          case 104: {
            GetReSpin = input.ReadBool();
            break;
          }
          case 112: {
            GetAdd = input.ReadBool();
            break;
          }
          case 120: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 128: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PotSymbol : pb::IMessage<PotSymbol>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PotSymbol> _parser = new pb::MessageParser<PotSymbol>(() => new PotSymbol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PotSymbol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Mpt2.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PotSymbol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PotSymbol(PotSymbol other) : this() {
      pos_ = other.pos_;
      symbol_ = other.symbol_;
      mul_ = other.mul_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PotSymbol Clone() {
      return new PotSymbol(this);
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Mul" field.</summary>
    public const int MulFieldNumber = 3;
    private double mul_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mul {
      get { return mul_; }
      set {
        mul_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PotSymbol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PotSymbol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if (Symbol != other.Symbol) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mul, other.Mul)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Mul != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mul);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Symbol != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Symbol);
      }
      if (Mul != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mul);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Symbol != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Symbol);
      }
      if (Mul != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mul);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Mul != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PotSymbol other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Mul != 0D) {
        Mul = other.Mul;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 16: {
            Symbol = input.ReadInt32();
            break;
          }
          case 25: {
            Mul = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 16: {
            Symbol = input.ReadInt32();
            break;
          }
          case 25: {
            Mul = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Mpt2.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_col_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> col_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ColumnM : pb::IMessage<ColumnM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnM> _parser = new pb::MessageParser<ColumnM>(() => new ColumnM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Mpt2.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnM(ColumnM other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnM Clone() {
      return new ColumnM(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_col_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> col_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColumnM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnM other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Collect : pb::IMessage<Collect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Collect> _parser = new pb::MessageParser<Collect>(() => new Collect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Collect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Mpt2.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Collect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Collect(Collect other) : this() {
      pos_ = other.pos_;
      cPos_ = other.cPos_.Clone();
      mul_ = other.mul_;
      symbolMul_ = other.symbolMul_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Collect Clone() {
      return new Collect(this);
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "CPos" field.</summary>
    public const int CPosFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_cPos_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> cPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CPos {
      get { return cPos_; }
    }

    /// <summary>Field number for the "Mul" field.</summary>
    public const int MulFieldNumber = 3;
    private double mul_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mul {
      get { return mul_; }
      set {
        mul_ = value;
      }
    }

    /// <summary>Field number for the "SymbolMul" field.</summary>
    public const int SymbolMulFieldNumber = 4;
    private double symbolMul_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SymbolMul {
      get { return symbolMul_; }
      set {
        symbolMul_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Collect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Collect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if(!cPos_.Equals(other.cPos_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mul, other.Mul)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SymbolMul, other.SymbolMul)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      hash ^= cPos_.GetHashCode();
      if (Mul != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mul);
      if (SymbolMul != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SymbolMul);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      cPos_.WriteTo(output, _repeated_cPos_codec);
      if (Mul != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mul);
      }
      if (SymbolMul != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(SymbolMul);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      cPos_.WriteTo(ref output, _repeated_cPos_codec);
      if (Mul != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mul);
      }
      if (SymbolMul != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(SymbolMul);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      size += cPos_.CalculateSize(_repeated_cPos_codec);
      if (Mul != 0D) {
        size += 1 + 8;
      }
      if (SymbolMul != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Collect other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      cPos_.Add(other.cPos_);
      if (other.Mul != 0D) {
        Mul = other.Mul;
      }
      if (other.SymbolMul != 0D) {
        SymbolMul = other.SymbolMul;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            cPos_.AddEntriesFrom(input, _repeated_cPos_codec);
            break;
          }
          case 25: {
            Mul = input.ReadDouble();
            break;
          }
          case 33: {
            SymbolMul = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            cPos_.AddEntriesFrom(ref input, _repeated_cPos_codec);
            break;
          }
          case 25: {
            Mul = input.ReadDouble();
            break;
          }
          case 33: {
            SymbolMul = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Mystery : pb::IMessage<Mystery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Mystery> _parser = new pb::MessageParser<Mystery>(() => new Mystery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Mystery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Mpt2.SpinAckReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mystery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mystery(Mystery other) : this() {
      isJP_ = other.isJP_;
      pos_ = other.pos_;
      symbol_ = other.symbol_;
      mul_ = other.mul_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mystery Clone() {
      return new Mystery(this);
    }

    /// <summary>Field number for the "IsJP" field.</summary>
    public const int IsJPFieldNumber = 1;
    private bool isJP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsJP {
      get { return isJP_; }
      set {
        isJP_ = value;
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 2;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Mul" field.</summary>
    public const int MulFieldNumber = 4;
    private double mul_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mul {
      get { return mul_; }
      set {
        mul_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Mystery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Mystery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsJP != other.IsJP) return false;
      if (Pos != other.Pos) return false;
      if (Symbol != other.Symbol) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mul, other.Mul)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsJP != false) hash ^= IsJP.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Mul != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mul);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsJP != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsJP);
      }
      if (Pos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Pos);
      }
      if (Symbol != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Symbol);
      }
      if (Mul != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Mul);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsJP != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsJP);
      }
      if (Pos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Pos);
      }
      if (Symbol != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Symbol);
      }
      if (Mul != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Mul);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsJP != false) {
        size += 1 + 1;
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Mul != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Mystery other) {
      if (other == null) {
        return;
      }
      if (other.IsJP != false) {
        IsJP = other.IsJP;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Mul != 0D) {
        Mul = other.Mul;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsJP = input.ReadBool();
            break;
          }
          case 16: {
            Pos = input.ReadInt32();
            break;
          }
          case 24: {
            Symbol = input.ReadInt32();
            break;
          }
          case 33: {
            Mul = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsJP = input.ReadBool();
            break;
          }
          case 16: {
            Pos = input.ReadInt32();
            break;
          }
          case 24: {
            Symbol = input.ReadInt32();
            break;
          }
          case 33: {
            Mul = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Mpt2.SpinAckReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      atype_ = other.atype_;
      index_ = other.index_;
      count_ = other.count_;
      symbol_ = other.symbol_.Clone();
      pos_ = other.pos_;
      mul_ = other.mul_.Clone();
      allMul_ = other.allMul_;
      win_ = other.win_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "Atype" field.</summary>
    public const int AtypeFieldNumber = 1;
    private int atype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Atype {
      get { return atype_; }
      set {
        atype_ = value;
      }
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 3;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_symbol_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> symbol_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Symbol {
      get { return symbol_; }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 5;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "Mul" field.</summary>
    public const int MulFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_mul_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> mul_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Mul {
      get { return mul_; }
    }

    /// <summary>Field number for the "AllMul" field.</summary>
    public const int AllMulFieldNumber = 7;
    private double allMul_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AllMul {
      get { return allMul_; }
      set {
        allMul_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 8;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Atype != other.Atype) return false;
      if (Index != other.Index) return false;
      if (Count != other.Count) return false;
      if(!symbol_.Equals(other.symbol_)) return false;
      if (Pos != other.Pos) return false;
      if(!mul_.Equals(other.mul_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AllMul, other.AllMul)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Atype != 0) hash ^= Atype.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      hash ^= symbol_.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      hash ^= mul_.GetHashCode();
      if (AllMul != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AllMul);
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Atype != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Atype);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      symbol_.WriteTo(output, _repeated_symbol_codec);
      if (Pos != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Pos);
      }
      mul_.WriteTo(output, _repeated_mul_codec);
      if (AllMul != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(AllMul);
      }
      if (Win != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Atype != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Atype);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      symbol_.WriteTo(ref output, _repeated_symbol_codec);
      if (Pos != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Pos);
      }
      mul_.WriteTo(ref output, _repeated_mul_codec);
      if (AllMul != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(AllMul);
      }
      if (Win != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Atype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Atype);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      size += symbol_.CalculateSize(_repeated_symbol_codec);
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      size += mul_.CalculateSize(_repeated_mul_codec);
      if (AllMul != 0D) {
        size += 1 + 8;
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.Atype != 0) {
        Atype = other.Atype;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      symbol_.Add(other.symbol_);
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      mul_.Add(other.mul_);
      if (other.AllMul != 0D) {
        AllMul = other.AllMul;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Atype = input.ReadInt32();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            symbol_.AddEntriesFrom(input, _repeated_symbol_codec);
            break;
          }
          case 40: {
            Pos = input.ReadInt32();
            break;
          }
          case 50:
          case 49: {
            mul_.AddEntriesFrom(input, _repeated_mul_codec);
            break;
          }
          case 57: {
            AllMul = input.ReadDouble();
            break;
          }
          case 65: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Atype = input.ReadInt32();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            symbol_.AddEntriesFrom(ref input, _repeated_symbol_codec);
            break;
          }
          case 40: {
            Pos = input.ReadInt32();
            break;
          }
          case 50:
          case 49: {
            mul_.AddEntriesFrom(ref input, _repeated_mul_codec);
            break;
          }
          case 57: {
            AllMul = input.ReadDouble();
            break;
          }
          case 65: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
