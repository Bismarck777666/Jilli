// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Petra {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhRKaWxpLlByb3RvY29scy5QZXRyYSK2AQoHU3Bp",
            "bkFjaxIzCgpSb3VuZFF1ZXVlGAEgAygLMh8uSmlsaS5Qcm90b2NvbHMuUGV0",
            "cmEuUm91bmRJbmZvEhQKDEZyZWVUb3RhbFdpbhgCIAEoARIQCghUb3RhbFdp",
            "bhgDIAEoARIRCglTaG93SW5kZXgYBCABKAkSEAoITm93TW9uZXkYBSABKAES",
            "DwoHQWNrVHlwZRgGIAEoBRILCgNSVFAYByABKAESCwoDQmV0GAggASgBIscB",
            "CglSb3VuZEluZm8SPAoOQ29tYm9TdGFnZURhdGEYASADKAsyJC5KaWxpLlBy",
            "b3RvY29scy5QZXRyYS5Db21ib1N0YWdlSW5mbxIQCghSb3VuZFdpbhgCIAEo",
            "ARIVCg1Bd2FyZFR5cGVGbGFnGAMgASgFEhcKD0ZyZWVSZW1haW5Sb3VuZBgE",
            "IAEoBRIWCg5GcmVlVG90YWxSb3VuZBgFIAEoBRIRCglBZGRSb3VuZHMYBiAB",
            "KAUSDwoHTWF4RmxhZxgHIAEoCCLXAwoOQ29tYm9TdGFnZUluZm8SNgoQQ29t",
            "Ym9TdGFnZVN5bWJvbBgBIAMoCzIcLkppbGkuUHJvdG9jb2xzLlBldHJhLkNv",
            "bHVtbhIVCg1Db21ib1N0YWdlV2luGAIgASgBEhYKDkNvbWJvU3RhZ2VNdWx0",
            "GAMgASgBEjUKDEF3YXJkRGF0YVZlYxgEIAMoCzIfLkppbGkuUHJvdG9jb2xz",
            "LlBldHJhLkF3YXJkRGF0YRIWCg5IaXRTbGF0ZVBvc1ZlYxgFIAMoBRIxCgtG",
            "aWxsU3ltYm9scxgGIAMoCzIcLkppbGkuUHJvdG9jb2xzLlBldHJhLkNvbHVt",
            "bhIzCg1DaGFuZ2VTeW1ib2xzGAcgAygLMhwuSmlsaS5Qcm90b2NvbHMuUGV0",
            "cmEuQ29sdW1uEhEKCUFkZFJvdW5kcxgIIAEoBRIQCghBZGRNdWx0cxgJIAEo",
            "BRIQCghGR0NoYW5nZRgKIAMoBRIMCgRIb2x5GAsgAygFEhYKDkZHQ2hhbmdl",
            "U3ltYm9sGAwgASgFEjkKE0NvbWJvU3RhZ2VTeW1ib2xMb2cYDSADKAsyHC5K",
            "aWxpLlByb3RvY29scy5QZXRyYS5Db2x1bW4SDwoHTWF4RmxhZxgOIAEoCCIV",
            "CgZDb2x1bW4SCwoDQ29sGAEgAygFIlgKCUF3YXJkRGF0YRIOCgZTeW1ib2wY",
            "ASABKAUSDQoFQ291bnQYAiABKAUSDwoHTGluZU51bRgDIAEoBRILCgNXaW4Y",
            "BCABKAESDgoGUG9zVmVjGAUgAygFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Petra.SpinAck), global::Jili.Protocols.Petra.SpinAck.Parser, new[]{ "RoundQueue", "FreeTotalWin", "TotalWin", "ShowIndex", "NowMoney", "AckType", "RTP", "Bet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Petra.RoundInfo), global::Jili.Protocols.Petra.RoundInfo.Parser, new[]{ "ComboStageData", "RoundWin", "AwardTypeFlag", "FreeRemainRound", "FreeTotalRound", "AddRounds", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Petra.ComboStageInfo), global::Jili.Protocols.Petra.ComboStageInfo.Parser, new[]{ "ComboStageSymbol", "ComboStageWin", "ComboStageMult", "AwardDataVec", "HitSlatePosVec", "FillSymbols", "ChangeSymbols", "AddRounds", "AddMults", "FGChange", "Holy", "FGChangeSymbol", "ComboStageSymbolLog", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Petra.Column), global::Jili.Protocols.Petra.Column.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Petra.AwardData), global::Jili.Protocols.Petra.AwardData.Parser, new[]{ "Symbol", "Count", "LineNum", "Win", "PosVec" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Petra.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      roundQueue_ = other.roundQueue_.Clone();
      freeTotalWin_ = other.freeTotalWin_;
      totalWin_ = other.totalWin_;
      showIndex_ = other.showIndex_;
      nowMoney_ = other.nowMoney_;
      ackType_ = other.ackType_;
      rTP_ = other.rTP_;
      bet_ = other.bet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "RoundQueue" field.</summary>
    public const int RoundQueueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Petra.RoundInfo> _repeated_roundQueue_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Petra.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Petra.RoundInfo> roundQueue_ = new pbc::RepeatedField<global::Jili.Protocols.Petra.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Petra.RoundInfo> RoundQueue {
      get { return roundQueue_; }
    }

    /// <summary>Field number for the "FreeTotalWin" field.</summary>
    public const int FreeTotalWinFieldNumber = 2;
    private double freeTotalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FreeTotalWin {
      get { return freeTotalWin_; }
      set {
        freeTotalWin_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 3;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "ShowIndex" field.</summary>
    public const int ShowIndexFieldNumber = 4;
    private string showIndex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShowIndex {
      get { return showIndex_; }
      set {
        showIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NowMoney" field.</summary>
    public const int NowMoneyFieldNumber = 5;
    private double nowMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NowMoney {
      get { return nowMoney_; }
      set {
        nowMoney_ = value;
      }
    }

    /// <summary>Field number for the "AckType" field.</summary>
    public const int AckTypeFieldNumber = 6;
    private int ackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 7;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    /// <summary>Field number for the "Bet" field.</summary>
    public const int BetFieldNumber = 8;
    private double bet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundQueue_.Equals(other.roundQueue_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FreeTotalWin, other.FreeTotalWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (ShowIndex != other.ShowIndex) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NowMoney, other.NowMoney)) return false;
      if (AckType != other.AckType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bet, other.Bet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundQueue_.GetHashCode();
      if (FreeTotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FreeTotalWin);
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (ShowIndex.Length != 0) hash ^= ShowIndex.GetHashCode();
      if (NowMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NowMoney);
      if (AckType != 0) hash ^= AckType.GetHashCode();
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (Bet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bet);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundQueue_.WriteTo(output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(RTP);
      }
      if (Bet != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Bet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundQueue_.WriteTo(ref output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AckType);
      }
      if (RTP != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(RTP);
      }
      if (Bet != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Bet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roundQueue_.CalculateSize(_repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        size += 1 + 8;
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (ShowIndex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowIndex);
      }
      if (NowMoney != 0D) {
        size += 1 + 8;
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckType);
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (Bet != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      roundQueue_.Add(other.roundQueue_);
      if (other.FreeTotalWin != 0D) {
        FreeTotalWin = other.FreeTotalWin;
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.ShowIndex.Length != 0) {
        ShowIndex = other.ShowIndex;
      }
      if (other.NowMoney != 0D) {
        NowMoney = other.NowMoney;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      if (other.Bet != 0D) {
        Bet = other.Bet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 34: {
            ShowIndex = input.ReadString();
            break;
          }
          case 41: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 48: {
            AckType = input.ReadInt32();
            break;
          }
          case 57: {
            RTP = input.ReadDouble();
            break;
          }
          case 65: {
            Bet = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(ref input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 34: {
            ShowIndex = input.ReadString();
            break;
          }
          case 41: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 48: {
            AckType = input.ReadInt32();
            break;
          }
          case 57: {
            RTP = input.ReadDouble();
            break;
          }
          case 65: {
            Bet = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoundInfo : pb::IMessage<RoundInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Petra.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo(RoundInfo other) : this() {
      comboStageData_ = other.comboStageData_.Clone();
      roundWin_ = other.roundWin_;
      awardTypeFlag_ = other.awardTypeFlag_;
      freeRemainRound_ = other.freeRemainRound_;
      freeTotalRound_ = other.freeTotalRound_;
      addRounds_ = other.addRounds_;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "ComboStageData" field.</summary>
    public const int ComboStageDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Petra.ComboStageInfo> _repeated_comboStageData_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Petra.ComboStageInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Petra.ComboStageInfo> comboStageData_ = new pbc::RepeatedField<global::Jili.Protocols.Petra.ComboStageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Petra.ComboStageInfo> ComboStageData {
      get { return comboStageData_; }
    }

    /// <summary>Field number for the "RoundWin" field.</summary>
    public const int RoundWinFieldNumber = 2;
    private double roundWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RoundWin {
      get { return roundWin_; }
      set {
        roundWin_ = value;
      }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 3;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "FreeRemainRound" field.</summary>
    public const int FreeRemainRoundFieldNumber = 4;
    private int freeRemainRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeRemainRound {
      get { return freeRemainRound_; }
      set {
        freeRemainRound_ = value;
      }
    }

    /// <summary>Field number for the "FreeTotalRound" field.</summary>
    public const int FreeTotalRoundFieldNumber = 5;
    private int freeTotalRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeTotalRound {
      get { return freeTotalRound_; }
      set {
        freeTotalRound_ = value;
      }
    }

    /// <summary>Field number for the "AddRounds" field.</summary>
    public const int AddRoundsFieldNumber = 6;
    private int addRounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddRounds {
      get { return addRounds_; }
      set {
        addRounds_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 7;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comboStageData_.Equals(other.comboStageData_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RoundWin, other.RoundWin)) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (FreeRemainRound != other.FreeRemainRound) return false;
      if (FreeTotalRound != other.FreeTotalRound) return false;
      if (AddRounds != other.AddRounds) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comboStageData_.GetHashCode();
      if (RoundWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RoundWin);
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (FreeRemainRound != 0) hash ^= FreeRemainRound.GetHashCode();
      if (FreeTotalRound != 0) hash ^= FreeTotalRound.GetHashCode();
      if (AddRounds != 0) hash ^= AddRounds.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comboStageData_.WriteTo(output, _repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RoundWin);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeRemainRound);
      }
      if (FreeTotalRound != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeTotalRound);
      }
      if (AddRounds != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AddRounds);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(56);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comboStageData_.WriteTo(ref output, _repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RoundWin);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeRemainRound);
      }
      if (FreeTotalRound != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeTotalRound);
      }
      if (AddRounds != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AddRounds);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(56);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += comboStageData_.CalculateSize(_repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        size += 1 + 8;
      }
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeRemainRound);
      }
      if (FreeTotalRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeTotalRound);
      }
      if (AddRounds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddRounds);
      }
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      comboStageData_.Add(other.comboStageData_);
      if (other.RoundWin != 0D) {
        RoundWin = other.RoundWin;
      }
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.FreeRemainRound != 0) {
        FreeRemainRound = other.FreeRemainRound;
      }
      if (other.FreeTotalRound != 0) {
        FreeTotalRound = other.FreeTotalRound;
      }
      if (other.AddRounds != 0) {
        AddRounds = other.AddRounds;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comboStageData_.AddEntriesFrom(input, _repeated_comboStageData_codec);
            break;
          }
          case 17: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 24: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 32: {
            FreeRemainRound = input.ReadInt32();
            break;
          }
          case 40: {
            FreeTotalRound = input.ReadInt32();
            break;
          }
          case 48: {
            AddRounds = input.ReadInt32();
            break;
          }
          case 56: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comboStageData_.AddEntriesFrom(ref input, _repeated_comboStageData_codec);
            break;
          }
          case 17: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 24: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 32: {
            FreeRemainRound = input.ReadInt32();
            break;
          }
          case 40: {
            FreeTotalRound = input.ReadInt32();
            break;
          }
          case 48: {
            AddRounds = input.ReadInt32();
            break;
          }
          case 56: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ComboStageInfo : pb::IMessage<ComboStageInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComboStageInfo> _parser = new pb::MessageParser<ComboStageInfo>(() => new ComboStageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComboStageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Petra.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo(ComboStageInfo other) : this() {
      comboStageSymbol_ = other.comboStageSymbol_.Clone();
      comboStageWin_ = other.comboStageWin_;
      comboStageMult_ = other.comboStageMult_;
      awardDataVec_ = other.awardDataVec_.Clone();
      hitSlatePosVec_ = other.hitSlatePosVec_.Clone();
      fillSymbols_ = other.fillSymbols_.Clone();
      changeSymbols_ = other.changeSymbols_.Clone();
      addRounds_ = other.addRounds_;
      addMults_ = other.addMults_;
      fGChange_ = other.fGChange_.Clone();
      holy_ = other.holy_.Clone();
      fGChangeSymbol_ = other.fGChangeSymbol_;
      comboStageSymbolLog_ = other.comboStageSymbolLog_.Clone();
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo Clone() {
      return new ComboStageInfo(this);
    }

    /// <summary>Field number for the "ComboStageSymbol" field.</summary>
    public const int ComboStageSymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Petra.Column> _repeated_comboStageSymbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Petra.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Petra.Column> comboStageSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Petra.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Petra.Column> ComboStageSymbol {
      get { return comboStageSymbol_; }
    }

    /// <summary>Field number for the "ComboStageWin" field.</summary>
    public const int ComboStageWinFieldNumber = 2;
    private double comboStageWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ComboStageWin {
      get { return comboStageWin_; }
      set {
        comboStageWin_ = value;
      }
    }

    /// <summary>Field number for the "ComboStageMult" field.</summary>
    public const int ComboStageMultFieldNumber = 3;
    private double comboStageMult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ComboStageMult {
      get { return comboStageMult_; }
      set {
        comboStageMult_ = value;
      }
    }

    /// <summary>Field number for the "AwardDataVec" field.</summary>
    public const int AwardDataVecFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Petra.AwardData> _repeated_awardDataVec_codec
        = pb::FieldCodec.ForMessage(34, global::Jili.Protocols.Petra.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Petra.AwardData> awardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Petra.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Petra.AwardData> AwardDataVec {
      get { return awardDataVec_; }
    }

    /// <summary>Field number for the "HitSlatePosVec" field.</summary>
    public const int HitSlatePosVecFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_hitSlatePosVec_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> hitSlatePosVec_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> HitSlatePosVec {
      get { return hitSlatePosVec_; }
    }

    /// <summary>Field number for the "FillSymbols" field.</summary>
    public const int FillSymbolsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Petra.Column> _repeated_fillSymbols_codec
        = pb::FieldCodec.ForMessage(50, global::Jili.Protocols.Petra.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Petra.Column> fillSymbols_ = new pbc::RepeatedField<global::Jili.Protocols.Petra.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Petra.Column> FillSymbols {
      get { return fillSymbols_; }
    }

    /// <summary>Field number for the "ChangeSymbols" field.</summary>
    public const int ChangeSymbolsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Petra.Column> _repeated_changeSymbols_codec
        = pb::FieldCodec.ForMessage(58, global::Jili.Protocols.Petra.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Petra.Column> changeSymbols_ = new pbc::RepeatedField<global::Jili.Protocols.Petra.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Petra.Column> ChangeSymbols {
      get { return changeSymbols_; }
    }

    /// <summary>Field number for the "AddRounds" field.</summary>
    public const int AddRoundsFieldNumber = 8;
    private int addRounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddRounds {
      get { return addRounds_; }
      set {
        addRounds_ = value;
      }
    }

    /// <summary>Field number for the "AddMults" field.</summary>
    public const int AddMultsFieldNumber = 9;
    private int addMults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddMults {
      get { return addMults_; }
      set {
        addMults_ = value;
      }
    }

    /// <summary>Field number for the "FGChange" field.</summary>
    public const int FGChangeFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_fGChange_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> fGChange_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> FGChange {
      get { return fGChange_; }
    }

    /// <summary>Field number for the "Holy" field.</summary>
    public const int HolyFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_holy_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> holy_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Holy {
      get { return holy_; }
    }

    /// <summary>Field number for the "FGChangeSymbol" field.</summary>
    public const int FGChangeSymbolFieldNumber = 12;
    private int fGChangeSymbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FGChangeSymbol {
      get { return fGChangeSymbol_; }
      set {
        fGChangeSymbol_ = value;
      }
    }

    /// <summary>Field number for the "ComboStageSymbolLog" field.</summary>
    public const int ComboStageSymbolLogFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Petra.Column> _repeated_comboStageSymbolLog_codec
        = pb::FieldCodec.ForMessage(106, global::Jili.Protocols.Petra.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Petra.Column> comboStageSymbolLog_ = new pbc::RepeatedField<global::Jili.Protocols.Petra.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Petra.Column> ComboStageSymbolLog {
      get { return comboStageSymbolLog_; }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 14;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComboStageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComboStageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comboStageSymbol_.Equals(other.comboStageSymbol_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ComboStageWin, other.ComboStageWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ComboStageMult, other.ComboStageMult)) return false;
      if(!awardDataVec_.Equals(other.awardDataVec_)) return false;
      if(!hitSlatePosVec_.Equals(other.hitSlatePosVec_)) return false;
      if(!fillSymbols_.Equals(other.fillSymbols_)) return false;
      if(!changeSymbols_.Equals(other.changeSymbols_)) return false;
      if (AddRounds != other.AddRounds) return false;
      if (AddMults != other.AddMults) return false;
      if(!fGChange_.Equals(other.fGChange_)) return false;
      if(!holy_.Equals(other.holy_)) return false;
      if (FGChangeSymbol != other.FGChangeSymbol) return false;
      if(!comboStageSymbolLog_.Equals(other.comboStageSymbolLog_)) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comboStageSymbol_.GetHashCode();
      if (ComboStageWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ComboStageWin);
      if (ComboStageMult != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ComboStageMult);
      hash ^= awardDataVec_.GetHashCode();
      hash ^= hitSlatePosVec_.GetHashCode();
      hash ^= fillSymbols_.GetHashCode();
      hash ^= changeSymbols_.GetHashCode();
      if (AddRounds != 0) hash ^= AddRounds.GetHashCode();
      if (AddMults != 0) hash ^= AddMults.GetHashCode();
      hash ^= fGChange_.GetHashCode();
      hash ^= holy_.GetHashCode();
      if (FGChangeSymbol != 0) hash ^= FGChangeSymbol.GetHashCode();
      hash ^= comboStageSymbolLog_.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comboStageSymbol_.WriteTo(output, _repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ComboStageWin);
      }
      if (ComboStageMult != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ComboStageMult);
      }
      awardDataVec_.WriteTo(output, _repeated_awardDataVec_codec);
      hitSlatePosVec_.WriteTo(output, _repeated_hitSlatePosVec_codec);
      fillSymbols_.WriteTo(output, _repeated_fillSymbols_codec);
      changeSymbols_.WriteTo(output, _repeated_changeSymbols_codec);
      if (AddRounds != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AddRounds);
      }
      if (AddMults != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AddMults);
      }
      fGChange_.WriteTo(output, _repeated_fGChange_codec);
      holy_.WriteTo(output, _repeated_holy_codec);
      if (FGChangeSymbol != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(FGChangeSymbol);
      }
      comboStageSymbolLog_.WriteTo(output, _repeated_comboStageSymbolLog_codec);
      if (MaxFlag != false) {
        output.WriteRawTag(112);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comboStageSymbol_.WriteTo(ref output, _repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ComboStageWin);
      }
      if (ComboStageMult != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ComboStageMult);
      }
      awardDataVec_.WriteTo(ref output, _repeated_awardDataVec_codec);
      hitSlatePosVec_.WriteTo(ref output, _repeated_hitSlatePosVec_codec);
      fillSymbols_.WriteTo(ref output, _repeated_fillSymbols_codec);
      changeSymbols_.WriteTo(ref output, _repeated_changeSymbols_codec);
      if (AddRounds != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AddRounds);
      }
      if (AddMults != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AddMults);
      }
      fGChange_.WriteTo(ref output, _repeated_fGChange_codec);
      holy_.WriteTo(ref output, _repeated_holy_codec);
      if (FGChangeSymbol != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(FGChangeSymbol);
      }
      comboStageSymbolLog_.WriteTo(ref output, _repeated_comboStageSymbolLog_codec);
      if (MaxFlag != false) {
        output.WriteRawTag(112);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += comboStageSymbol_.CalculateSize(_repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        size += 1 + 8;
      }
      if (ComboStageMult != 0D) {
        size += 1 + 8;
      }
      size += awardDataVec_.CalculateSize(_repeated_awardDataVec_codec);
      size += hitSlatePosVec_.CalculateSize(_repeated_hitSlatePosVec_codec);
      size += fillSymbols_.CalculateSize(_repeated_fillSymbols_codec);
      size += changeSymbols_.CalculateSize(_repeated_changeSymbols_codec);
      if (AddRounds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddRounds);
      }
      if (AddMults != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddMults);
      }
      size += fGChange_.CalculateSize(_repeated_fGChange_codec);
      size += holy_.CalculateSize(_repeated_holy_codec);
      if (FGChangeSymbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FGChangeSymbol);
      }
      size += comboStageSymbolLog_.CalculateSize(_repeated_comboStageSymbolLog_codec);
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComboStageInfo other) {
      if (other == null) {
        return;
      }
      comboStageSymbol_.Add(other.comboStageSymbol_);
      if (other.ComboStageWin != 0D) {
        ComboStageWin = other.ComboStageWin;
      }
      if (other.ComboStageMult != 0D) {
        ComboStageMult = other.ComboStageMult;
      }
      awardDataVec_.Add(other.awardDataVec_);
      hitSlatePosVec_.Add(other.hitSlatePosVec_);
      fillSymbols_.Add(other.fillSymbols_);
      changeSymbols_.Add(other.changeSymbols_);
      if (other.AddRounds != 0) {
        AddRounds = other.AddRounds;
      }
      if (other.AddMults != 0) {
        AddMults = other.AddMults;
      }
      fGChange_.Add(other.fGChange_);
      holy_.Add(other.holy_);
      if (other.FGChangeSymbol != 0) {
        FGChangeSymbol = other.FGChangeSymbol;
      }
      comboStageSymbolLog_.Add(other.comboStageSymbolLog_);
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comboStageSymbol_.AddEntriesFrom(input, _repeated_comboStageSymbol_codec);
            break;
          }
          case 17: {
            ComboStageWin = input.ReadDouble();
            break;
          }
          case 25: {
            ComboStageMult = input.ReadDouble();
            break;
          }
          case 34: {
            awardDataVec_.AddEntriesFrom(input, _repeated_awardDataVec_codec);
            break;
          }
          case 42:
          case 40: {
            hitSlatePosVec_.AddEntriesFrom(input, _repeated_hitSlatePosVec_codec);
            break;
          }
          case 50: {
            fillSymbols_.AddEntriesFrom(input, _repeated_fillSymbols_codec);
            break;
          }
          case 58: {
            changeSymbols_.AddEntriesFrom(input, _repeated_changeSymbols_codec);
            break;
          }
          case 64: {
            AddRounds = input.ReadInt32();
            break;
          }
          case 72: {
            AddMults = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            fGChange_.AddEntriesFrom(input, _repeated_fGChange_codec);
            break;
          }
          case 90:
          case 88: {
            holy_.AddEntriesFrom(input, _repeated_holy_codec);
            break;
          }
          case 96: {
            FGChangeSymbol = input.ReadInt32();
            break;
          }
          case 106: {
            comboStageSymbolLog_.AddEntriesFrom(input, _repeated_comboStageSymbolLog_codec);
            break;
          }
          case 112: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comboStageSymbol_.AddEntriesFrom(ref input, _repeated_comboStageSymbol_codec);
            break;
          }
          case 17: {
            ComboStageWin = input.ReadDouble();
            break;
          }
          case 25: {
            ComboStageMult = input.ReadDouble();
            break;
          }
          case 34: {
            awardDataVec_.AddEntriesFrom(ref input, _repeated_awardDataVec_codec);
            break;
          }
          case 42:
          case 40: {
            hitSlatePosVec_.AddEntriesFrom(ref input, _repeated_hitSlatePosVec_codec);
            break;
          }
          case 50: {
            fillSymbols_.AddEntriesFrom(ref input, _repeated_fillSymbols_codec);
            break;
          }
          case 58: {
            changeSymbols_.AddEntriesFrom(ref input, _repeated_changeSymbols_codec);
            break;
          }
          case 64: {
            AddRounds = input.ReadInt32();
            break;
          }
          case 72: {
            AddMults = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            fGChange_.AddEntriesFrom(ref input, _repeated_fGChange_codec);
            break;
          }
          case 90:
          case 88: {
            holy_.AddEntriesFrom(ref input, _repeated_holy_codec);
            break;
          }
          case 96: {
            FGChangeSymbol = input.ReadInt32();
            break;
          }
          case 106: {
            comboStageSymbolLog_.AddEntriesFrom(ref input, _repeated_comboStageSymbolLog_codec);
            break;
          }
          case 112: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Petra.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_col_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> col_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Petra.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      symbol_ = other.symbol_;
      count_ = other.count_;
      lineNum_ = other.lineNum_;
      win_ = other.win_;
      posVec_ = other.posVec_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "LineNum" field.</summary>
    public const int LineNumFieldNumber = 3;
    private int lineNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LineNum {
      get { return lineNum_; }
      set {
        lineNum_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 4;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    /// <summary>Field number for the "PosVec" field.</summary>
    public const int PosVecFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_posVec_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> posVec_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PosVec {
      get { return posVec_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Count != other.Count) return false;
      if (LineNum != other.LineNum) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      if(!posVec_.Equals(other.posVec_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (LineNum != 0) hash ^= LineNum.GetHashCode();
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      hash ^= posVec_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (LineNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LineNum);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      posVec_.WriteTo(output, _repeated_posVec_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (LineNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LineNum);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      posVec_.WriteTo(ref output, _repeated_posVec_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (LineNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LineNum);
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      size += posVec_.CalculateSize(_repeated_posVec_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.LineNum != 0) {
        LineNum = other.LineNum;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      posVec_.Add(other.posVec_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            LineNum = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
          case 42:
          case 40: {
            posVec_.AddEntriesFrom(input, _repeated_posVec_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            LineNum = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
          case 42:
          case 40: {
            posVec_.AddEntriesFrom(ref input, _repeated_posVec_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
