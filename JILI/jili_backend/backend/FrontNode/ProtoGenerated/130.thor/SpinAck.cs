// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Thor {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhNKaWxpLlByb3RvY29scy50aG9yIrgBCgdTcGlu",
            "QWNrEjIKClJvdW5kUXVldWUYASADKAsyHi5KaWxpLlByb3RvY29scy50aG9y",
            "LlJvdW5kSW5mbxIUCgxGcmVlVG90YWxXaW4YAiABKAESOgoJQm9udXNJbmZv",
            "GAMgASgLMicuSmlsaS5Qcm90b2NvbHMudGhvci5Cb251c0dhbWVJbmZvQXJy",
            "YXkSFQoNQm9udXNUb3RhbFdpbhgEIAMoARIQCghUb3RhbFdpbhgFIAEoASJH",
            "ChJCb251c0dhbWVJbmZvQXJyYXkSMQoFQXJyYXkYASADKAsyIi5KaWxpLlBy",
            "b3RvY29scy50aG9yLkJvbnVzR2FtZUluZm8iYgoNQm9udXNHYW1lSW5mbxIO",
            "CgZTeW1ib2wYASABKAUSDgoGUmVzdWx0GAIgASgFEgsKA1dpbhgDIAEoARIT",
            "CgtIZWFsdGhQb2ludBgEIAEoBRIPCgdNYXhGbGFnGAUgASgIIq4BCglSb3Vu",
            "ZEluZm8SOwoOQ29tYm9TdGFnZURhdGEYASADKAsyIy5KaWxpLlByb3RvY29s",
            "cy50aG9yLkNvbWJvU3RhZ2VJbmZvEhAKCFJvdW5kV2luGAIgASgBEhUKDUF3",
            "YXJkVHlwZUZsYWcYAyABKAUSFwoPRnJlZVJlbWFpblJvdW5kGAQgASgFEhEK",
            "CUJvbnVzRmxhZxgFIAEoCBIPCgdNYXhGbGFnGAYgASgIIukBCg5Db21ib1N0",
            "YWdlSW5mbxI1ChBDb21ib1N0YWdlU3ltYm9sGAEgAygLMhsuSmlsaS5Qcm90",
            "b2NvbHMudGhvci5Db2x1bW4SFQoNQ29tYm9TdGFnZVdpbhgCIAEoARI0CgxB",
            "d2FyZERhdGFWZWMYAyADKAsyHi5KaWxpLlByb3RvY29scy50aG9yLkF3YXJk",
            "RGF0YRIwCgtGaWxsU3ltYm9scxgEIAMoCzIbLkppbGkuUHJvdG9jb2xzLnRo",
            "b3IuQ29sdW1uEhAKCEJvbnVzSGl0GAUgASgIEg8KB01heEZsYWcYBiABKAgi",
            "FQoGQ29sdW1uEgsKA0NvbBgBIAMoBSJFCglBd2FyZERhdGESDgoGU3ltYm9s",
            "GAEgASgFEg0KBUNvdW50GAIgASgFEgwKBExpbmUYAyABKAUSCwoDV2luGAQg",
            "ASgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Thor.SpinAck), global::Jili.Protocols.Thor.SpinAck.Parser, new[]{ "RoundQueue", "FreeTotalWin", "BonusInfo", "BonusTotalWin", "TotalWin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Thor.BonusGameInfoArray), global::Jili.Protocols.Thor.BonusGameInfoArray.Parser, new[]{ "Array" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Thor.BonusGameInfo), global::Jili.Protocols.Thor.BonusGameInfo.Parser, new[]{ "Symbol", "Result", "Win", "HealthPoint", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Thor.RoundInfo), global::Jili.Protocols.Thor.RoundInfo.Parser, new[]{ "ComboStageData", "RoundWin", "AwardTypeFlag", "FreeRemainRound", "BonusFlag", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Thor.ComboStageInfo), global::Jili.Protocols.Thor.ComboStageInfo.Parser, new[]{ "ComboStageSymbol", "ComboStageWin", "AwardDataVec", "FillSymbols", "BonusHit", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Thor.Column), global::Jili.Protocols.Thor.Column.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Thor.AwardData), global::Jili.Protocols.Thor.AwardData.Parser, new[]{ "Symbol", "Count", "Line", "Win" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Thor.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      roundQueue_ = other.roundQueue_.Clone();
      freeTotalWin_ = other.freeTotalWin_;
      bonusInfo_ = other.bonusInfo_ != null ? other.bonusInfo_.Clone() : null;
      bonusTotalWin_ = other.bonusTotalWin_.Clone();
      totalWin_ = other.totalWin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "RoundQueue" field.</summary>
    public const int RoundQueueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Thor.RoundInfo> _repeated_roundQueue_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Thor.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Thor.RoundInfo> roundQueue_ = new pbc::RepeatedField<global::Jili.Protocols.Thor.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Thor.RoundInfo> RoundQueue {
      get { return roundQueue_; }
    }

    /// <summary>Field number for the "FreeTotalWin" field.</summary>
    public const int FreeTotalWinFieldNumber = 2;
    private double freeTotalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FreeTotalWin {
      get { return freeTotalWin_; }
      set {
        freeTotalWin_ = value;
      }
    }

    /// <summary>Field number for the "BonusInfo" field.</summary>
    public const int BonusInfoFieldNumber = 3;
    private global::Jili.Protocols.Thor.BonusGameInfoArray bonusInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Thor.BonusGameInfoArray BonusInfo {
      get { return bonusInfo_; }
      set {
        bonusInfo_ = value;
      }
    }

    /// <summary>Field number for the "BonusTotalWin" field.</summary>
    public const int BonusTotalWinFieldNumber = 4;
    private static readonly pb::FieldCodec<double> _repeated_bonusTotalWin_codec
        = pb::FieldCodec.ForDouble(34);
    private readonly pbc::RepeatedField<double> bonusTotalWin_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> BonusTotalWin {
      get { return bonusTotalWin_; }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 5;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundQueue_.Equals(other.roundQueue_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FreeTotalWin, other.FreeTotalWin)) return false;
      if (!object.Equals(BonusInfo, other.BonusInfo)) return false;
      if(!bonusTotalWin_.Equals(other.bonusTotalWin_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundQueue_.GetHashCode();
      if (FreeTotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FreeTotalWin);
      if (bonusInfo_ != null) hash ^= BonusInfo.GetHashCode();
      hash ^= bonusTotalWin_.GetHashCode();
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundQueue_.WriteTo(output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (bonusInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BonusInfo);
      }
      bonusTotalWin_.WriteTo(output, _repeated_bonusTotalWin_codec);
      if (TotalWin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(TotalWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundQueue_.WriteTo(ref output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (bonusInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BonusInfo);
      }
      bonusTotalWin_.WriteTo(ref output, _repeated_bonusTotalWin_codec);
      if (TotalWin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(TotalWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roundQueue_.CalculateSize(_repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        size += 1 + 8;
      }
      if (bonusInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BonusInfo);
      }
      size += bonusTotalWin_.CalculateSize(_repeated_bonusTotalWin_codec);
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      roundQueue_.Add(other.roundQueue_);
      if (other.FreeTotalWin != 0D) {
        FreeTotalWin = other.FreeTotalWin;
      }
      if (other.bonusInfo_ != null) {
        if (bonusInfo_ == null) {
          BonusInfo = new global::Jili.Protocols.Thor.BonusGameInfoArray();
        }
        BonusInfo.MergeFrom(other.BonusInfo);
      }
      bonusTotalWin_.Add(other.bonusTotalWin_);
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 26: {
            if (bonusInfo_ == null) {
              BonusInfo = new global::Jili.Protocols.Thor.BonusGameInfoArray();
            }
            input.ReadMessage(BonusInfo);
            break;
          }
          case 34:
          case 33: {
            bonusTotalWin_.AddEntriesFrom(input, _repeated_bonusTotalWin_codec);
            break;
          }
          case 41: {
            TotalWin = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(ref input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 26: {
            if (bonusInfo_ == null) {
              BonusInfo = new global::Jili.Protocols.Thor.BonusGameInfoArray();
            }
            input.ReadMessage(BonusInfo);
            break;
          }
          case 34:
          case 33: {
            bonusTotalWin_.AddEntriesFrom(ref input, _repeated_bonusTotalWin_codec);
            break;
          }
          case 41: {
            TotalWin = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BonusGameInfoArray : pb::IMessage<BonusGameInfoArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BonusGameInfoArray> _parser = new pb::MessageParser<BonusGameInfoArray>(() => new BonusGameInfoArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BonusGameInfoArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Thor.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BonusGameInfoArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BonusGameInfoArray(BonusGameInfoArray other) : this() {
      array_ = other.array_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BonusGameInfoArray Clone() {
      return new BonusGameInfoArray(this);
    }

    /// <summary>Field number for the "Array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Thor.BonusGameInfo> _repeated_array_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Thor.BonusGameInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Thor.BonusGameInfo> array_ = new pbc::RepeatedField<global::Jili.Protocols.Thor.BonusGameInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Thor.BonusGameInfo> Array {
      get { return array_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BonusGameInfoArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BonusGameInfoArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      array_.WriteTo(output, _repeated_array_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      array_.WriteTo(ref output, _repeated_array_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BonusGameInfoArray other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            array_.AddEntriesFrom(ref input, _repeated_array_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BonusGameInfo : pb::IMessage<BonusGameInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BonusGameInfo> _parser = new pb::MessageParser<BonusGameInfo>(() => new BonusGameInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BonusGameInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Thor.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BonusGameInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BonusGameInfo(BonusGameInfo other) : this() {
      symbol_ = other.symbol_;
      result_ = other.result_;
      win_ = other.win_;
      healthPoint_ = other.healthPoint_;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BonusGameInfo Clone() {
      return new BonusGameInfo(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 2;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 3;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    /// <summary>Field number for the "HealthPoint" field.</summary>
    public const int HealthPointFieldNumber = 4;
    private int healthPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HealthPoint {
      get { return healthPoint_; }
      set {
        healthPoint_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 5;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BonusGameInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BonusGameInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Result != other.Result) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      if (HealthPoint != other.HealthPoint) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      if (HealthPoint != 0) hash ^= HealthPoint.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Result);
      }
      if (Win != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Win);
      }
      if (HealthPoint != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HealthPoint);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Result);
      }
      if (Win != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Win);
      }
      if (HealthPoint != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HealthPoint);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      if (HealthPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HealthPoint);
      }
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BonusGameInfo other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      if (other.HealthPoint != 0) {
        HealthPoint = other.HealthPoint;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Result = input.ReadInt32();
            break;
          }
          case 25: {
            Win = input.ReadDouble();
            break;
          }
          case 32: {
            HealthPoint = input.ReadInt32();
            break;
          }
          case 40: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Result = input.ReadInt32();
            break;
          }
          case 25: {
            Win = input.ReadDouble();
            break;
          }
          case 32: {
            HealthPoint = input.ReadInt32();
            break;
          }
          case 40: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoundInfo : pb::IMessage<RoundInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Thor.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo(RoundInfo other) : this() {
      comboStageData_ = other.comboStageData_.Clone();
      roundWin_ = other.roundWin_;
      awardTypeFlag_ = other.awardTypeFlag_;
      freeRemainRound_ = other.freeRemainRound_;
      bonusFlag_ = other.bonusFlag_;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "ComboStageData" field.</summary>
    public const int ComboStageDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Thor.ComboStageInfo> _repeated_comboStageData_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Thor.ComboStageInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Thor.ComboStageInfo> comboStageData_ = new pbc::RepeatedField<global::Jili.Protocols.Thor.ComboStageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Thor.ComboStageInfo> ComboStageData {
      get { return comboStageData_; }
    }

    /// <summary>Field number for the "RoundWin" field.</summary>
    public const int RoundWinFieldNumber = 2;
    private double roundWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RoundWin {
      get { return roundWin_; }
      set {
        roundWin_ = value;
      }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 3;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "FreeRemainRound" field.</summary>
    public const int FreeRemainRoundFieldNumber = 4;
    private int freeRemainRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeRemainRound {
      get { return freeRemainRound_; }
      set {
        freeRemainRound_ = value;
      }
    }

    /// <summary>Field number for the "BonusFlag" field.</summary>
    public const int BonusFlagFieldNumber = 5;
    private bool bonusFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BonusFlag {
      get { return bonusFlag_; }
      set {
        bonusFlag_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 6;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comboStageData_.Equals(other.comboStageData_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RoundWin, other.RoundWin)) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (FreeRemainRound != other.FreeRemainRound) return false;
      if (BonusFlag != other.BonusFlag) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comboStageData_.GetHashCode();
      if (RoundWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RoundWin);
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (FreeRemainRound != 0) hash ^= FreeRemainRound.GetHashCode();
      if (BonusFlag != false) hash ^= BonusFlag.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comboStageData_.WriteTo(output, _repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RoundWin);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeRemainRound);
      }
      if (BonusFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(BonusFlag);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(48);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comboStageData_.WriteTo(ref output, _repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RoundWin);
      }
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeRemainRound);
      }
      if (BonusFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(BonusFlag);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(48);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += comboStageData_.CalculateSize(_repeated_comboStageData_codec);
      if (RoundWin != 0D) {
        size += 1 + 8;
      }
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeRemainRound);
      }
      if (BonusFlag != false) {
        size += 1 + 1;
      }
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      comboStageData_.Add(other.comboStageData_);
      if (other.RoundWin != 0D) {
        RoundWin = other.RoundWin;
      }
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.FreeRemainRound != 0) {
        FreeRemainRound = other.FreeRemainRound;
      }
      if (other.BonusFlag != false) {
        BonusFlag = other.BonusFlag;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comboStageData_.AddEntriesFrom(input, _repeated_comboStageData_codec);
            break;
          }
          case 17: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 24: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 32: {
            FreeRemainRound = input.ReadInt32();
            break;
          }
          case 40: {
            BonusFlag = input.ReadBool();
            break;
          }
          case 48: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comboStageData_.AddEntriesFrom(ref input, _repeated_comboStageData_codec);
            break;
          }
          case 17: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 24: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 32: {
            FreeRemainRound = input.ReadInt32();
            break;
          }
          case 40: {
            BonusFlag = input.ReadBool();
            break;
          }
          case 48: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ComboStageInfo : pb::IMessage<ComboStageInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComboStageInfo> _parser = new pb::MessageParser<ComboStageInfo>(() => new ComboStageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComboStageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Thor.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo(ComboStageInfo other) : this() {
      comboStageSymbol_ = other.comboStageSymbol_.Clone();
      comboStageWin_ = other.comboStageWin_;
      awardDataVec_ = other.awardDataVec_.Clone();
      fillSymbols_ = other.fillSymbols_.Clone();
      bonusHit_ = other.bonusHit_;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboStageInfo Clone() {
      return new ComboStageInfo(this);
    }

    /// <summary>Field number for the "ComboStageSymbol" field.</summary>
    public const int ComboStageSymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Thor.Column> _repeated_comboStageSymbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Thor.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Thor.Column> comboStageSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Thor.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Thor.Column> ComboStageSymbol {
      get { return comboStageSymbol_; }
    }

    /// <summary>Field number for the "ComboStageWin" field.</summary>
    public const int ComboStageWinFieldNumber = 2;
    private double comboStageWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ComboStageWin {
      get { return comboStageWin_; }
      set {
        comboStageWin_ = value;
      }
    }

    /// <summary>Field number for the "AwardDataVec" field.</summary>
    public const int AwardDataVecFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Thor.AwardData> _repeated_awardDataVec_codec
        = pb::FieldCodec.ForMessage(26, global::Jili.Protocols.Thor.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Thor.AwardData> awardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Thor.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Thor.AwardData> AwardDataVec {
      get { return awardDataVec_; }
    }

    /// <summary>Field number for the "FillSymbols" field.</summary>
    public const int FillSymbolsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Thor.Column> _repeated_fillSymbols_codec
        = pb::FieldCodec.ForMessage(34, global::Jili.Protocols.Thor.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Thor.Column> fillSymbols_ = new pbc::RepeatedField<global::Jili.Protocols.Thor.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Thor.Column> FillSymbols {
      get { return fillSymbols_; }
    }

    /// <summary>Field number for the "BonusHit" field.</summary>
    public const int BonusHitFieldNumber = 5;
    private bool bonusHit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BonusHit {
      get { return bonusHit_; }
      set {
        bonusHit_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 6;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComboStageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComboStageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comboStageSymbol_.Equals(other.comboStageSymbol_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ComboStageWin, other.ComboStageWin)) return false;
      if(!awardDataVec_.Equals(other.awardDataVec_)) return false;
      if(!fillSymbols_.Equals(other.fillSymbols_)) return false;
      if (BonusHit != other.BonusHit) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comboStageSymbol_.GetHashCode();
      if (ComboStageWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ComboStageWin);
      hash ^= awardDataVec_.GetHashCode();
      hash ^= fillSymbols_.GetHashCode();
      if (BonusHit != false) hash ^= BonusHit.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comboStageSymbol_.WriteTo(output, _repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ComboStageWin);
      }
      awardDataVec_.WriteTo(output, _repeated_awardDataVec_codec);
      fillSymbols_.WriteTo(output, _repeated_fillSymbols_codec);
      if (BonusHit != false) {
        output.WriteRawTag(40);
        output.WriteBool(BonusHit);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(48);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comboStageSymbol_.WriteTo(ref output, _repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ComboStageWin);
      }
      awardDataVec_.WriteTo(ref output, _repeated_awardDataVec_codec);
      fillSymbols_.WriteTo(ref output, _repeated_fillSymbols_codec);
      if (BonusHit != false) {
        output.WriteRawTag(40);
        output.WriteBool(BonusHit);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(48);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += comboStageSymbol_.CalculateSize(_repeated_comboStageSymbol_codec);
      if (ComboStageWin != 0D) {
        size += 1 + 8;
      }
      size += awardDataVec_.CalculateSize(_repeated_awardDataVec_codec);
      size += fillSymbols_.CalculateSize(_repeated_fillSymbols_codec);
      if (BonusHit != false) {
        size += 1 + 1;
      }
      if (MaxFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComboStageInfo other) {
      if (other == null) {
        return;
      }
      comboStageSymbol_.Add(other.comboStageSymbol_);
      if (other.ComboStageWin != 0D) {
        ComboStageWin = other.ComboStageWin;
      }
      awardDataVec_.Add(other.awardDataVec_);
      fillSymbols_.Add(other.fillSymbols_);
      if (other.BonusHit != false) {
        BonusHit = other.BonusHit;
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comboStageSymbol_.AddEntriesFrom(input, _repeated_comboStageSymbol_codec);
            break;
          }
          case 17: {
            ComboStageWin = input.ReadDouble();
            break;
          }
          case 26: {
            awardDataVec_.AddEntriesFrom(input, _repeated_awardDataVec_codec);
            break;
          }
          case 34: {
            fillSymbols_.AddEntriesFrom(input, _repeated_fillSymbols_codec);
            break;
          }
          case 40: {
            BonusHit = input.ReadBool();
            break;
          }
          case 48: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comboStageSymbol_.AddEntriesFrom(ref input, _repeated_comboStageSymbol_codec);
            break;
          }
          case 17: {
            ComboStageWin = input.ReadDouble();
            break;
          }
          case 26: {
            awardDataVec_.AddEntriesFrom(ref input, _repeated_awardDataVec_codec);
            break;
          }
          case 34: {
            fillSymbols_.AddEntriesFrom(ref input, _repeated_fillSymbols_codec);
            break;
          }
          case 40: {
            BonusHit = input.ReadBool();
            break;
          }
          case 48: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Thor.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_col_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> col_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Thor.SpinAckReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      symbol_ = other.symbol_;
      count_ = other.count_;
      line_ = other.line_;
      win_ = other.win_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Line" field.</summary>
    public const int LineFieldNumber = 3;
    private int line_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Line {
      get { return line_; }
      set {
        line_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 4;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Count != other.Count) return false;
      if (Line != other.Line) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Line != 0) hash ^= Line.GetHashCode();
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Line != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Line);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Line != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Line);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Line != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Line);
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Line != 0) {
        Line = other.Line;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Line = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Line = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
