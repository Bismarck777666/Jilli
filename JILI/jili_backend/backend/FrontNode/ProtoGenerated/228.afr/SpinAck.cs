// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpinAck.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jili.Protocols.Afr {

  /// <summary>Holder for reflection information generated from SpinAck.proto</summary>
  public static partial class SpinAckReflection {

    #region Descriptor
    /// <summary>File descriptor for SpinAck.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinAckReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TcGluQWNrLnByb3RvEhJKaWxpLlByb3RvY29scy5hZnIitAEKB1NwaW5B",
            "Y2sSMQoKUm91bmRRdWV1ZRgBIAMoCzIdLkppbGkuUHJvdG9jb2xzLmFmci5S",
            "b3VuZEluZm8SFAoMRnJlZVRvdGFsV2luGAIgASgBEhAKCFRvdGFsV2luGAMg",
            "ASgBEhEKCVNob3dJbmRleBgEIAEoCRIQCghOb3dNb25leRgFIAEoARIPCgdB",
            "Y2tUeXBlGAYgASgFEgsKA0JldBgHIAEoARILCgNSVFAYCCABKAEi0QQKCVJv",
            "dW5kSW5mbxIvCgtQbGF0ZVN5bWJvbBgBIAMoCzIaLkppbGkuUHJvdG9jb2xz",
            "LmFmci5Db2x1bW4SMwoMQXdhcmREYXRhVmVjGAIgAygLMh0uSmlsaS5Qcm90",
            "b2NvbHMuYWZyLkF3YXJkRGF0YRIVCg1Bd2FyZFR5cGVGbGFnGAMgASgFEhcK",
            "D0ZyZWVSZW1haW5Sb3VuZBgEIAEoBRIUCgxGcmVlTm93Um91bmQYBSABKAUS",
            "EAoIQWRkUm91bmQYBiABKAUSEgoKRkdOb3dCZWFucxgHIAEoBRISCgpGR05v",
            "d0xldmVsGAggASgFEhUKDU15c3RlcnlTeW1ib2wYCSABKAUSEAoITmV3QmVh",
            "bnMYCiADKAUSEQoJVXBkYXRlUG9zGAsgAygFEhIKCk15c3RlcnlQb3MYDCAD",
            "KAUSEAoIUm91bmRXaW4YDSABKAESEAoIQXZnUHJpY2UYDiABKAESLgoEVG9w",
            "MxgPIAMoCzIgLkppbGkuUHJvdG9jb2xzLmFmci5Db2x1bW5Eb3VibGUSGgoS",
            "UmFuZG9tVHJhbnNTeW1ib2xzGBAgAygFEhYKDlJhbmRvbVRyYW5zUG9zGBEg",
            "AygFEjIKDlBsYXRlU3ltYm9sTG9nGBIgAygLMhouSmlsaS5Qcm90b2NvbHMu",
            "YWZyLkNvbHVtbhITCgtOZXdCZWFuc0xvZxgTIAMoBRIsCgVTdGF0ZRgUIAEo",
            "CzIdLkppbGkuUHJvdG9jb2xzLmFmci5TdGF0ZUluZm8SDwoHTWF4RmxhZxgV",
            "IAEoCCLDAQoJU3RhdGVJbmZvEjMKD1N5bmNQbGF0ZVN5bWJvbBgBIAMoCzIa",
            "LkppbGkuUHJvdG9jb2xzLmFmci5Db2x1bW4SEgoKTXlzdGVyeVBvcxgCIAMo",
            "BRIQCghOZXdCZWFucxgDIAMoBRIQCghBdmdQcmljZRgEIAEoARILCgNCZXQY",
            "BSABKAESDAoERG9uZRgGIAEoCBIuCgRUb3AzGAcgAygLMiAuSmlsaS5Qcm90",
            "b2NvbHMuYWZyLkNvbHVtbkRvdWJsZSIbCgxDb2x1bW5Eb3VibGUSCwoDQ29s",
            "GAEgAygBIhUKBkNvbHVtbhILCgNDb2wYASADKAUiVQoJQXdhcmREYXRhEg4K",
            "BlN5bWJvbBgBIAEoBRINCgVDb3VudBgCIAEoBRIMCgRMaW5lGAMgASgFEgsK",
            "A1dpbhgEIAEoARIOCgZQb3NWZWMYBSADKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Afr.SpinAck), global::Jili.Protocols.Afr.SpinAck.Parser, new[]{ "RoundQueue", "FreeTotalWin", "TotalWin", "ShowIndex", "NowMoney", "AckType", "Bet", "RTP" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Afr.RoundInfo), global::Jili.Protocols.Afr.RoundInfo.Parser, new[]{ "PlateSymbol", "AwardDataVec", "AwardTypeFlag", "FreeRemainRound", "FreeNowRound", "AddRound", "FGNowBeans", "FGNowLevel", "MysterySymbol", "NewBeans", "UpdatePos", "MysteryPos", "RoundWin", "AvgPrice", "Top3", "RandomTransSymbols", "RandomTransPos", "PlateSymbolLog", "NewBeansLog", "State", "MaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Afr.StateInfo), global::Jili.Protocols.Afr.StateInfo.Parser, new[]{ "SyncPlateSymbol", "MysteryPos", "NewBeans", "AvgPrice", "Bet", "Done", "Top3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Afr.ColumnDouble), global::Jili.Protocols.Afr.ColumnDouble.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Afr.Column), global::Jili.Protocols.Afr.Column.Parser, new[]{ "Col" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jili.Protocols.Afr.AwardData), global::Jili.Protocols.Afr.AwardData.Parser, new[]{ "Symbol", "Count", "Line", "Win", "PosVec" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpinAck : pb::IMessage<SpinAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinAck> _parser = new pb::MessageParser<SpinAck>(() => new SpinAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Afr.SpinAckReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck(SpinAck other) : this() {
      roundQueue_ = other.roundQueue_.Clone();
      freeTotalWin_ = other.freeTotalWin_;
      totalWin_ = other.totalWin_;
      showIndex_ = other.showIndex_;
      nowMoney_ = other.nowMoney_;
      ackType_ = other.ackType_;
      bet_ = other.bet_;
      rTP_ = other.rTP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinAck Clone() {
      return new SpinAck(this);
    }

    /// <summary>Field number for the "RoundQueue" field.</summary>
    public const int RoundQueueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Afr.RoundInfo> _repeated_roundQueue_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Afr.RoundInfo.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Afr.RoundInfo> roundQueue_ = new pbc::RepeatedField<global::Jili.Protocols.Afr.RoundInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Afr.RoundInfo> RoundQueue {
      get { return roundQueue_; }
    }

    /// <summary>Field number for the "FreeTotalWin" field.</summary>
    public const int FreeTotalWinFieldNumber = 2;
    private double freeTotalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FreeTotalWin {
      get { return freeTotalWin_; }
      set {
        freeTotalWin_ = value;
      }
    }

    /// <summary>Field number for the "TotalWin" field.</summary>
    public const int TotalWinFieldNumber = 3;
    private double totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "ShowIndex" field.</summary>
    public const int ShowIndexFieldNumber = 4;
    private string showIndex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShowIndex {
      get { return showIndex_; }
      set {
        showIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NowMoney" field.</summary>
    public const int NowMoneyFieldNumber = 5;
    private double nowMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NowMoney {
      get { return nowMoney_; }
      set {
        nowMoney_ = value;
      }
    }

    /// <summary>Field number for the "AckType" field.</summary>
    public const int AckTypeFieldNumber = 6;
    private int ackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "Bet" field.</summary>
    public const int BetFieldNumber = 7;
    private double bet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "RTP" field.</summary>
    public const int RTPFieldNumber = 8;
    private double rTP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RTP {
      get { return rTP_; }
      set {
        rTP_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundQueue_.Equals(other.roundQueue_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FreeTotalWin, other.FreeTotalWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalWin, other.TotalWin)) return false;
      if (ShowIndex != other.ShowIndex) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NowMoney, other.NowMoney)) return false;
      if (AckType != other.AckType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bet, other.Bet)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RTP, other.RTP)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundQueue_.GetHashCode();
      if (FreeTotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FreeTotalWin);
      if (TotalWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalWin);
      if (ShowIndex.Length != 0) hash ^= ShowIndex.GetHashCode();
      if (NowMoney != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NowMoney);
      if (AckType != 0) hash ^= AckType.GetHashCode();
      if (Bet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bet);
      if (RTP != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RTP);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundQueue_.WriteTo(output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AckType);
      }
      if (Bet != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Bet);
      }
      if (RTP != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(RTP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundQueue_.WriteTo(ref output, _repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FreeTotalWin);
      }
      if (TotalWin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalWin);
      }
      if (ShowIndex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowIndex);
      }
      if (NowMoney != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(NowMoney);
      }
      if (AckType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AckType);
      }
      if (Bet != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Bet);
      }
      if (RTP != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(RTP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roundQueue_.CalculateSize(_repeated_roundQueue_codec);
      if (FreeTotalWin != 0D) {
        size += 1 + 8;
      }
      if (TotalWin != 0D) {
        size += 1 + 8;
      }
      if (ShowIndex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowIndex);
      }
      if (NowMoney != 0D) {
        size += 1 + 8;
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckType);
      }
      if (Bet != 0D) {
        size += 1 + 8;
      }
      if (RTP != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinAck other) {
      if (other == null) {
        return;
      }
      roundQueue_.Add(other.roundQueue_);
      if (other.FreeTotalWin != 0D) {
        FreeTotalWin = other.FreeTotalWin;
      }
      if (other.TotalWin != 0D) {
        TotalWin = other.TotalWin;
      }
      if (other.ShowIndex.Length != 0) {
        ShowIndex = other.ShowIndex;
      }
      if (other.NowMoney != 0D) {
        NowMoney = other.NowMoney;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      if (other.Bet != 0D) {
        Bet = other.Bet;
      }
      if (other.RTP != 0D) {
        RTP = other.RTP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 34: {
            ShowIndex = input.ReadString();
            break;
          }
          case 41: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 48: {
            AckType = input.ReadInt32();
            break;
          }
          case 57: {
            Bet = input.ReadDouble();
            break;
          }
          case 65: {
            RTP = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundQueue_.AddEntriesFrom(ref input, _repeated_roundQueue_codec);
            break;
          }
          case 17: {
            FreeTotalWin = input.ReadDouble();
            break;
          }
          case 25: {
            TotalWin = input.ReadDouble();
            break;
          }
          case 34: {
            ShowIndex = input.ReadString();
            break;
          }
          case 41: {
            NowMoney = input.ReadDouble();
            break;
          }
          case 48: {
            AckType = input.ReadInt32();
            break;
          }
          case 57: {
            Bet = input.ReadDouble();
            break;
          }
          case 65: {
            RTP = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoundInfo : pb::IMessage<RoundInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundInfo> _parser = new pb::MessageParser<RoundInfo>(() => new RoundInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Afr.SpinAckReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo(RoundInfo other) : this() {
      plateSymbol_ = other.plateSymbol_.Clone();
      awardDataVec_ = other.awardDataVec_.Clone();
      awardTypeFlag_ = other.awardTypeFlag_;
      freeRemainRound_ = other.freeRemainRound_;
      freeNowRound_ = other.freeNowRound_;
      addRound_ = other.addRound_;
      fGNowBeans_ = other.fGNowBeans_;
      fGNowLevel_ = other.fGNowLevel_;
      mysterySymbol_ = other.mysterySymbol_;
      newBeans_ = other.newBeans_.Clone();
      updatePos_ = other.updatePos_.Clone();
      mysteryPos_ = other.mysteryPos_.Clone();
      roundWin_ = other.roundWin_;
      avgPrice_ = other.avgPrice_;
      top3_ = other.top3_.Clone();
      randomTransSymbols_ = other.randomTransSymbols_.Clone();
      randomTransPos_ = other.randomTransPos_.Clone();
      plateSymbolLog_ = other.plateSymbolLog_.Clone();
      newBeansLog_ = other.newBeansLog_.Clone();
      state_ = other.state_ != null ? other.state_.Clone() : null;
      maxFlag_ = other.maxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundInfo Clone() {
      return new RoundInfo(this);
    }

    /// <summary>Field number for the "PlateSymbol" field.</summary>
    public const int PlateSymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Afr.Column> _repeated_plateSymbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Afr.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Afr.Column> plateSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Afr.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Afr.Column> PlateSymbol {
      get { return plateSymbol_; }
    }

    /// <summary>Field number for the "AwardDataVec" field.</summary>
    public const int AwardDataVecFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Afr.AwardData> _repeated_awardDataVec_codec
        = pb::FieldCodec.ForMessage(18, global::Jili.Protocols.Afr.AwardData.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Afr.AwardData> awardDataVec_ = new pbc::RepeatedField<global::Jili.Protocols.Afr.AwardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Afr.AwardData> AwardDataVec {
      get { return awardDataVec_; }
    }

    /// <summary>Field number for the "AwardTypeFlag" field.</summary>
    public const int AwardTypeFlagFieldNumber = 3;
    private int awardTypeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardTypeFlag {
      get { return awardTypeFlag_; }
      set {
        awardTypeFlag_ = value;
      }
    }

    /// <summary>Field number for the "FreeRemainRound" field.</summary>
    public const int FreeRemainRoundFieldNumber = 4;
    private int freeRemainRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeRemainRound {
      get { return freeRemainRound_; }
      set {
        freeRemainRound_ = value;
      }
    }

    /// <summary>Field number for the "FreeNowRound" field.</summary>
    public const int FreeNowRoundFieldNumber = 5;
    private int freeNowRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeNowRound {
      get { return freeNowRound_; }
      set {
        freeNowRound_ = value;
      }
    }

    /// <summary>Field number for the "AddRound" field.</summary>
    public const int AddRoundFieldNumber = 6;
    private int addRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddRound {
      get { return addRound_; }
      set {
        addRound_ = value;
      }
    }

    /// <summary>Field number for the "FGNowBeans" field.</summary>
    public const int FGNowBeansFieldNumber = 7;
    private int fGNowBeans_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FGNowBeans {
      get { return fGNowBeans_; }
      set {
        fGNowBeans_ = value;
      }
    }

    /// <summary>Field number for the "FGNowLevel" field.</summary>
    public const int FGNowLevelFieldNumber = 8;
    private int fGNowLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FGNowLevel {
      get { return fGNowLevel_; }
      set {
        fGNowLevel_ = value;
      }
    }

    /// <summary>Field number for the "MysterySymbol" field.</summary>
    public const int MysterySymbolFieldNumber = 9;
    private int mysterySymbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MysterySymbol {
      get { return mysterySymbol_; }
      set {
        mysterySymbol_ = value;
      }
    }

    /// <summary>Field number for the "NewBeans" field.</summary>
    public const int NewBeansFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_newBeans_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> newBeans_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> NewBeans {
      get { return newBeans_; }
    }

    /// <summary>Field number for the "UpdatePos" field.</summary>
    public const int UpdatePosFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_updatePos_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> updatePos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> UpdatePos {
      get { return updatePos_; }
    }

    /// <summary>Field number for the "MysteryPos" field.</summary>
    public const int MysteryPosFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_mysteryPos_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> mysteryPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MysteryPos {
      get { return mysteryPos_; }
    }

    /// <summary>Field number for the "RoundWin" field.</summary>
    public const int RoundWinFieldNumber = 13;
    private double roundWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RoundWin {
      get { return roundWin_; }
      set {
        roundWin_ = value;
      }
    }

    /// <summary>Field number for the "AvgPrice" field.</summary>
    public const int AvgPriceFieldNumber = 14;
    private double avgPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AvgPrice {
      get { return avgPrice_; }
      set {
        avgPrice_ = value;
      }
    }

    /// <summary>Field number for the "Top3" field.</summary>
    public const int Top3FieldNumber = 15;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Afr.ColumnDouble> _repeated_top3_codec
        = pb::FieldCodec.ForMessage(122, global::Jili.Protocols.Afr.ColumnDouble.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Afr.ColumnDouble> top3_ = new pbc::RepeatedField<global::Jili.Protocols.Afr.ColumnDouble>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Afr.ColumnDouble> Top3 {
      get { return top3_; }
    }

    /// <summary>Field number for the "RandomTransSymbols" field.</summary>
    public const int RandomTransSymbolsFieldNumber = 16;
    private static readonly pb::FieldCodec<int> _repeated_randomTransSymbols_codec
        = pb::FieldCodec.ForInt32(130);
    private readonly pbc::RepeatedField<int> randomTransSymbols_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> RandomTransSymbols {
      get { return randomTransSymbols_; }
    }

    /// <summary>Field number for the "RandomTransPos" field.</summary>
    public const int RandomTransPosFieldNumber = 17;
    private static readonly pb::FieldCodec<int> _repeated_randomTransPos_codec
        = pb::FieldCodec.ForInt32(138);
    private readonly pbc::RepeatedField<int> randomTransPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> RandomTransPos {
      get { return randomTransPos_; }
    }

    /// <summary>Field number for the "PlateSymbolLog" field.</summary>
    public const int PlateSymbolLogFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Afr.Column> _repeated_plateSymbolLog_codec
        = pb::FieldCodec.ForMessage(146, global::Jili.Protocols.Afr.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Afr.Column> plateSymbolLog_ = new pbc::RepeatedField<global::Jili.Protocols.Afr.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Afr.Column> PlateSymbolLog {
      get { return plateSymbolLog_; }
    }

    /// <summary>Field number for the "NewBeansLog" field.</summary>
    public const int NewBeansLogFieldNumber = 19;
    private static readonly pb::FieldCodec<int> _repeated_newBeansLog_codec
        = pb::FieldCodec.ForInt32(154);
    private readonly pbc::RepeatedField<int> newBeansLog_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> NewBeansLog {
      get { return newBeansLog_; }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 20;
    private global::Jili.Protocols.Afr.StateInfo state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Jili.Protocols.Afr.StateInfo State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "MaxFlag" field.</summary>
    public const int MaxFlagFieldNumber = 21;
    private bool maxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaxFlag {
      get { return maxFlag_; }
      set {
        maxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!plateSymbol_.Equals(other.plateSymbol_)) return false;
      if(!awardDataVec_.Equals(other.awardDataVec_)) return false;
      if (AwardTypeFlag != other.AwardTypeFlag) return false;
      if (FreeRemainRound != other.FreeRemainRound) return false;
      if (FreeNowRound != other.FreeNowRound) return false;
      if (AddRound != other.AddRound) return false;
      if (FGNowBeans != other.FGNowBeans) return false;
      if (FGNowLevel != other.FGNowLevel) return false;
      if (MysterySymbol != other.MysterySymbol) return false;
      if(!newBeans_.Equals(other.newBeans_)) return false;
      if(!updatePos_.Equals(other.updatePos_)) return false;
      if(!mysteryPos_.Equals(other.mysteryPos_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RoundWin, other.RoundWin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgPrice, other.AvgPrice)) return false;
      if(!top3_.Equals(other.top3_)) return false;
      if(!randomTransSymbols_.Equals(other.randomTransSymbols_)) return false;
      if(!randomTransPos_.Equals(other.randomTransPos_)) return false;
      if(!plateSymbolLog_.Equals(other.plateSymbolLog_)) return false;
      if(!newBeansLog_.Equals(other.newBeansLog_)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (MaxFlag != other.MaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= plateSymbol_.GetHashCode();
      hash ^= awardDataVec_.GetHashCode();
      if (AwardTypeFlag != 0) hash ^= AwardTypeFlag.GetHashCode();
      if (FreeRemainRound != 0) hash ^= FreeRemainRound.GetHashCode();
      if (FreeNowRound != 0) hash ^= FreeNowRound.GetHashCode();
      if (AddRound != 0) hash ^= AddRound.GetHashCode();
      if (FGNowBeans != 0) hash ^= FGNowBeans.GetHashCode();
      if (FGNowLevel != 0) hash ^= FGNowLevel.GetHashCode();
      if (MysterySymbol != 0) hash ^= MysterySymbol.GetHashCode();
      hash ^= newBeans_.GetHashCode();
      hash ^= updatePos_.GetHashCode();
      hash ^= mysteryPos_.GetHashCode();
      if (RoundWin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RoundWin);
      if (AvgPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgPrice);
      hash ^= top3_.GetHashCode();
      hash ^= randomTransSymbols_.GetHashCode();
      hash ^= randomTransPos_.GetHashCode();
      hash ^= plateSymbolLog_.GetHashCode();
      hash ^= newBeansLog_.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (MaxFlag != false) hash ^= MaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      plateSymbol_.WriteTo(output, _repeated_plateSymbol_codec);
      awardDataVec_.WriteTo(output, _repeated_awardDataVec_codec);
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeRemainRound);
      }
      if (FreeNowRound != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeNowRound);
      }
      if (AddRound != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AddRound);
      }
      if (FGNowBeans != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FGNowBeans);
      }
      if (FGNowLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FGNowLevel);
      }
      if (MysterySymbol != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MysterySymbol);
      }
      newBeans_.WriteTo(output, _repeated_newBeans_codec);
      updatePos_.WriteTo(output, _repeated_updatePos_codec);
      mysteryPos_.WriteTo(output, _repeated_mysteryPos_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(RoundWin);
      }
      if (AvgPrice != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(AvgPrice);
      }
      top3_.WriteTo(output, _repeated_top3_codec);
      randomTransSymbols_.WriteTo(output, _repeated_randomTransSymbols_codec);
      randomTransPos_.WriteTo(output, _repeated_randomTransPos_codec);
      plateSymbolLog_.WriteTo(output, _repeated_plateSymbolLog_codec);
      newBeansLog_.WriteTo(output, _repeated_newBeansLog_codec);
      if (state_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(State);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      plateSymbol_.WriteTo(ref output, _repeated_plateSymbol_codec);
      awardDataVec_.WriteTo(ref output, _repeated_awardDataVec_codec);
      if (AwardTypeFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeRemainRound);
      }
      if (FreeNowRound != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeNowRound);
      }
      if (AddRound != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AddRound);
      }
      if (FGNowBeans != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FGNowBeans);
      }
      if (FGNowLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FGNowLevel);
      }
      if (MysterySymbol != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MysterySymbol);
      }
      newBeans_.WriteTo(ref output, _repeated_newBeans_codec);
      updatePos_.WriteTo(ref output, _repeated_updatePos_codec);
      mysteryPos_.WriteTo(ref output, _repeated_mysteryPos_codec);
      if (RoundWin != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(RoundWin);
      }
      if (AvgPrice != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(AvgPrice);
      }
      top3_.WriteTo(ref output, _repeated_top3_codec);
      randomTransSymbols_.WriteTo(ref output, _repeated_randomTransSymbols_codec);
      randomTransPos_.WriteTo(ref output, _repeated_randomTransPos_codec);
      plateSymbolLog_.WriteTo(ref output, _repeated_plateSymbolLog_codec);
      newBeansLog_.WriteTo(ref output, _repeated_newBeansLog_codec);
      if (state_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(State);
      }
      if (MaxFlag != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(MaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += plateSymbol_.CalculateSize(_repeated_plateSymbol_codec);
      size += awardDataVec_.CalculateSize(_repeated_awardDataVec_codec);
      if (AwardTypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTypeFlag);
      }
      if (FreeRemainRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeRemainRound);
      }
      if (FreeNowRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeNowRound);
      }
      if (AddRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddRound);
      }
      if (FGNowBeans != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FGNowBeans);
      }
      if (FGNowLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FGNowLevel);
      }
      if (MysterySymbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MysterySymbol);
      }
      size += newBeans_.CalculateSize(_repeated_newBeans_codec);
      size += updatePos_.CalculateSize(_repeated_updatePos_codec);
      size += mysteryPos_.CalculateSize(_repeated_mysteryPos_codec);
      if (RoundWin != 0D) {
        size += 1 + 8;
      }
      if (AvgPrice != 0D) {
        size += 1 + 8;
      }
      size += top3_.CalculateSize(_repeated_top3_codec);
      size += randomTransSymbols_.CalculateSize(_repeated_randomTransSymbols_codec);
      size += randomTransPos_.CalculateSize(_repeated_randomTransPos_codec);
      size += plateSymbolLog_.CalculateSize(_repeated_plateSymbolLog_codec);
      size += newBeansLog_.CalculateSize(_repeated_newBeansLog_codec);
      if (state_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (MaxFlag != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundInfo other) {
      if (other == null) {
        return;
      }
      plateSymbol_.Add(other.plateSymbol_);
      awardDataVec_.Add(other.awardDataVec_);
      if (other.AwardTypeFlag != 0) {
        AwardTypeFlag = other.AwardTypeFlag;
      }
      if (other.FreeRemainRound != 0) {
        FreeRemainRound = other.FreeRemainRound;
      }
      if (other.FreeNowRound != 0) {
        FreeNowRound = other.FreeNowRound;
      }
      if (other.AddRound != 0) {
        AddRound = other.AddRound;
      }
      if (other.FGNowBeans != 0) {
        FGNowBeans = other.FGNowBeans;
      }
      if (other.FGNowLevel != 0) {
        FGNowLevel = other.FGNowLevel;
      }
      if (other.MysterySymbol != 0) {
        MysterySymbol = other.MysterySymbol;
      }
      newBeans_.Add(other.newBeans_);
      updatePos_.Add(other.updatePos_);
      mysteryPos_.Add(other.mysteryPos_);
      if (other.RoundWin != 0D) {
        RoundWin = other.RoundWin;
      }
      if (other.AvgPrice != 0D) {
        AvgPrice = other.AvgPrice;
      }
      top3_.Add(other.top3_);
      randomTransSymbols_.Add(other.randomTransSymbols_);
      randomTransPos_.Add(other.randomTransPos_);
      plateSymbolLog_.Add(other.plateSymbolLog_);
      newBeansLog_.Add(other.newBeansLog_);
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Jili.Protocols.Afr.StateInfo();
        }
        State.MergeFrom(other.State);
      }
      if (other.MaxFlag != false) {
        MaxFlag = other.MaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            plateSymbol_.AddEntriesFrom(input, _repeated_plateSymbol_codec);
            break;
          }
          case 18: {
            awardDataVec_.AddEntriesFrom(input, _repeated_awardDataVec_codec);
            break;
          }
          case 24: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 32: {
            FreeRemainRound = input.ReadInt32();
            break;
          }
          case 40: {
            FreeNowRound = input.ReadInt32();
            break;
          }
          case 48: {
            AddRound = input.ReadInt32();
            break;
          }
          case 56: {
            FGNowBeans = input.ReadInt32();
            break;
          }
          case 64: {
            FGNowLevel = input.ReadInt32();
            break;
          }
          case 72: {
            MysterySymbol = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            newBeans_.AddEntriesFrom(input, _repeated_newBeans_codec);
            break;
          }
          case 90:
          case 88: {
            updatePos_.AddEntriesFrom(input, _repeated_updatePos_codec);
            break;
          }
          case 98:
          case 96: {
            mysteryPos_.AddEntriesFrom(input, _repeated_mysteryPos_codec);
            break;
          }
          case 105: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 113: {
            AvgPrice = input.ReadDouble();
            break;
          }
          case 122: {
            top3_.AddEntriesFrom(input, _repeated_top3_codec);
            break;
          }
          case 130:
          case 128: {
            randomTransSymbols_.AddEntriesFrom(input, _repeated_randomTransSymbols_codec);
            break;
          }
          case 138:
          case 136: {
            randomTransPos_.AddEntriesFrom(input, _repeated_randomTransPos_codec);
            break;
          }
          case 146: {
            plateSymbolLog_.AddEntriesFrom(input, _repeated_plateSymbolLog_codec);
            break;
          }
          case 154:
          case 152: {
            newBeansLog_.AddEntriesFrom(input, _repeated_newBeansLog_codec);
            break;
          }
          case 162: {
            if (state_ == null) {
              State = new global::Jili.Protocols.Afr.StateInfo();
            }
            input.ReadMessage(State);
            break;
          }
          case 168: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            plateSymbol_.AddEntriesFrom(ref input, _repeated_plateSymbol_codec);
            break;
          }
          case 18: {
            awardDataVec_.AddEntriesFrom(ref input, _repeated_awardDataVec_codec);
            break;
          }
          case 24: {
            AwardTypeFlag = input.ReadInt32();
            break;
          }
          case 32: {
            FreeRemainRound = input.ReadInt32();
            break;
          }
          case 40: {
            FreeNowRound = input.ReadInt32();
            break;
          }
          case 48: {
            AddRound = input.ReadInt32();
            break;
          }
          case 56: {
            FGNowBeans = input.ReadInt32();
            break;
          }
          case 64: {
            FGNowLevel = input.ReadInt32();
            break;
          }
          case 72: {
            MysterySymbol = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            newBeans_.AddEntriesFrom(ref input, _repeated_newBeans_codec);
            break;
          }
          case 90:
          case 88: {
            updatePos_.AddEntriesFrom(ref input, _repeated_updatePos_codec);
            break;
          }
          case 98:
          case 96: {
            mysteryPos_.AddEntriesFrom(ref input, _repeated_mysteryPos_codec);
            break;
          }
          case 105: {
            RoundWin = input.ReadDouble();
            break;
          }
          case 113: {
            AvgPrice = input.ReadDouble();
            break;
          }
          case 122: {
            top3_.AddEntriesFrom(ref input, _repeated_top3_codec);
            break;
          }
          case 130:
          case 128: {
            randomTransSymbols_.AddEntriesFrom(ref input, _repeated_randomTransSymbols_codec);
            break;
          }
          case 138:
          case 136: {
            randomTransPos_.AddEntriesFrom(ref input, _repeated_randomTransPos_codec);
            break;
          }
          case 146: {
            plateSymbolLog_.AddEntriesFrom(ref input, _repeated_plateSymbolLog_codec);
            break;
          }
          case 154:
          case 152: {
            newBeansLog_.AddEntriesFrom(ref input, _repeated_newBeansLog_codec);
            break;
          }
          case 162: {
            if (state_ == null) {
              State = new global::Jili.Protocols.Afr.StateInfo();
            }
            input.ReadMessage(State);
            break;
          }
          case 168: {
            MaxFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StateInfo : pb::IMessage<StateInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StateInfo> _parser = new pb::MessageParser<StateInfo>(() => new StateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Afr.SpinAckReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StateInfo(StateInfo other) : this() {
      syncPlateSymbol_ = other.syncPlateSymbol_.Clone();
      mysteryPos_ = other.mysteryPos_.Clone();
      newBeans_ = other.newBeans_.Clone();
      avgPrice_ = other.avgPrice_;
      bet_ = other.bet_;
      done_ = other.done_;
      top3_ = other.top3_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StateInfo Clone() {
      return new StateInfo(this);
    }

    /// <summary>Field number for the "SyncPlateSymbol" field.</summary>
    public const int SyncPlateSymbolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Afr.Column> _repeated_syncPlateSymbol_codec
        = pb::FieldCodec.ForMessage(10, global::Jili.Protocols.Afr.Column.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Afr.Column> syncPlateSymbol_ = new pbc::RepeatedField<global::Jili.Protocols.Afr.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Afr.Column> SyncPlateSymbol {
      get { return syncPlateSymbol_; }
    }

    /// <summary>Field number for the "MysteryPos" field.</summary>
    public const int MysteryPosFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_mysteryPos_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> mysteryPos_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MysteryPos {
      get { return mysteryPos_; }
    }

    /// <summary>Field number for the "NewBeans" field.</summary>
    public const int NewBeansFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_newBeans_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> newBeans_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> NewBeans {
      get { return newBeans_; }
    }

    /// <summary>Field number for the "AvgPrice" field.</summary>
    public const int AvgPriceFieldNumber = 4;
    private double avgPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AvgPrice {
      get { return avgPrice_; }
      set {
        avgPrice_ = value;
      }
    }

    /// <summary>Field number for the "Bet" field.</summary>
    public const int BetFieldNumber = 5;
    private double bet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "Done" field.</summary>
    public const int DoneFieldNumber = 6;
    private bool done_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Done {
      get { return done_; }
      set {
        done_ = value;
      }
    }

    /// <summary>Field number for the "Top3" field.</summary>
    public const int Top3FieldNumber = 7;
    private static readonly pb::FieldCodec<global::Jili.Protocols.Afr.ColumnDouble> _repeated_top3_codec
        = pb::FieldCodec.ForMessage(58, global::Jili.Protocols.Afr.ColumnDouble.Parser);
    private readonly pbc::RepeatedField<global::Jili.Protocols.Afr.ColumnDouble> top3_ = new pbc::RepeatedField<global::Jili.Protocols.Afr.ColumnDouble>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Jili.Protocols.Afr.ColumnDouble> Top3 {
      get { return top3_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!syncPlateSymbol_.Equals(other.syncPlateSymbol_)) return false;
      if(!mysteryPos_.Equals(other.mysteryPos_)) return false;
      if(!newBeans_.Equals(other.newBeans_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgPrice, other.AvgPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bet, other.Bet)) return false;
      if (Done != other.Done) return false;
      if(!top3_.Equals(other.top3_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= syncPlateSymbol_.GetHashCode();
      hash ^= mysteryPos_.GetHashCode();
      hash ^= newBeans_.GetHashCode();
      if (AvgPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgPrice);
      if (Bet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bet);
      if (Done != false) hash ^= Done.GetHashCode();
      hash ^= top3_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      syncPlateSymbol_.WriteTo(output, _repeated_syncPlateSymbol_codec);
      mysteryPos_.WriteTo(output, _repeated_mysteryPos_codec);
      newBeans_.WriteTo(output, _repeated_newBeans_codec);
      if (AvgPrice != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(AvgPrice);
      }
      if (Bet != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Bet);
      }
      if (Done != false) {
        output.WriteRawTag(48);
        output.WriteBool(Done);
      }
      top3_.WriteTo(output, _repeated_top3_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      syncPlateSymbol_.WriteTo(ref output, _repeated_syncPlateSymbol_codec);
      mysteryPos_.WriteTo(ref output, _repeated_mysteryPos_codec);
      newBeans_.WriteTo(ref output, _repeated_newBeans_codec);
      if (AvgPrice != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(AvgPrice);
      }
      if (Bet != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Bet);
      }
      if (Done != false) {
        output.WriteRawTag(48);
        output.WriteBool(Done);
      }
      top3_.WriteTo(ref output, _repeated_top3_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += syncPlateSymbol_.CalculateSize(_repeated_syncPlateSymbol_codec);
      size += mysteryPos_.CalculateSize(_repeated_mysteryPos_codec);
      size += newBeans_.CalculateSize(_repeated_newBeans_codec);
      if (AvgPrice != 0D) {
        size += 1 + 8;
      }
      if (Bet != 0D) {
        size += 1 + 8;
      }
      if (Done != false) {
        size += 1 + 1;
      }
      size += top3_.CalculateSize(_repeated_top3_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StateInfo other) {
      if (other == null) {
        return;
      }
      syncPlateSymbol_.Add(other.syncPlateSymbol_);
      mysteryPos_.Add(other.mysteryPos_);
      newBeans_.Add(other.newBeans_);
      if (other.AvgPrice != 0D) {
        AvgPrice = other.AvgPrice;
      }
      if (other.Bet != 0D) {
        Bet = other.Bet;
      }
      if (other.Done != false) {
        Done = other.Done;
      }
      top3_.Add(other.top3_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            syncPlateSymbol_.AddEntriesFrom(input, _repeated_syncPlateSymbol_codec);
            break;
          }
          case 18:
          case 16: {
            mysteryPos_.AddEntriesFrom(input, _repeated_mysteryPos_codec);
            break;
          }
          case 26:
          case 24: {
            newBeans_.AddEntriesFrom(input, _repeated_newBeans_codec);
            break;
          }
          case 33: {
            AvgPrice = input.ReadDouble();
            break;
          }
          case 41: {
            Bet = input.ReadDouble();
            break;
          }
          case 48: {
            Done = input.ReadBool();
            break;
          }
          case 58: {
            top3_.AddEntriesFrom(input, _repeated_top3_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            syncPlateSymbol_.AddEntriesFrom(ref input, _repeated_syncPlateSymbol_codec);
            break;
          }
          case 18:
          case 16: {
            mysteryPos_.AddEntriesFrom(ref input, _repeated_mysteryPos_codec);
            break;
          }
          case 26:
          case 24: {
            newBeans_.AddEntriesFrom(ref input, _repeated_newBeans_codec);
            break;
          }
          case 33: {
            AvgPrice = input.ReadDouble();
            break;
          }
          case 41: {
            Bet = input.ReadDouble();
            break;
          }
          case 48: {
            Done = input.ReadBool();
            break;
          }
          case 58: {
            top3_.AddEntriesFrom(ref input, _repeated_top3_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ColumnDouble : pb::IMessage<ColumnDouble>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnDouble> _parser = new pb::MessageParser<ColumnDouble>(() => new ColumnDouble());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ColumnDouble> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Afr.SpinAckReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnDouble() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnDouble(ColumnDouble other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ColumnDouble Clone() {
      return new ColumnDouble(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_col_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> col_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ColumnDouble);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ColumnDouble other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ColumnDouble other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Afr.SpinAckReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      col_ = other.col_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "Col" field.</summary>
    public const int ColFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_col_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> col_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Col {
      get { return col_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!col_.Equals(other.col_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= col_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      col_.WriteTo(output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      col_.WriteTo(ref output, _repeated_col_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += col_.CalculateSize(_repeated_col_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      col_.Add(other.col_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AwardData : pb::IMessage<AwardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardData> _parser = new pb::MessageParser<AwardData>(() => new AwardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jili.Protocols.Afr.SpinAckReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData(AwardData other) : this() {
      symbol_ = other.symbol_;
      count_ = other.count_;
      line_ = other.line_;
      win_ = other.win_;
      posVec_ = other.posVec_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwardData Clone() {
      return new AwardData(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private int symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Line" field.</summary>
    public const int LineFieldNumber = 3;
    private int line_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Line {
      get { return line_; }
      set {
        line_ = value;
      }
    }

    /// <summary>Field number for the "Win" field.</summary>
    public const int WinFieldNumber = 4;
    private double win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    /// <summary>Field number for the "PosVec" field.</summary>
    public const int PosVecFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_posVec_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> posVec_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PosVec {
      get { return posVec_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Count != other.Count) return false;
      if (Line != other.Line) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Win, other.Win)) return false;
      if(!posVec_.Equals(other.posVec_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol != 0) hash ^= Symbol.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Line != 0) hash ^= Line.GetHashCode();
      if (Win != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Win);
      hash ^= posVec_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Line != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Line);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      posVec_.WriteTo(output, _repeated_posVec_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Symbol);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Line != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Line);
      }
      if (Win != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Win);
      }
      posVec_.WriteTo(ref output, _repeated_posVec_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Symbol);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Line != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Line);
      }
      if (Win != 0D) {
        size += 1 + 8;
      }
      size += posVec_.CalculateSize(_repeated_posVec_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwardData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol != 0) {
        Symbol = other.Symbol;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Line != 0) {
        Line = other.Line;
      }
      if (other.Win != 0D) {
        Win = other.Win;
      }
      posVec_.Add(other.posVec_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Line = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
          case 42:
          case 40: {
            posVec_.AddEntriesFrom(input, _repeated_posVec_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Symbol = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Line = input.ReadInt32();
            break;
          }
          case 33: {
            Win = input.ReadDouble();
            break;
          }
          case 42:
          case 40: {
            posVec_.AddEntriesFrom(ref input, _repeated_posVec_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
